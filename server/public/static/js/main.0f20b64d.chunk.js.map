{"version":3,"sources":["api/ajax.js","api/jsonp.js","api/index.js","util/memoryUtils.js","util/storageUtils.js","pages/login/login.jsx","components/header/index.jsx","components/left-nav/index.jsx","components/top-nav/index.jsx","pages/home/home.jsx","pages/home/home-edit.jsx","pages/home/home-view.jsx","components/loading/index.jsx","pages/product/category.jsx","pages/product/category-add.jsx","pages/product/category-edit.jsx","pages/product/category-view.jsx","pages/product/product.jsx","components/picture-wall/picture-wall.jsx","pages/product/product-add.jsx","pages/product/product-edit.jsx","pages/product/product-view.jsx","pages/order/order.jsx","pages/order/order-view.jsx","pages/order/stage.jsx","pages/member/member.jsx","pages/member/member-add.jsx","pages/member/member-edit.jsx","pages/member/member-view.jsx","pages/employee/employee.jsx","pages/employee/employee-add.jsx","pages/employee/employee-view.jsx","pages/employee/employee-edit.jsx","pages/employee/role.jsx","pages/employee/role-add.jsx","pages/employee/role-edit.jsx","pages/employee/user.jsx","pages/employee/user-add.jsx","pages/employee/user-edit.jsx","pages/stock/stock.jsx","pages/stock/stock-add.jsx","pages/stock/stock-log-view.jsx","pages/stock/stock-log.jsx","pages/stock/stock-view.jsx","pages/stock/stock-edit.jsx","pages/stock/inventory.jsx","pages/stock/inventory-view.jsx","pages/stock/inventory-add.jsx","pages/admin/admin.jsx","App.js","index.js","assets/images/logo.png"],"names":["ajax","url","data","type","Promise","resolve","axios","get","params","post","then","response","catch","err","message","error","jsonp","key","output","ouput","undefined","$","dataType","success","ret","WEATHER_URL","LOCATION_URL","reqWeather","location","reqCity","reqLogin","username","password","reqShopInfo","updateShopInfo","reqCategoryList","updateCategoryList","reqCategorySearch","name","reqCategoryDelete","id","addCategoryList","reqProductList","reqProductDelete","updateProductList","addProductList","reqProductSearch","reqImgDelete","reqStockList","reqStockCategory","reqStockDelete","reqStockSearch","addStockList","updateStockList","reqStocklogList","addStocklogList","reqCustomerList","reqMemberList","reqMemberSearch","value","reqMemberDelete","reqMemberAdd","updateMemberList","reqEmployeeList","reqEmployeeDelete","reqEmployeeSearch","addEmployeeList","updateEmployeeList","reqInventoryList","reqInventoryAdd","reqInventoryUpdate","reqInventoryDelete","reqUserList","reqUserDelete","reqUserAdd","reqUserUpdate","reqOrderList","reqWeekOrder","reqFrontdeskList","reqOrderSearch","reqOrderRange","start","end","reqOrderUpdate","reqRoleList","reqRoleDelete","reqRoleAdd","reqRoleUpdate","reqRuleUpdate","user","others","store","require","saveUser","set","getUser","removeUser","remove","Login","handleSubmit","e","preventDefault","props","form","validateFields","values","a","async","response1","response2","status","permission","forEach","item","role","split","memoryUtils","storageUtils","history","replace","console","log","validatePwd","rule","callback","length","test","validateUser","JSON","stringify","to","this","className","src","logo","alt","onSubmit","Item","getFieldDecorator","rules","validator","prefix","style","color","placeholder","htmlType","React","Component","create","Header","UNSAFE_componentWillMount","memoryUtil","result","ad_info","district","HeWeather6","weather_txt","now","cond_txt","weather_code","cond_code","intervalId","setInterval","time","Date","month","getMonth","setState","date","getFullYear","getDate","logout","loading","setTimeout","storageUtil","state","clearInterval","marginRight","placement","title","okType","onConfirm","okText","cancelText","withRouter","SubMenu","LeftNav","menu","icon","display","children","selectedKeys","getSelectedKeys","pathname","openKeys","getOpenKeys","rootSubmenuKeys","onOpenChange","latestOpenKey","find","indexOf","closeSubmenuAll","selectedKey","openKey","Logo","mode","theme","map","TopNav","nav","index","fontWeight","cursor","margin","Home","week","day","getDay","arr","splice","concat","weekData","handleDetail","push","getOption","text","tooltip","trigger","legend","selectedMode","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","series","stack","quantity","amount","getPercentForm","num","quantityPercent","amountPercent","textAlign","onClick","verticalAlign","width","border","borderBottom","padding","quantityToday","fontSize","amountToday","option","EditHome","opentime","businesshour","closetime","fileList","uid","profile","validateName","handleBack","moment","_i","timerID","getBase64","file","reject","reader","FileReader","readAsDataURL","onload","onerror","handleCancel","previewVisible","handlePreview","preview","originFileObj","previewImage","handleChange","uploadButton","extra","labelCol","span","wrapperCol","marginTop","label","initialValue","required","action","accept","listType","onPreview","onChange","visible","footer","onCancel","address","seats","tel","notice","format","story","TextArea","rows","treaty","ViewHome","handleEdit","BtnGroup","paddingLeft","height","borderRadius","Loading","size","Category","refreshTable","isLoading","level","levelText","msg","handleIsnavChange","record","isnav","handleSearch","handleDelete","confirm","content","onOk","handleAdd","handleView","columns","render","dataIndex","sorter","b","son","defaultChecked","filters","onFilter","Search","float","onSearch","enterButton","dataSource","rowKey","bordered","AddCategory","Number","Option","valuePropName","EditCategory","note","ViewCategory","textIndent","Product","componentWillUnmount","clearTimeout","formRef","rowSelection","selectedRowKeys","options1","options2","categoryFilters","item1","item2","category","categoryName","handleStateChange","string","obj","handleSelectChange","selectedType","hasOwnProperty","handleCascaderChange","operation","handleOperate","formRef1","resetFields","selectedCategory","toFixed","price","integral","onsale","isnew","recommend","options","PicturesWall","urlArr","imgs","urls","join","AddProduct","category_options","validateNumber","validatePrice","validateUnit","validateNoteProduct","validateIntegral","validateIntroduceTitle","validateIntroduceContent","deleted","hasFeedback","validate","addonAfter","Group","min","max","step","EditProduct","categoryOptions","number","unit","introduce","tip","description","discount_gold","discount_platinum","discount_diamond","pictures","ViewProduct","stateYes","stateNo","marginLeft","Order","componentDidMount","timerID1","searching","timerID2","response3","commodity","parse","customer","reverse","handleCustomerDetail","handleComplete","getTimeForm","hour","getHours","minute","getMinutes","second","getSeconds","getTimePicker","handleDatePickerChange","WeekPicker","handleWeekPickerChange","MonthPicker","handleMonthPickerChange","RangePicker","handleRangePickerChange","dateString","getTime","startOf","endOf","dates","dateStrings","column","seat","count","createtime","starArr","i","stars","urged","overflow","defaultValue","ViewOrder","payment","evaluation","Stage","filter","Member","AddCustomer","orderid","addonBefore","buttonStyle","Button","EditCustomer","ViewCustomer","Employee","department","departmentFilter","duty","dutyFilter","Set","workid","gender","age","entrytime","salary","AddEmployee","handleNext","current","handlePrevious","birthday","graduatetime","onTabChange","getDateTime","getMonthTime","value1","formItemLayout","contentList","tab1","identity","nation","origin","marriage","degree","institution","tab2","steps","tabList","tab","activeTabKey","Step","ViewEmployee","EditEmployee","updateData","disabled","Role","roleUser","item3","creater","createrRole","createrName","viewVisible","AddRole","temp","target","checked","marginBottom","EditRole","getFatherChecked","User","handleRoleView","AddUser","EditUser","rolename","email","Stock","excess","warning","stockid","manager","latestTime","stockname","AddStock","insertId","handleAddClick","handleNameChange","categoryAdd","compact","StocklogView","header","amout","String","info","before","Object","getOwnPropertyNames","StockLog","data1","data2","sort","pop","logInfo","pagination","pageSize","renderItem","ViewStock","EditStock","tag","initialData","Inventory","createrFilters","tableData","dateRange","NaN","handleDeal","isNaN","searchValue","getVariance","expect","creatername","ViewInventory","detail","AddInventory","Sider","Content","Footer","Admin","position","paddingBottom","backgroundColor","minHeight","exact","path","component","AddMember","EditMember","ViewMember","App","locale","ReactDOM","zh_CN","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0f20b64d.chunk.js","sourcesContent":["/*能发送异步ajax的函数模块，\r\n*封装Axios库，\r\n* 返回的是一个promise对象*/\r\n\r\nimport axios from 'axios';\r\nimport {message} from 'antd';\r\n\r\nexport default function ajax(url,data={},type='GET') {\r\n    return new Promise(resolve => {\r\n        let promise = null;\r\n        if(type === 'GET'){\r\n            promise = axios.get(url, {\r\n                params: data\r\n            });\r\n        } else {\r\n            promise = axios.post(url, data)\r\n        }\r\n        promise.then(response=>{\r\n            resolve(response.data)\r\n        }).catch((err)=>{\r\n            message.error(\"请求失败 \"+err.message)\r\n        })\r\n    })\r\n}","import $ from 'jquery';\r\n\r\nexport default function jsonp(url, data={}) {\r\n    return new Promise(resolve => {\r\n        data.key===\"LOABZ-ONL6F-CLXJZ-N4A2L-AB74O-ITFWZ\" ? data.output=\"jsonp\" : data.ouput=undefined;\r\n        $.ajax({\r\n            url: url,\r\n            type: \"post\",\r\n            dataType: 'jsonp',\r\n            data: data,\r\n            jsonp: 'callback',\r\n            success: ret => {\r\n                resolve(ret)\r\n            }\r\n        })\r\n    })\r\n}","/*该模块包含应用中所有接口请求函数\r\n*每个函数的返回值都是promise\r\n */\r\nimport ajax from './ajax';\r\nimport jsonp from './jsonp'\r\n\r\n\r\nconst WEATHER_URL=\"https://free-api.heweather.net/s6/weather/now\";\r\nconst WEATHER_KEY=\"0894aab8b0394389a7ac887e32db9c30\";\r\nconst LOCATION_URL=\"https://apis.map.qq.com/ws/location/v1/ip\";\r\nconst LOCATION_KEY=\"LOABZ-ONL6F-CLXJZ-N4A2L-AB74O-ITFWZ\";\r\n\r\n//header;\r\nexport const reqWeather = (location, key=WEATHER_KEY) => ajax(WEATHER_URL,{location: location, key: key},'GET');\r\nexport const reqCity = (key=LOCATION_KEY) => jsonp(LOCATION_URL, {key});\r\n\r\n//basic requests;\r\nexport const reqLogin = (username,password) => ajax('/login',{username: username, password: password},'POST');\r\n\r\n//home\r\nexport const reqShopInfo = () => ajax('/shop/info', null, 'GET');\r\nexport const updateShopInfo = (data) => ajax('/shop/update', data, 'POST');\r\n\r\n//category;\r\nexport const reqCategoryList = () => ajax('/category/list',null ,'GET');\r\nexport const updateCategoryList = (data) => ajax('/category/update', data, 'POST');\r\nexport const reqCategorySearch = (name) => ajax('/category/search', {name}, 'GET');\r\nexport const reqCategoryDelete = (id) => ajax('/category/delete', {id}, 'GET');\r\nexport const addCategoryList = (data) => ajax('/category/add', data, 'POST');\r\n\r\n//product\r\nexport const reqProductList = () => ajax('/product/list', null, 'GET');\r\nexport const reqProductDelete = (data) => ajax('/product/delete', data, 'POST');\r\nexport const updateProductList = (data) => ajax('/product/update', data, 'POST');\r\nexport const addProductList = (data) => ajax('/product/add', data, 'POST');\r\nexport const reqProductSearch = (data) => ajax('/product/search', data, 'POST');\r\n\r\n//file\r\nexport const reqImgDelete = (name) => ajax('/file/delete', {name}, 'GET');\r\n\r\n//stock\r\nexport const reqStockList = () => ajax('/stock/list', null, 'GET');\r\nexport const reqStockCategory = () => ajax('/stock/category', null, 'GET');\r\nexport const reqStockDelete = (id) => ajax('/stock/delete', {id}, 'GET');\r\nexport const reqStockSearch = (name) => ajax('/stock/search', {name}, 'GET');\r\nexport const addStockList = (data) => ajax('/stock/add', data, 'POST');\r\nexport const updateStockList = (data) => ajax('/stock/update', data, 'POST');\r\n\r\n//stocklog\r\nexport const reqStocklogList = (data) => ajax('/stock/stocklog-list', data, 'GET');\r\nexport const addStocklogList = (data) => ajax('/stock/stocklog-add', data, 'POST');\r\n\r\n//customer\r\nexport const reqCustomerList = () => ajax('/customer/list', null, 'GET');\r\nexport const reqMemberList = () => ajax('/customer/member-list', null, 'GET');\r\nexport const reqMemberSearch = (value) => ajax('/customer/member-search', {value}, 'GET');\r\nexport const reqMemberDelete = (id) => ajax('/customer/delete', {id}, 'GET');\r\nexport const reqMemberAdd = (data) => ajax('/customer/add', data, 'POST');\r\nexport const updateMemberList = (data) => ajax('/customer/update', data, 'POST');\r\n\r\n//employee\r\nexport const reqEmployeeList = () => ajax('/employee/list', null, 'GET');\r\nexport const reqEmployeeDelete = (id) => ajax('/employee/delete', {id}, 'GET');\r\nexport const reqEmployeeSearch = (value) => ajax('/employee/search', {value}, 'GET');\r\nexport const addEmployeeList = (data) => ajax('/employee/add', data, 'POST');\r\nexport const updateEmployeeList = (data) => ajax('/employee/update', data, 'POST');\r\n\r\n//inventory\r\nexport const reqInventoryList = () => ajax('/inventory/list', null, 'GET');\r\nexport const reqInventoryAdd = (data) => ajax('/inventory/add', data, 'POST');\r\nexport const reqInventoryUpdate = (data) => ajax('/inventory/update', data, 'POST');\r\nexport const reqInventoryDelete = (id) => ajax('/inventory/delete', {id}, 'GET');\r\n\r\n\r\n//user\r\nexport const reqUserList = () => ajax('/user/list', null, 'GET');\r\nexport const reqUserDelete = (id) => ajax('/user/delete', {id}, 'GET');\r\nexport const reqUserAdd = (data) => ajax('/user/add', data, 'POST');\r\nexport const reqUserUpdate = (data) => ajax('/user/update', data, 'POST');\r\n\r\n//order\r\nexport const reqOrderList = () => ajax('/order/list', null, 'GET');\r\nexport const reqWeekOrder = () => ajax('/order/week-list', null, 'GET');\r\nexport const reqFrontdeskList = () => ajax('/order/frontdesk-list', null, 'GET');\r\nexport const reqOrderSearch = (id) => ajax('/order/search', {id}, 'GET');\r\nexport const reqOrderRange = (start,end) => ajax('/order/range', {start, end}, 'GET');\r\nexport const reqOrderUpdate = (data) => ajax('/order/update', data, 'POST');\r\n\r\n//Role\r\nexport const reqRoleList = () => ajax('/role/list', null, 'GET');\r\nexport const reqRoleDelete = (id) => ajax('/role/delete', {id}, 'GET');\r\nexport const reqRoleAdd = (data) => ajax('/role/add', data, 'POST');\r\nexport const reqRoleUpdate = (data) => ajax('/role/update', data, 'POST');\r\n\r\n//Rule\r\nexport const reqRuleList = () => ajax('/rule/list', null, 'GET');\r\nexport const reqRuleUpdate = (data) => ajax('/rule/update', data, 'POST');\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default {\r\n    user : {},\r\n    others: {}\r\n}","let store=require('store');\r\nconst USER_KEY='user_key';\r\nexport default{\r\n    saveUser(user){\r\n        // localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n        store.set(USER_KEY,user)\r\n    },\r\n    getUser(){\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n        return store.get(USER_KEY) || {}\r\n    },\r\n    removeUser(){\r\n        // localStorage.removeItem(USER_KEY)R_KEY\r\n        store.remove(USER_KEY)\r\n    }\r\n}","import React from 'react';\r\nimport {Form,Input,Icon,Button,message} from 'antd';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './login.less';\r\nimport logo from '../../assets/images/logo.png';\r\nimport {reqLogin, reqRoleList} from '../../api';\r\nimport memoryUtils from '../../util/memoryUtils';\r\nimport storageUtils from '../../util/storageUtils';\r\n//登录的路由组件\r\nclass Login extends React.Component{\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err,values)=>{\r\n            if(!err){\r\n                const {username,password}=values;\r\n                const response1 = await reqLogin(username,password);\r\n                const response2 = await reqRoleList();\r\n                if(response1.status===0 && response2.status===0){\r\n                    message.success('登录成功');\r\n                    let data = response1.data;\r\n                    let permission = [];\r\n                    response2.data.forEach(item => {\r\n                        if(response1.data.role===item.id) permission = item.permission.split(\"-\")\r\n                    });\r\n                    data.permission = permission;\r\n                    memoryUtils.user = response1.data;\r\n                    storageUtils.saveUser(response1.data);\r\n                    this.props.history.replace('/')\r\n                }\r\n            }else{\r\n                console.log(\"校验失败\")\r\n            }\r\n        })\r\n    };\r\n    validatePwd=(rule,value,callback)=>{\r\n        if(!value){\r\n            callback(\"请输入密码\")\r\n        }else if(value.length<4){\r\n            callback(\"密码长度不能小于4位\")\r\n        }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n            callback(\"密码必须由字母、数字或字符串组成\")\r\n        }else if(value.length>12){\r\n            callback(\"密码长度不能大于12位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUser=(rule,value,callback)=>{\r\n        if(!value){\r\n            callback(\"请输入用户名\")\r\n        }else if(value.length<4){\r\n            callback(\"用户名长度不能小于4位\")\r\n        }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n            callback(\"用户名必须由字母、数字或字符串组成\")\r\n        }else if(value.length>12){\r\n            callback(\"用户名长度不能大于12位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    render(){\r\n        const user=memoryUtils.user;\r\n        if(JSON.stringify(user)!=='{}'){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        const form=this.props.form;\r\n        return (\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <h3>餐饮后台管理系统</h3>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <h2>用户登录</h2>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {\r\n                                form.getFieldDecorator('username',{\r\n                                    rules:[\r\n                                        {validator:this.validateUser}\r\n                                    ]\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"请输入用户名\"\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item>\r\n                            {\r\n                                form.getFieldDecorator('password',{\r\n                                    rules:[\r\n                                        {validator:this.validatePwd}\r\n                                    ]\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"请输入密码\"\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default Form.create()(Login);\r\n\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Popconfirm} from 'antd';\r\nimport './index.less';\r\nimport {reqWeather, reqCity} from '../../api/index';\r\nimport memoryUtil from '../../util/memoryUtils';\r\nimport storageUtil from '../../util/storageUtils';\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username: \"-\",\r\n            location: \"-\",\r\n            weather_txt: \"-\",\r\n            weather_code: \"100\",\r\n            date: \"-\",\r\n            loading:false\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response1=await reqCity();\r\n        response1.status===0 ? memoryUtil.others.location=response1.result.ad_info.district : console.log(\"请求位置信息失败  \"+response1.message);\r\n        const response2=await reqWeather(memoryUtil.others.location);\r\n        if(response2.HeWeather6[0].status===\"ok\"){\r\n            memoryUtil.others.weather_txt=response2.HeWeather6[0].now.cond_txt;\r\n            memoryUtil.others.weather_code=response2.HeWeather6[0].now.cond_code;\r\n        }else{\r\n            console.log(\"请求天气信息失败  \"+response2.HeWeather6[0].status)\r\n        }\r\n        this.intervalId=setInterval(() => {\r\n            let time=new Date();\r\n            let month=time.getMonth()+1;\r\n            this.setState({\r\n                username: memoryUtil.user.username,\r\n                location: memoryUtil.others.location,\r\n                weather_txt: memoryUtil.others.weather_txt,\r\n                weather_code: memoryUtil.others.weather_code,\r\n                date: time.getFullYear()+\"-\"+month+\"-\"+time.getDate()\r\n            })\r\n        }, 1000)\r\n    };\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId)\r\n    };\r\n    logout= () => {\r\n        this.setState({ loading: true });\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                memoryUtil.user={};\r\n                memoryUtil.others={};\r\n                storageUtil.removeUser();\r\n                this.props.history.replace('/login');\r\n                resolve()\r\n            }, 1000);\r\n        }).catch(() => console.log('登出失败'));\r\n    };\r\n    render(){\r\n        return (\r\n            <div className=\"header\">\r\n                <span>{this.state.date}</span>\r\n                <span>{this.state.location}</span>\r\n                <img src={\"https://cdn.heweather.com/cond_icon/\"+this.state.weather_code+\".png\"} alt=\"weather\" />\r\n                <span style={{marginRight: \"100px\"}}>{this.state.weather_txt}</span>\r\n                <span style={{marginRight: \"20px\"}}>欢迎! {this.state.username}</span>\r\n                <Popconfirm\r\n                    placement=\"bottomRight\"\r\n                    title=\"确定要退出系统吗？\"\r\n                    okType=\"danger\"\r\n                    onConfirm={this.logout}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <Button style={{marginRight: \"50px\"}} type=\"primary\" loading={this.state.loading}>退出</Button>\r\n                </Popconfirm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  withRouter(Header);","import React from 'react';\r\nimport './index.less';\r\nimport Logo from '../../assets/images/logo.png';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {Menu,Icon} from 'antd';\r\n// import menuList from '../../config/menuConfig';\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst {SubMenu}=Menu;\r\n\r\nclass LeftNav extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            menu: [],\r\n            selectedKeys: [],\r\n            openKeys: []\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = () => {\r\n        let menu = [\r\n            {\r\n                key: \"/home\",\r\n                title: \"首页\",\r\n                icon: \"home\",\r\n                display: 1\r\n            },\r\n            {\r\n                key: \"/order\",\r\n                title: \"订单管理\",\r\n                icon: \"account-book\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/order\",\r\n                        title: \"全部订单\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/order/stage\",\r\n                        title: \"前台管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/product\",\r\n                title: \"商品管理\",\r\n                icon: \"shopping\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/product/category\",\r\n                        title: \"商品分类\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/product\",\r\n                        title: \"商品列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/product/add\",\r\n                        title: \"添加商品\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/stock\",\r\n                title: \"库存管理\",\r\n                icon: \"appstore\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/stock\",\r\n                        title: \"库存信息\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/stock/inventory\",\r\n                        title: \"库存盘点\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/member\",\r\n                title: \"会员管理\",\r\n                icon: \"crown\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/member\",\r\n                        title: \"会员列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/member/add\",\r\n                        title: \"新增会员\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/employee\",\r\n                title: \"人事管理\",\r\n                icon: \"team\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/employee\",\r\n                        title: \"员工列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/employee/user\",\r\n                        title: \"用户列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/employee/role\",\r\n                        title: \"角色管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        memoryUtils.user.permission.forEach(item => {\r\n            switch (item) {\r\n                case '全部订单':\r\n                    menu[1].display = 1;\r\n                    menu[1].children[0].display = 1;\r\n                    break;\r\n                case '前台管理':\r\n                    menu[1].display = 1;\r\n                    menu[1].children[1].display = 1;\r\n                    break;\r\n                case '商品分类':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[0].display = 1;\r\n                    break;\r\n                case '商品列表':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[1].display = 1;\r\n                    break;\r\n                case '添加商品':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[2].display = 1;\r\n                    break;\r\n                case '库存信息':\r\n                    menu[3].display = 1;\r\n                    menu[3].children[0].display = 1;\r\n                    break;\r\n                case '库存盘点':\r\n                    menu[3].display = 1;\r\n                    menu[3].children[1].display = 1;\r\n                    break;\r\n                case '会员列表':\r\n                    menu[4].display = 1;\r\n                    menu[4].children[0].display = 1;\r\n                    break;\r\n                case '新增会员':\r\n                    menu[4].display = 1;\r\n                    menu[4].children[1].display = 1;\r\n                    break;\r\n                case '员工列表':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[0].display = 1;\r\n                    break;\r\n                case '用户列表':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[1].display = 1;\r\n                    break;\r\n                case '角色管理':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[2].display = 1;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        this.setState({\r\n            menu: menu,\r\n            selectedKeys: this.getSelectedKeys(this.props.location.pathname),\r\n            openKeys: this.getOpenKeys(this.props.location.pathname)\r\n        })\r\n    };\r\n    rootSubmenuKeys = ['/home', '/order', '/product','/category','/stock', '/member','/employee'];\r\n    onOpenChange = openKeys => {\r\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\r\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            this.setState({ openKeys });\r\n        } else {\r\n            this.setState({\r\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\r\n            });\r\n        }\r\n    };\r\n    closeSubmenuAll = () =>{\r\n        this.setState({openKeys:[]});\r\n    };\r\n    getSelectedKeys = (pathname) => {\r\n        // let selectedKey = '';\r\n        // switch(pathname){\r\n        //     case '/order/stage': selectedKey = '/order/stage'; break;\r\n        //     case '/product/category': selectedKey = '/product/category'; break;\r\n        //     case '/product/add': selectedKey = '/product/add'; break;\r\n        //     case '/stock/inventory': selectedKey = '/stock/inventory'; break;\r\n        //     case '/member/add': selectedKey = '/member/add'; break;\r\n        //     case '/employee/user': selectedKey = '/employee/user'; break;\r\n        //     case '/employee/role': selectedKey = '/employee/role'; break;\r\n        //     default: selectedKey = '/'+pathname.split('/')[1];\r\n        // }\r\n        // return [selectedKey];\r\n        \r\n        let selectedKey = '';\r\n        switch (pathname) {\r\n            // 首页\r\n            case '/home':\r\n            case '/home/view':\r\n            case '/home/edit': selectedKey = '/home'; break;\r\n            // 订单管理\r\n            case '/order':\r\n            case '/order/view': selectedKey = '/order'; break;\r\n            case '/order/stage':\r\n            case '/order/stage/view': selectedKey = '/order/stage'; break;\r\n            // 商品管理\r\n            case '/product':\r\n            case '/product/view':\r\n            case '/product/edit': selectedKey = '/product'; break;\r\n            case '/product/add': selectedKey = '/product/add'; break;\r\n            case '/product/category':\r\n            case '/product/category/view':\r\n            case '/product/category/add':\r\n            case '/product/category/edit': selectedKey = '/product/category'; break;\r\n            //库存管理\r\n            case '/stock':\r\n            case '/stock/view':\r\n            case '/stock/add':\r\n            case '/stock/edit':\r\n            case '/stock/log': selectedKey = '/stock'; break;\r\n            case '/stock/inventory':\r\n            case '/stock/inventory/view':\r\n            case '/stock/inventory/add': selectedKey = '/stock/inventory'; break;\r\n            //会员管理\r\n            case '/member':\r\n            case '/member/view':\r\n            case '/member/edit': selectedKey = '/member'; break;\r\n            case '/member/add': selectedKey = '/member/add'; break;\r\n            //人事管理\r\n            case '/employee':\r\n            case '/employee/view':\r\n            case '/employee/add':\r\n            case '/employee/edit': selectedKey = '/employee'; break;\r\n            case '/employee/user':\r\n            case '/employee/user/add':\r\n            case '/employee/user/edit': selectedKey = '/employee/user'; break;\r\n            case '/employee/role':\r\n            case '/employee/role/add':\r\n            case '/employee/role/edit': selectedKey = '/employee/role'; break;\r\n            default: break;\r\n        }\r\n        return [selectedKey]\r\n    };\r\n    getOpenKeys = (pathname) => {\r\n        let openKey = '';\r\n        switch(pathname){\r\n            case '/product/category': openKey = '/product'; break;\r\n            case '/stock/inventory': openKey = '/stock'; break;\r\n            case '/employee/role': openKey = '/employee'; break;\r\n            case '/employee/user': openKey = '/employee'; break;\r\n            default: openKey = '/'+pathname.split('/')[1];\r\n        }\r\n        return [openKey];\r\n    };\r\n    render(){\r\n        return (\r\n            <div className=\"left-nav\">\r\n                <Link to=\"/\">\r\n                    <div className=\"left-nav-header\">\r\n                        <img src={Logo} alt=\"logo\"/>\r\n                        <h1>餐厅后台</h1>\r\n                    </div>\r\n                </Link>\r\n                <Menu\r\n                    selectedKeys={this.getSelectedKeys(this.props.location.pathname)}\r\n                    mode=\"inline\"\r\n                    openKeys={this.state.openKeys}\r\n                    onOpenChange={this.onOpenChange}\r\n                    // style={{backgroundColor:\"#0354d9\"}}\r\n                    theme=\"dark\"\r\n                >\r\n                    {\r\n                        this.state.menu.map((item) => {\r\n                            if(!item.children){\r\n                                return (\r\n                                    <Menu.Item\r\n                                        key={item.key}\r\n                                        style={{display: item.display===0 ? \"none\" : \"block\"}}\r\n                                    >\r\n                                        <Link to={item.key}><Icon type={item.icon}/>{item.title}</Link>\r\n                                    </Menu.Item>\r\n                                )\r\n                            }else{\r\n                                return  (\r\n                                    <SubMenu\r\n                                        key={item.key}\r\n                                        title={(<span><Icon type={item.icon}/>{item.title}</span>)}\r\n                                        style={{display: item.display===0 ? \"none\" : \"block\"}}\r\n                                    >\r\n                                        {\r\n                                            item.children.map(item => {\r\n                                                return (\r\n                                                    <Menu.Item\r\n                                                        key={item.key}\r\n                                                        style={{display: item.display===0 ? \"none\" : \"block\"}}\r\n                                                    >\r\n                                                        <Link to={item.key}>{item.title}</Link>\r\n                                                    </Menu.Item>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </SubMenu>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(LeftNav);","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './index.less';\r\n\r\nclass TopNav extends React.Component{\r\n    // handleNavClick = (item) => {\r\n    //     let nav = \"\";\r\n    //     switch(item){\r\n    //         case \"首页\": nav=\"/home\";break;\r\n    //         // 订单管理\r\n    //         case \"全部订单\": nav=\"/order\";break;\r\n    //         case \"订单详情\": nav=\"/order-view\";break;\r\n    //         case \"前台管理\": nav=\"/order-stage\";break;\r\n    //         // 商品管理\r\n    //         case \"商品分类\": nav=\"/category\";break;\r\n    //         case \"新增品类\": nav=\"/category-add\";break;\r\n    //         case \"编辑品类\": nav=\"/category-edit\";break;\r\n    //         case \"品类详情\": nav=\"/category-view\";break;\r\n    //         case \"商品列表\": nav=\"/product\";break;\r\n    //         case \"添加商品\": nav=\"/product-add\";break;\r\n    //         case \"编辑商品\": nav=\"/product-edit\";break;\r\n    //         case \"商品详情\": nav=\"/product-view\";break;\r\n    //         // 库存管理\r\n    //         case \"库存信息\": nav=\"/stock\";break;\r\n    //         case \"新增库存\": nav=\"/stock-add\";break;\r\n    //         case \"编辑库存\": nav=\"/stock-add\";break;\r\n    //         case \"货物详情\": nav=\"/stock-view\";break;\r\n    //         case \"库存日志\": nav=\"/stock-log\";break;\r\n    //         case \"库存盘点\": nav=\"/inventory\";break;\r\n    //         case \"新建盘点单\": nav=\"/inventory-add\";break;\r\n    //         case \"盘点详情\": nav=\"/inventory-view\";break;\r\n    //         //会员管理\r\n    //         case \"会员列表\": nav=\"/member\";break;\r\n    //         case \"编辑会员\": nav=\"/member-edit\";break;\r\n    //         case \"新增会员\": nav=\"/member-add\";break;\r\n    //         case \"会员详情\": nav=\"/member-view\";break;\r\n    //         //人事管理\r\n    //         case \"员工列表\": nav=\"/employee\";break;\r\n    //         case \"新增员工\": nav=\"/employee-add\";break;\r\n    //         case \"编辑员工\": nav=\"/employee-edit\";break;\r\n    //         case \"员工详情\": nav=\"/employee-view\";break;\r\n    //         case \"用户列表\": nav=\"/user\";break;\r\n    //         case \"创建用户\": nav=\"/user-add\";break;\r\n    //         case \"角色管理\": nav=\"/role\";break;\r\n    //         case \"新增角色\": nav=\"/role-add\";break;\r\n    //         case \"编辑角色\": nav=\"/role-edit\";break;\r\n    //         //财务管理（待完善）\r\n    //         default : nav=\"home\";break;\r\n    //     }\r\n    //     this.props.history.replace(nav)\r\n    // };\r\n    render(){\r\n        return (\r\n            <div className=\"top-nav-container\">\r\n                {\r\n                    this.props.nav.map((item,index) => {\r\n                        // return index===0 ? (\r\n                        //     <span key={index}>\r\n                        //         <span style={{fontWeight: \"bold\", cursor: \"pointer\"}}>{item}</span>\r\n                        //         <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                        //     </span>\r\n                        // ) : index+1===this.props.nav.length ? (\r\n                        //     <span key={index}\r\n                        //           style={{cursor: \"pointer\", color: \"#98a9c4\"}}\r\n                        //           onClick={()=>this.handleNavClick(item)}\r\n                        //     >{item}</span>\r\n                        // ) : (\r\n                        //     <span key={index}>\r\n                        //         <span key={index}\r\n                        //               style={{fontWeight: \"bold\", cursor: \"pointer\"}}\r\n                        //               onClick={()=>this.handleNavClick(item)}>{item}</span>\r\n                        //         <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                        //     </span>\r\n                        // )\r\n                        return index===0 && index===this.props.nav.length ? (\r\n                            <span key={index}>\r\n                                <span style={{fontWeight: \"bold\", cursor: \"default\"}}>{item}</span>\r\n                                <span style={{\r\n                                    margin: \"0 10px\",\r\n                                    color: \"#98a9c4\",\r\n                                }}>/</span>\r\n                            </span>\r\n                        ) : index+1===this.props.nav.length ? (\r\n                            <span key={index} style={{color: \"#98a9c4\",  cursor: \"default\"}}>{item}</span>\r\n                        ) : (\r\n                            <span key={index}>\r\n                                <span key={index} style={{fontWeight: \"bold\",  cursor: \"default\"}}>{item}</span>\r\n                                <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TopNav);","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Icon} from \"antd\";\r\nimport {reqShopInfo, reqWeekOrder} from \"../../api\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            weekData: {\r\n                amount: [],\r\n                quantity: [],\r\n                date: [],\r\n                quantityPercent: 0.00,\r\n                amountPercent: 0.00\r\n            }\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response1 = await reqShopInfo();\r\n        const response2 = await reqWeekOrder();\r\n        if(response1.status === 0 && response2.status === 0){\r\n            // 获取周次和周数据\r\n            let week = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\r\n            let day = new　Date().getDay();\r\n            let arr = week.splice(day+1, 7-day-1);\r\n            week = arr.concat(week);\r\n            week = week.map(item => {\r\n                if(week.indexOf(item) < week.indexOf(\"周日\")) item = '上' + item;\r\n                if(week.indexOf(item) === week.length-1) item = '今天';\r\n                return item;\r\n            });\r\n            let weekData = response2.data;\r\n            weekData.date = week;\r\n            //获取月份和月数据\r\n            this.setState({\r\n                weekData: weekData,\r\n                data: response1.data\r\n            });\r\n        }\r\n    };\r\n    handleDetail = () => {\r\n        this.props.history.push({pathname: '/home/view', state: {data: this.state.data}})\r\n    };\r\n    getOption = () => {\r\n        return {\r\n            title: {\r\n                text: ''\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['数量', '总额'],\r\n                selectedMode: 'single'\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: true,\r\n                data: this.state.weekData.date\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [\r\n                {\r\n                    name: '数量',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    data: this.state.weekData.quantity\r\n                },\r\n                {\r\n                    name: '总额',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    data: this.state.weekData.amount\r\n                }\r\n            ]\r\n        }\r\n    };\r\n    getPercentForm = (num) => {\r\n        if(num > 1){\r\n            return num-1\r\n        }else{\r\n            return 1-num\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className='home-container'>\r\n                <TopNav nav={['首页']} />\r\n                <div style={{margin: \"20px 22px 0 40px\", textAlign: \"right\"}}>\r\n                    {/*<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"23px\", position: \"relative\", top: \"-10px\"}}>*/}\r\n                    {/*    {this.state.data.name}*/}\r\n                    {/*</span>*/}\r\n                    <Button type=\"primary\" onClick={this.handleDetail}>门店详情</Button>\r\n                </div>\r\n                {/*每周销售图*/}\r\n                <div style={{margin: \"20px\"}}>\r\n                    <div\r\n                        style={{\r\n                            display: \"inline-block\",\r\n                            verticalAlign: \"top\",\r\n                            width: \"19%\",\r\n                            margin: \"30px 2% 0 4%\",\r\n                            border: \"1px solid lightgray\"\r\n                        }}\r\n                    >\r\n                        <div style={{borderBottom: \"1px solid lightgray\", padding: \"20px\", fontWeight: \"bold\"}}>今日营收情况</div>\r\n                        <div style={{padding: \"20px 20px 5px\"}}>\r\n                            <div style={{fontWeight: \"bolder\"}}>订单数量：{this.state.weekData.quantityToday} 单</div>\r\n                            <div style={{fontSize: \"12px\", display: this.state.weekData.quantityPercent === \"Infinity\" || \"NaN\" ? \"none\" : \"block\"}}>\r\n                                <span>日同比{this.getPercentForm(this.state.weekData.quantityPercent)}%</span>\r\n                                {\r\n                                    this.state.weekData.quantityPercent > 1 ? (\r\n                                        <Icon type=\"arrow-up\" style={{color: \"green\"}}/>\r\n                                    ) : (\r\n                                        <Icon type=\"arrow-down\" style={{color: \"red\"}}/>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div style={{padding: \"10px 20px 20px\"}}>\r\n                            <div style={{fontWeight: \"bolder\"}}>营收总额：{this.state.weekData.amountToday} 元</div>\r\n                            <div style={{fontSize: \"12px\", display: this.state.weekData.amountPercent === \"Infinity\" || \"NaN\" ? \"none\" : \"block\"}}>\r\n                                <span>日同比{this.getPercentForm(this.state.weekData.amountPercent)}%</span>\r\n                                {\r\n                                    this.state.weekData.amountPercent > 1 ? (\r\n                                        <Icon type=\"arrow-up\" style={{color: \"green\"}}/>\r\n                                    ) : (\r\n                                        <Icon type=\"arrow-down\" style={{color: \"red\"}}/>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: \"inline-block\", width: \"65%\", margin: \"0 5%\", verticalAlign: \"top\"}}>\r\n                        <ReactEcharts option={this.getOption()} />\r\n                    </div>\r\n                </div>\r\n                {/*每月销售图*/}\r\n                {/*<div style={{margin: \"100px 20px 20px\"}}>*/}\r\n                {/*    <ReactEcharts option={this.getOption()} />*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport {Form, Input, Card, Button, message, InputNumber, Upload, Modal, Icon} from 'antd';\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\nimport TopNav from \"../../components/top-nav\";\nimport {reqImgDelete, reqShopInfo, updateShopInfo} from \"../../api\";\n\nconst EditHome = Form.create({ name: 'category-add' })(\n    class extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                data: [],\n                fileList: [],\n                previewVisible: false,\n                previewImage: '',\n            }\n        }\n        UNSAFE_componentWillMount = async () => {\n            const response = await reqShopInfo();\n            if(response.status === 0){\n                let data = response.data;\n                data.opentime = data.businesshour.split(' ~ ')[0];\n                data.closetime = data.businesshour.split(' ~ ')[1];\n                let fileList = [{\n                    uid: 0,\n                    name: data.profile,\n                    status: 'done',\n                    url: '/upload/'+data.profile\n                }];\n                this.setState({\n                    data: data,\n                    fileList: fileList\n                });\n            }\n        };\n        validateName = (rule, value, callback) =>{\n            if(!value){\n                callback(\"请输入品类名称\")\n            }else if(value.length>10){\n                callback(\"请输入少于10个字符\")\n            }else{\n                callback()\n            }\n        };\n        handleBack = () => {\n            this.props.history.push({pathname: '/home/view', state: {data: this.state.data}})\n        };\n        handleSubmit = (e) => {\n            e.preventDefault();\n            this.props.form.validateFields( async (err, values) => {\n                if(!err){\n                    let data = values;\n                    data.profile = this.state.fileList[0].url.split('/upload/')[1];\n                    data.businesshour = moment(data.opentime, 'HH:mm')._i + ' ~ ' + moment(data.closetime, 'HH:mm')._i;\n                    delete data.opentime;\n                    delete data.closetime;\n                    const response = await updateShopInfo(data);\n                    if(response.status === 0){\n                        message.success(\"设置成功，即将返回门店信息页面\");\n                        this.timerID = setTimeout(()=>{\n                            this.props.history.push({pathname: '/home/view', state: {data: data}})\n                        }, 2000);\n                    }\n                }\n            });\n        };\n        getBase64 = (file) => {\n            return new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = () => resolve(reader.result);\n                reader.onerror = error => reject(error);\n            });\n        };\n        handleCancel = () => this.setState({ previewVisible: false });\n        handlePreview = async file => {\n            if (!file.url && !file.preview) {\n                file.preview = await this.getBase64(file.originFileObj);\n            }\n            this.setState({\n                previewImage: file.url || file.preview,\n                previewVisible: true,\n            });\n        };\n        handleChange = async ({ file, fileList }) => {\n            if(file.status === 'done'){\n                let response = file.response;\n                file = fileList[fileList.length-1];\n                file.name = response.data.name;\n                file.url = response.data.url;\n            } else if(file.status === 'removed'){\n                await reqImgDelete(file.name);\n            }\n            this.setState({ fileList })\n        };\n        render() {\n            const formItemLayout = {\n                labelCol: {span: 8},\n                wrapperCol: {span: 10}\n            };\n            const form = this.props.form;\n            const uploadButton = (\n                <div>\n                    <Icon type=\"plus\" />\n                    <div className=\"ant-upload-text\">Upload</div>\n                </div>\n            );\n            return (\n                <div>\n                    <TopNav nav={['首页', '门店详情', '编辑']} />\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑门店信息</span>}\n                          extra={<Button type=\"primary\" onClick={this.handleBack}>返回</Button>}\n                          style={{width: \"100%\", border: \"none\"}}\n                    >\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\n                                {form.getFieldDecorator('id', {\n                                    initialValue: this.state.data.id\n                                })(<Input/>)}\n                            </Form.Item>\n                            <Form.Item label=\"品牌名称：\">\n                                {form.getFieldDecorator('name', {\n                                    rules: [{required: true, validator: this.validateName }],\n                                    initialValue: this.state.data.name\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"头像：\">\n                                {form.getFieldDecorator('profile', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.profile\n                                })(\n                                    <div className=\"clearfix\">\n                                        <Upload\n                                            action=\"/file/upload\"\n                                            accept=\"image/*\"\n                                            name=\"image\"\n                                            listType=\"picture-card\"\n                                            fileList={this.state.fileList}\n                                            onPreview={this.handlePreview}\n                                            onChange={this.handleChange}\n                                        >\n                                            {this.state.fileList.length >= 1 ? null : uploadButton}\n                                        </Upload>\n                                        <Modal visible={this.state.previewVisible} footer={null} onCancel={this.handleCancel}>\n                                            <img alt=\"example\" style={{ width: '100%' }} src={this.state.previewImage} />\n                                        </Modal>\n                                    </div>\n                                )}\n                            </Form.Item>\n                            <Form.Item label=\"地址：\">\n                                {form.getFieldDecorator('address', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.address\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"桌数：\">\n                                {form.getFieldDecorator('seats', {\n                                    initialValue: this.state.data.seats\n                                })(<InputNumber />)}\n                            </Form.Item>\n                            <Form.Item label=\"电话：\">\n                                {form.getFieldDecorator('tel', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.tel\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"公告：\">\n                                {form.getFieldDecorator('notice', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.notice\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"营业时间：\">\n                                {form.getFieldDecorator('opentime', {\n                                    rules: [{required: true}],\n                                    initialValue: moment(this.state.data.opentime, 'HH:mm')\n                                })(<TimePicker format={'HH:mm'} />)}\n                            </Form.Item>\n                            <Form.Item label=\"打烊时间：\">\n                                {form.getFieldDecorator('closetime', {\n                                    rules: [{required: true}],\n                                    initialValue: moment(this.state.data.closetime, 'HH:mm')\n                                })(<TimePicker format={'HH:mm'} />)}\n                            </Form.Item>\n                            <Form.Item label=\"品牌故事：\">\n                                {form.getFieldDecorator('story', {\n                                    initialValue: this.state.data.story\n                                })(<Input.TextArea rows={10}/>)}\n                            </Form.Item>\n                            <Form.Item label=\"会员条款：\">\n                                {form.getFieldDecorator('treaty', {\n                                    initialValue: this.state.data.treaty\n                                })(<Input.TextArea rows={5}/>)}\n                            </Form.Item>\n                            <Form.Item>\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\n                            </Form.Item>\n                        </Form>\n                    </Card>\n                </div>\n            )\n        }\n    },\n);\n\nexport default EditHome;\n","import React from 'react';\nimport {Form, Card, Button} from 'antd';\nimport TopNav from \"../../components/top-nav\";\n\nconst ViewHome = Form.create({ name: 'category-add' })(\n    class extends React.Component {\n        handleEdit = () => {\n            this.props.history.push('/home/edit');\n        };\n        render() {\n            const formItemLayout = {\n                labelCol: {span: 8},\n                wrapperCol: {span: 10}\n            };\n            let data = this.props.location.state.data;\n            const BtnGroup = (\n                <div>\n                    <Button type=\"primary\" style={{marginRight: \"20px\"}} onClick={this.handleEdit}>编辑</Button>\n                    <Button type=\"primary\" onClick={() => this.props.history.push('/home')}>返回</Button>\n                </div>\n            );\n            return (\n                <div>\n                    <TopNav nav={['首页', '门店详情']} />\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>门店信息</span>}\n                          extra={BtnGroup}\n                          style={{width: \"100%\", border: \"none\"}}\n                    >\n                        <Form {...formItemLayout} style={{marginTop: \"20px\"}} onSubmit={this.handleSubmit}>\n                            <Form.Item label=\"店名\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.name}</span>\n                            </Form.Item>\n                            <Form.Item label=\"头像\">\n                                <span style={{paddingLeft:\"20px\"}}>\n                                    <img\n                                        src={'/upload/'+data.profile}\n                                        style={{\n                                            width: \"80px\",\n                                            height: \"80px\",\n                                            borderRadius: \"5px\",\n                                            padding: \"5px\",\n                                            border: \"1px solid lightgray\"\n                                        }}\n                                        alt=\"头像\"/>\n                                </span>\n                            </Form.Item>\n                            <Form.Item label=\"地址\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.address}</span>\n                            </Form.Item>\n                            <Form.Item label=\"桌数\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.seats}</span>\n                            </Form.Item>\n                            <Form.Item label=\"电话\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.tel}</span>\n                            </Form.Item>\n                            <Form.Item label=\"公告\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.notice}</span>\n                            </Form.Item>\n                            <Form.Item label=\"营业时间\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.businesshour}</span>\n                            </Form.Item>\n                        </Form>\n                    </Card>\n                </div>\n            )\n        }\n    },\n);\n\nexport default ViewHome;\n","import React from 'react';\r\nimport './index.less';\r\nimport {Spin} from 'antd';\r\n\r\nclass Loading extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <Spin size=\"large\" />\r\n                <span>Loading. . .</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport {Table, Divider, Switch, message, Input, Button, Modal, Icon} from 'antd';\r\nimport Loading from '../../components/loading';\r\nimport TopNav from '../../components/top-nav'\r\nimport {reqCategoryList, updateCategoryList, reqCategorySearch, reqCategoryDelete} from '../../api';\r\n\r\nclass Category extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqCategoryList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = (response) => {\r\n        this.setState({isLoading: true});\r\n        this.timerID = setTimeout(() => {\r\n            if(response.status===0){\r\n                let data = response.data.map((item, index) => {\r\n                    item.index = index;\r\n                    switch (item.level) {\r\n                        case 0: item.levelText = '一级'; break;\r\n                        case 1: item.levelText = '二级'; break;\r\n                        case 2: item.levelText = '三级'; break;\r\n                        case 3: item.levelText = '四级'; break;\r\n                        case 4: item.levelText = '五级'; break;\r\n                        case 5: item.levelText = '六级'; break;\r\n                        case 6: item.levelText = '七级'; break;\r\n                        case 7: item.levelText = '八级'; break;\r\n                        case 8: item.levelText = '九级'; break;\r\n                        case 9: item.levelText = '十级'; break;\r\n                        default: break\r\n                    }\r\n                    return item\r\n                });\r\n                this.setState({isLoading: false, data: data})\r\n            }else if(response.status===1){\r\n                message.error(response.msg);\r\n                this.setState({isLoading: false, data: null})\r\n            }\r\n        }, 300)\r\n    };\r\n    handleIsnavChange = async (record) =>{\r\n        const response = await updateCategoryList({id: record.id, isnav: 1-record.isnav});\r\n        let data = this.state.data;\r\n        if(response.status === 0){\r\n            data.forEach(item => item.isnav = item.id===record.id ? 1-item.isnav : item.isnav);\r\n            this.setState({\r\n                data: data\r\n            });\r\n        }else if(response.status === 1){\r\n            this.setState({\r\n                data: data\r\n            });\r\n            message.error(response.msg)\r\n        }\r\n    };\r\n    handleSearch = async (value) => {\r\n        const response = value===\"\" ? await reqCategoryList() : await reqCategorySearch(value);\r\n        this.refreshTable(response);\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除品类\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqCategoryDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleAdd = () => {this.props.history.push('/product/category/add')};\r\n    handleEdit = (record) => {\r\n        this.props.history.push({\r\n            pathname: '/product/category/edit',\r\n            state: {data: record}\r\n        })\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/product/category/view', state: {data: record}})\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '品类名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '排序',\r\n                dataIndex: 'levelText',\r\n                key: 'levelText',\r\n                sorter: (a, b) => a.level-b.level\r\n            },\r\n            {\r\n                title: '子项数量',\r\n                dataIndex: 'son',\r\n                key: 'son',\r\n                sorter: (a, b) => a.son-b.son\r\n            },\r\n            {\r\n                title: '是否显示',\r\n                dataIndex: 'isnav',\r\n                key: 'isnav',\r\n                render: (text, record) => <Switch\r\n                    size=\"small\"\r\n                    onClick={()=>this.handleIsnavChange(record)}\r\n                    defaultChecked={text === 1}/>,\r\n                filters: [{text: '已显示', value: 1}, {text: '未显示', value: 0}],\r\n                onFilter: (value, record) => value===record.isnav\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['商品管理', '商品分类']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\"/>新增品类</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询品类名称\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Switch, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { addCategoryList } from \"../../api\";\r\n\r\nconst AddCategory = Form.create({ name: 'category-add' })(\r\n    class extends React.Component {\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.level = Number(data.level);\r\n                    data.isnav = data.isnav ? 1 : 0;\r\n                    data.son = 0;\r\n                    const response = await addCategoryList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增成功,即将返回品类列表\", 2);\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/product/category')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['商品管理', '商品分类', '新增品类']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增商品品类</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product/category')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"名称：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"级别：\">\r\n                                {form.getFieldDecorator('level', {\r\n                                    rules: [{required: true}]\r\n                                })(\r\n                                    <Select>\r\n                                        <Select.Option key={0}>第一级</Select.Option>\r\n                                        <Select.Option key={1}>第二级</Select.Option>\r\n                                        <Select.Option key={2}>第三级</Select.Option>\r\n                                        <Select.Option key={3}>第四级</Select.Option>\r\n                                        <Select.Option key={4}>第五级</Select.Option>\r\n                                        <Select.Option key={5}>第六级</Select.Option>\r\n                                        <Select.Option key={6}>第七级</Select.Option>\r\n                                        <Select.Option key={7}>第八级</Select.Option>\r\n                                        <Select.Option key={9}>第九级</Select.Option>\r\n                                        <Select.Option key={10}>第十级</Select.Option>\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"是否显示\">\r\n                                {form.getFieldDecorator('isnav', {\r\n                                    rules: [{required: true}],\r\n                                    valuePropName: \"checked\",\r\n                                    initialValue: false\r\n                                })(<Switch />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddCategory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select, Switch} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { updateCategoryList } from \"../../api\";\r\n\r\nconst EditCategory = Form.create({ name: 'category-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = () => {\r\n            this.setState({\r\n                data: this.props.location.state.data\r\n            })\r\n        };\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data = this.props.location.state.data;\r\n                    data.name = values.name;\r\n                    data.level = values.level;\r\n                    data.isnav = values.isnav === true ? 1 : 0;\r\n                    data.note = values.note;\r\n                    delete data.index;\r\n                    delete data.levelText;\r\n                    const response = await updateCategoryList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"更新品类信息成功,即将返回品类列表页面\", 2);\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/product/category')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['商品管理', '商品分类', '编辑品类']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑商品品类</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product/category')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"名称：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                    initialValue: this.state.data.name\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"级别：\">\r\n                                {form.getFieldDecorator('level', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.level\r\n                                })(\r\n                                    <Select>\r\n                                        <Select.Option key={0} value={0}>一级</Select.Option>\r\n                                        <Select.Option key={1} value={1}>二级</Select.Option>\r\n                                        <Select.Option key={2} value={2}>三级</Select.Option>\r\n                                        <Select.Option key={3} value={3}>四级</Select.Option>\r\n                                        <Select.Option key={4} value={4}>五级</Select.Option>\r\n                                        <Select.Option key={5} value={5}>六级</Select.Option>\r\n                                        <Select.Option key={6} value={6}>七级</Select.Option>\r\n                                        <Select.Option key={7} value={7}>八级</Select.Option>\r\n                                        <Select.Option key={8} value={8}>九级</Select.Option>\r\n                                        <Select.Option key={9} value={9}>十级</Select.Option>\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"是否显示\">\r\n                                {form.getFieldDecorator('isnav', {\r\n                                    rules: [{required: true}],\r\n                                    valuePropName: \"checked\",\r\n                                    initialValue: this.state.data.isnav===1\r\n                                })(<Switch />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: this.state.data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditCategory;\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, Form} from \"antd\";\r\n\r\nclass ViewCategory extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        console.log(data);\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '商品分类', '品类详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看品类详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product/category')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"名称\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"级别\">\r\n                            <span className=\"ant-form-text\">{this.state.data.levelText}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"是否显示\">\r\n                            <span className=\"ant-form-text\">{this.state.data.isnav ? '是' : '否'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"子项数量\">\r\n                            <span className=\"ant-form-text\">{this.state.data.son}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCategory;\r\n\r\n\r\n","import React from 'react';\r\nimport './product.less';\r\nimport {Button, Divider, Switch, Table, Modal, Row, Col, Cascader, Tag, Select, Input, Icon} from 'antd';\r\nimport {reqCategoryList, reqProductList, reqProductDelete, updateProductList, reqProductSearch} from '../../api';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass Product extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isLoading: true,\r\n            data: [],\r\n            options1: [],\r\n            options2: [],\r\n            selectedRowKeys: [],\r\n            operation: \"\",\r\n            selectedCategory: [],\r\n            categoryFilters: [],\r\n            selectedType: ''\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqProductList();\r\n        if(response.status === 0) this.refreshTable(response.data)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID);\r\n    };\r\n    formRef = {};\r\n    rowSelection = {\r\n        onChange: (selectedRowKeys) => {\r\n            this.setState({selectedRowKeys: selectedRowKeys})\r\n        }\r\n    };\r\n    refreshTable = async (data) => {\r\n        const response = await reqCategoryList();\r\n        if(response.status===0){\r\n            let options1 = [\r\n                {\r\n                    value: 'onsale-1',\r\n                    label: '商品上架',\r\n                },\r\n                {\r\n                    value: 'onsale-0',\r\n                    label: '商品下架',\r\n                },\r\n                {\r\n                    value: 'recommend-1',\r\n                    label: '设为推荐',\r\n                },\r\n                {\r\n                    value: 'recommend-0',\r\n                    label: '取消推荐',\r\n                },\r\n                {\r\n                    value: 'isnew-1',\r\n                    label: '设为新品',\r\n                },\r\n                {\r\n                    value: 'isnew-0',\r\n                    label: '取消新品',\r\n                },\r\n                {\r\n                    value: 'delete',\r\n                    label: '删除商品',\r\n                }\r\n            ];\r\n            let options2 = [];\r\n            let categoryFilters = [];\r\n            response.data.forEach(item1 => {\r\n                options2.push({label: item1.name, value: item1.id});\r\n                data.map(item2 => {\r\n                    categoryFilters.indexOf(item1.name)===-1 ? categoryFilters.push(item1.name) : categoryFilters.push();\r\n                    if(item2.category === item1.id) item2.categoryName = item1.name;\r\n                    if(item2.category === 999) item2.categoryName = '未分类';\r\n                    return item2;\r\n                })\r\n            });\r\n            categoryFilters = categoryFilters.map(item => {\r\n                return {text: item, value: item}\r\n            });\r\n            categoryFilters.push({text: '未分类', value: '未分类'});\r\n            options1.push({\r\n                label: '移至',\r\n                value: 'move',\r\n                children: options2\r\n            });\r\n            this.setState({\r\n                isLoading: true,\r\n                options1: options1,\r\n                options2: options2,\r\n                categoryFilters: categoryFilters\r\n            });\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data\r\n                })\r\n            }, 300);\r\n        }\r\n    };\r\n    handleStateChange = async (record, string) =>{\r\n        let obj={id: record.id};\r\n        obj[string]=1-record[string];\r\n        const response = await updateProductList(obj);\r\n        let data = this.state.data;\r\n        if(response.status === 0){\r\n            data.forEach(item => item[string] = item.id===record.id ? 1-item[string] : item[string]);\r\n            this.setState({\r\n                data: data\r\n            });\r\n        }\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/product/add')\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/product/view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/product/edit', state: {data: record}})\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除商品\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqProductDelete(record);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleSelectChange = (value) => {\r\n        this.setState({selectedType: value})\r\n    };\r\n    handleSearch = async (value) => {\r\n        let data = {\r\n            status: this.state.selectedType,\r\n            value: value\r\n        };\r\n        if(data.value===\"\" && data.status===\"\"){\r\n            const response = await reqProductList();\r\n            if(response.status === 0) this.refreshTable(response.data)\r\n        }else{\r\n            for(let key in data){\r\n                if(data.hasOwnProperty(key) && data[key].length !== 0){\r\n                    if(key === \"status\"){\r\n                        let arr = data.status.split('-');\r\n                        data[arr[0]] = Number(arr[1])\r\n                    }else{\r\n                        data[key] = typeof(data[key])===\"object\" ? data[key][0] : data[key]\r\n                    }\r\n                }\r\n            }\r\n            const response = await reqProductSearch(data);\r\n            if(response.status === 0) this.refreshTable(response.data)\r\n        }\r\n    };\r\n    handleCascaderChange = (value) => {\r\n        this.setState({operation: value})\r\n    };\r\n    handleOperate = async () => {\r\n        let operation = this.state.operation;\r\n        if(operation.length === 0){\r\n            this.setState({selectedRowKeys: []});\r\n            this.refreshTable(this.state.data)\r\n        }else if(operation.length === 1){\r\n            if(operation[0] === 'delete'){\r\n                const response1 = reqProductDelete(this.state.selectedRowKeys);\r\n                if(response1.status === 0){\r\n                    const response2 = await reqProductList();\r\n                    if(response2.status === 0){\r\n                        let data = response2.data;\r\n                        data.forEach(item1 => {\r\n                            this.state.options2.forEach(item2 => {\r\n                                if(item1.category === item2.value){\r\n                                    item1.categoryName = item2.label\r\n                                }\r\n                            })\r\n                        });\r\n                        this.timerID = setTimeout(() => {\r\n                            this.formRef1.props.form.resetFields();\r\n                            this.refreshTable(data)\r\n                        }, 500)\r\n                    }\r\n                }\r\n            }else if(operation[0] === 'move'){\r\n                this.formRef1.props.form.resetFields();\r\n                this.refreshTable(this.state.data)\r\n            }else{\r\n                let data = {};\r\n                let arr = operation[0].split('-');\r\n                data.id = this.state.selectedRowKeys;\r\n                data[arr[0]] = Number(arr[1]);\r\n                const response1 = await updateProductList(data);\r\n                if(response1.status === 0){\r\n                    const response2 = await reqProductList();\r\n                    if(response2.status === 0){\r\n                        let data = response2.data;\r\n                        data.forEach(item1 => {\r\n                            this.state.options2.forEach(item2 => {\r\n                                if(item1.category === item2.value){\r\n                                    item1.categoryName = item2.label\r\n                                }\r\n                            })\r\n                        });\r\n                        this.timerID = setTimeout(() => {\r\n                            this.refreshTable(data)\r\n                        }, 500)\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            let data = {};\r\n            data.id = this.state.selectedRowKeys;\r\n            data.category = operation[1];\r\n            const response1 = await updateProductList(data);\r\n            if(response1.status === 0){\r\n                const response2 = await reqProductList();\r\n                if(response2.status === 0){\r\n                    let data = response2.data;\r\n                    data.forEach(item1 => {\r\n                        this.state.options2.forEach(item2 => {\r\n                            if(item1.category === item2.value){\r\n                                item1.categoryName = item2.label\r\n                            }\r\n                        })\r\n                    });\r\n                    this.refreshTable(data)\r\n                }\r\n            }\r\n        }\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '货号',\r\n                key: 'number',\r\n                dataIndex: 'number'\r\n            },\r\n            {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleView(record)}>\r\n                        {text}\r\n                        {record.category === 999 ? <Tag size=\"small\" color=\"red\">未分类</Tag> : null}\r\n                    </Button>\r\n                )\r\n            },\r\n            {\r\n                title: '分类',\r\n                key: 'categoryName',\r\n                dataIndex: 'categoryName',\r\n                render: (text, record) => <span>{record.category === 999 ? \"未设置分类\" : text}</span>,\r\n                filters: this.state.categoryFilters,\r\n                onFilter: (value, record) => value===record.categoryName\r\n            },\r\n            {\r\n                title: '售价',\r\n                key: 'price',\r\n                dataIndex: 'price',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.price - b.price\r\n            },\r\n            {\r\n                title: '积分',\r\n                key: 'integral',\r\n                dataIndex: 'integral',\r\n                render: (text) => <span>{text}</span>,\r\n                sorter: (a, b) => a.integral - b.integral\r\n            },\r\n            {\r\n                title: '单位',\r\n                key: 'unit',\r\n                dataIndex: 'unit',\r\n                render: (text) => <span>{text}</span>\r\n            },\r\n            // {\r\n            //     title: '销量/周',\r\n            //     key: 'sales',\r\n            //     dataIndex: 'sales',\r\n            //     render: (text, record) => <span>{record.category === 999 ? '/' : text+record.unit}</span>,\r\n            //     sorter: (a, b) => a.sales - b.sales\r\n            // },\r\n            {\r\n                title: '状态',\r\n                key: 'status',\r\n                render: (record) => record.category === 999 ? <span>/</span> : (\r\n                    <span>\r\n                        <span>上架：</span>\r\n                        <Switch size=\"small\"\r\n                                defaultChecked={record.onsale === 1}\r\n                                onClick={()=>this.handleStateChange(record, \"onsale\")}\r\n                        /><br/>\r\n                        <span>新品：</span>\r\n                        <Switch size=\"small\"\r\n                                style={{marginTop: \"5px\"}}\r\n                                defaultChecked={record.isnew === 1}\r\n                                onClick={()=>this.handleStateChange(record, \"isnew\")}\r\n                        /><br/>\r\n                        <span>推荐：</span>\r\n                        <Switch size=\"small\"\r\n                                style={{marginTop: \"5px\"}}\r\n                                defaultChecked={record.recommend === 1}\r\n                                onClick={()=>this.handleStateChange(record, \"recommend\")}\r\n                        />\r\n                    </span>\r\n                )\r\n            },\r\n            // {\r\n            //     title: '上架',\r\n            //     key: 'onsale',\r\n            //     dataIndex: 'onsale',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"onsale\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            // {\r\n            //     title: '新品',\r\n            //     key: 'isnew',\r\n            //     dataIndex: 'isnew',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"isnew\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            // {\r\n            //     title: '推荐',\r\n            //     key: 'recommend',\r\n            //     dataIndex: 'recommend',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"recommend\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                        <Button size=\"small\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\" />\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"product-container\">\r\n                <TopNav nav={['商品管理', '商品列表']}/>\r\n                <div className=\"product-header\">\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <Button type=\"primary\" onClick={()=>this.handleAdd()}><Icon type=\"plus\"/>新增商品</Button>\r\n                            \r\n                        </Col>\r\n                        <Col span={6} style={{marginTop: \"-1px\"}}>\r\n                            <Cascader style={{width: \"120px\", marginRight: \"15px\"}}\r\n                                      placeholder=\"批量操作\"\r\n                                      options={this.state.options1}\r\n                                      onChange={this.handleCascaderChange}/>\r\n                            <Button type=\"primary\" onClick={this.handleOperate}>确认</Button>\r\n                        </Col>\r\n                        <Col span={10} style={{textAlign:\"right\"}}>\r\n                            <Select\r\n                                style={{width: \"110px\", textAlign: \"left\"}}\r\n                                placeholder=\"选择状态\"\r\n                                onChange={this.handleSelectChange}\r\n                            >\r\n                                <Select.Option value=\"\">全部</Select.Option>\r\n                                <Select.Option value=\"onsale-1\">已上架</Select.Option>\r\n                                <Select.Option value=\"onsale-0\">未上架</Select.Option>\r\n                                <Select.Option value=\"isnew-1\">新品</Select.Option>\r\n                                <Select.Option value=\"isnew-0\">非新品</Select.Option>\r\n                                <Select.Option value=\"recommend-1\">已推荐</Select.Option>\r\n                                <Select.Option value=\"recommend-0\">未推荐</Select.Option>\r\n                            </Select>\r\n                            <Input.Search\r\n                                placeholder=\"搜索商品名称/货号\"\r\n                                style={{width: \"200px\", float: \"right\", margin: \"0 15px \"}}\r\n                                onSearch={(value) => this.handleSearch(value)}\r\n                                enterButton\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            rowSelection={this.rowSelection}\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Product;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Upload, Icon, Modal } from 'antd';\r\nimport { reqImgDelete } from '../../api/index';\r\n\r\nclass PicturesWall extends React.Component {\r\n    state = {\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        fileList: [],\r\n    };\r\n    UNSAFE_componentWillMount = () => {\r\n        if(this.props.hasOwnProperty(\"imgs\")){\r\n            let urlArr = this.props.imgs.split(',');\r\n            let fileList = [];\r\n            urlArr.forEach((item, index) => {\r\n                fileList.push({\r\n                    uid: -1-index,\r\n                    name: item,\r\n                    status: 'done',\r\n                    url: '/upload/'+item\r\n                })\r\n            });\r\n            this.setState({fileList: fileList})\r\n        }\r\n    };\r\n    getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await this.getBase64(file.originFileObj);\r\n        }\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n        });\r\n    };\r\n    handleChange = async ({ file, fileList }) => {\r\n        if(file.status === 'done'){\r\n            let response = file.response;\r\n            file = fileList[fileList.length-1];\r\n            file.name = response.data.name;\r\n            file.url = response.data.url;\r\n        } else if(file.status === 'removed'){\r\n            await reqImgDelete(file.name);\r\n        }\r\n        let urls = fileList.map(item => {\r\n            return typeof(item.url) === 'string' ? item.url.split('upload/')[1] : item.url\r\n        });\r\n        this.props.onChange(urls.join(','));\r\n        this.setState({ fileList })\r\n    };\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"clearfix\">\r\n                <Upload\r\n                    action=\"/file/upload\"\r\n                    accept=\"image/*\"\r\n                    name=\"image\"\r\n                    listType=\"picture-card\"\r\n                    fileList={this.state.fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {this.state.fileList.length >= 6 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal visible={this.state.previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={this.state.previewImage} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PicturesWall;","import React from 'react';\r\nimport { Form, Select, InputNumber, Button, Checkbox, Row, Col, Card, Input, message } from 'antd';\r\nimport TopNav from '../../components/top-nav';\r\nimport PictureWall from '../../components/picture-wall/picture-wall';\r\nimport { addProductList, reqCategoryList } from '../../api';\r\n\r\nclass AddProduct extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            category_options: [],\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqCategoryList();\r\n        if(response.status === 0){\r\n            let options = [];\r\n            response.data.forEach((item) => {\r\n                options.push({key: item.name, value: item.id})\r\n            });\r\n            this.setState({category_options: options})\r\n        }\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    validateNumber = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品货号\")\r\n        }else if(value.length<5 || value.length>10){\r\n            callback(\"请输入少于5个，且不多于10个字符\")\r\n        }else if((/^[0-9a-zA-Z]*$/g).test(value)){\r\n            callback(\"请输入字母、数字或其组合\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateName = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入名称\")\r\n        }else if(value.length<2 || value.length>10){\r\n            callback(\"请输入不少于2个，且不超过10个字符\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validatePrice = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品价格\")\r\n        }else if(value<0){\r\n            callback(\"请按正确格式输入商品价格\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUnit = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品单位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateNoteProduct = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入产品备注\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntegral = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品积分值\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceTitle = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页标题\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceContent =(rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页内容\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                values.category = Number(values.category);\r\n                values.price = Number(values.price);\r\n                values.integral = Number(values.integral);\r\n                values.onsale = values.state.indexOf('onsale')===-1 ? 0 : 1;\r\n                values.isnew = values.state.indexOf('isnew')===-1 ? 0 : 1;\r\n                values.recommend = values.state.indexOf('recommend')===-1 ? 0 : 1;\r\n                values.deleted = 0;\r\n                delete values.state;\r\n                const response = await addProductList(values);\r\n                if(response.status === 0){\r\n                    message.success(response.msg+\",即将返回商品列表\", 2);\r\n                    this.timerID = setTimeout(()=>{\r\n                        this.props.history.replace('/product')\r\n                    }, 2000);\r\n                }\r\n            }else{\r\n                console.log(err)\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        const {form} = this.props;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '添加商品']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product')}}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            { form.getFieldDecorator('number', {\r\n                                rules: [{required: true, message: \"请输入商品货号\", validate: this.validateNumber}]\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            { form.getFieldDecorator('name', {\r\n                                rules: [{required: true, message: \"请输入商品名称\", validate: this.validateName}]\r\n                            })(<Input placeholder=\"请输入商品名称\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            { form.getFieldDecorator('category', {\r\n                                rules: [{ required: true, message: '请选择所属分类' }],\r\n                            })(\r\n                                <Select onChange={this.handleChange} placeholder=\"请选择所属分类\">\r\n                                    { this.state.category_options.map((item) => {\r\n                                        return <Select.Option key={item.value}>{item.key}</Select.Option>\r\n                                    })}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\" hasFeedback>\r\n                            { form.getFieldDecorator('price', {\r\n                                rules: [{required: true, message: \"请输入商品售价\",validate: this.validatePrice}]\r\n                            })(<Input addonAfter=\"元 &nbsp;&nbsp;&nbsp;\" placeholder=\"请输入商品售价\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            { form.getFieldDecorator('unit', {\r\n                                rules: [{required: true, message: \"请输入商品计量单位\", validate: this.validateUnit}]\r\n                            })(<Input placeholder=\"请输入商品计量单位\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品状态\">\r\n                            {form.getFieldDecorator('state', {\r\n                                initialValue: ['isNew'],\r\n                            })(\r\n                                <Checkbox.Group style={{ width: '100%', margin: \"10px 0 0 20px\"}}>\r\n                                    <Row>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"onsale\">上架</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"isnew\">新品</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"recommend\">推荐</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Checkbox.Group>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            { form.getFieldDecorator('integral', {\r\n                                rules: [{required: true, message: \"请输入积分值\", validate: this.validateIntegral}]\r\n                            })(<Input placeholder=\"请输入积分值\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"简介\">\r\n                            { form.getFieldDecorator('introduce', {\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入商品简介\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠提示\">\r\n                            { form.getFieldDecorator('tip', {\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入优惠提示\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品描述\">\r\n                            { form.getFieldDecorator('description', {\r\n                                rule: [{validate: this.validateIntroduceContent}]\r\n                            })(<Input.TextArea rows={4} placeholder=\"请输入商品描述\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣：\">\r\n                            {form.getFieldDecorator('discount_gold', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"白金会员折扣\">\r\n                            {form.getFieldDecorator('discount_platinum', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"钻石会员折扣\">\r\n                            {form.getFieldDecorator('discount_diamond', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"上传图片\">\r\n                            {form.getFieldDecorator('pictures', {\r\n                                rules: [{required: true, message: \"请上传商品图片\"}]\r\n                            })(<PictureWall/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品备注\">\r\n                            { form.getFieldDecorator('note')(\r\n                                <Input.TextArea rows={4} />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button style={{margin: \"50px 0 0 450px\"}} type=\"primary\" htmlType=\"submit\">完成，提交商品</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n    \r\n            \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'add-product-form' })(AddProduct);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Form, Select, InputNumber, Button, Checkbox, Row, Col, Card, Input, message } from 'antd';\r\nimport TopNav from '../../components/top-nav';\r\nimport PictureWall from '../../components/picture-wall/picture-wall';\r\nimport { updateProductList, reqCategoryList } from '../../api';\r\n\r\nclass EditProduct extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            categoryOptions: [],\r\n            data: []\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        data.state = [];\r\n        data.onsale===1 ? data.state.push(\"onsale\") : data.state.push();\r\n        data.isnew===1 ? data.state.push(\"isnew\") : data.state.push();\r\n        data.recommend===1 ? data.state.push(\"recommend\") : data.state.push();\r\n        this.setState({data: data});\r\n        const response = await reqCategoryList();\r\n        if(response.status === 0){\r\n            let options = [];\r\n            options.push({key: \"未分类\", value: 999});\r\n            response.data.forEach((item) => {\r\n                options.push({key: item.name, value: item.id})\r\n            });\r\n            this.setState({categoryOptions: options});\r\n        }\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    validateNumber = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品货号\")\r\n        }else if(value.length<5 || value.length>10){\r\n            callback(\"请输入少于5个，且不多于10个字符\")\r\n        }else if((/^[0-9a-zA-Z]*$/g).test(value)){\r\n            callback(\"请输入字母、数字或其组合\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateName = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入名称\")\r\n        }else if(value.length<2 || value.length>10){\r\n            callback(\"请输入不少于2个，且不超过10个字符\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validatePrice = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品价格\")\r\n        }else if(value<0){\r\n            callback(\"请按正确格式输入商品价格\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUnit = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品单位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateNoteProduct = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入产品备注\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntegral = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品积分值\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceTitle = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页标题\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceContent =(rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页内容\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                values.category = Number(values.category);\r\n                values.price = Number(values.price);\r\n                values.integral = Number(values.integral);\r\n                values.onsale = values.state.indexOf('onsale')===-1 ? 0 : 1;\r\n                values.isnew = values.state.indexOf('isnew')===-1 ? 0 : 1;\r\n                values.recommend = values.state.indexOf('recommend')===-1 ? 0 : 1;\r\n                delete values.state;\r\n                const response = await updateProductList(values);\r\n                if(response.status === 0){\r\n                    message.success(\"更新商品信息成功,即将返回商品列表页面\");\r\n                    this.timerID = setTimeout(()=>{\r\n                        this.props.history.replace('/product')\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        const {form} = this.props;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '商品列表', '编辑商品']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product')}}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"商品ID\" hasFeedback style={{display: \"none\"}}>\r\n                            { form.getFieldDecorator('id', {\r\n                                initialValue: this.state.data.id\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            { form.getFieldDecorator('number', {\r\n                                initialValue: this.state.data.number,\r\n                                rules: [{required: true, message: \"请输入商品货号\", validate: this.validateNumber}]\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            { form.getFieldDecorator('name', {\r\n                                initialValue: this.state.data.name,\r\n                                rules: [{required: true, message: \"请输入商品名称\", validate: this.validateName}]\r\n                            })(<Input placeholder=\"请输入商品名称\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            { form.getFieldDecorator('category', {\r\n                                initialValue: this.state.data.category,\r\n                                rules: [{ required: true, message: '请选择所属分类' }],\r\n                            })(\r\n                                <Select onChange={this.handleChange}>\r\n                                    { this.state.categoryOptions.map((item) => {\r\n                                        return <Select.Option key={item.value} value={item.value}>{item.key}</Select.Option>\r\n                                    })}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\" hasFeedback>\r\n                            { form.getFieldDecorator('price', {\r\n                                initialValue: this.state.data.price,\r\n                                rules: [{required: true, message: \"请输入商品售价\"}]\r\n                            })(<Input addonAfter=\"元 &nbsp;&nbsp;&nbsp;\" placeholder=\"请输入商品售价\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            { form.getFieldDecorator('unit', {\r\n                                initialValue: this.state.data.unit,\r\n                                rules: [{required: true, message: \"请输入商品计量单位\", validate: this.validateUnit}]\r\n                            })(<Input placeholder=\"请输入商品计量单位\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品状态\" style={{display: this.state.data.category === 999 ? \"none\" : \"block\"}}>\r\n                            {form.getFieldDecorator('state', {\r\n                                initialValue: this.state.data.state,\r\n                            })(\r\n                                <Checkbox.Group style={{ width: '100%', margin: \"10px 0 0 20px\"}}>\r\n                                    <Row>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"onsale\">上架</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"isnew\">新品</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"recommend\">推荐</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Checkbox.Group>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            { form.getFieldDecorator('integral', {\r\n                                initialValue: this.state.data.integral,\r\n                                rules: [{required: true, message: \"请输入积分值\"}]\r\n                            })(<Input placeholder=\"请输入积分值\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"简介\" hasFeedback>\r\n                            { form.getFieldDecorator('introduce', {\r\n                                initialValue: this.state.data.introduce,\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入简介\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠提示\" hasFeedback>\r\n                            { form.getFieldDecorator('tip', {\r\n                                initialValue: this.state.data.tip,\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入优惠提示\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品描述\" hasFeedback>\r\n                            { form.getFieldDecorator('description', {\r\n                                initialValue: this.state.data.description,\r\n                                rule: [{validate: this.validateIntroduceContent}]\r\n                            })(<Input.TextArea rows={4} placeholder=\"请输入商品描述\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣：\">\r\n                            {form.getFieldDecorator('discount_gold', {\r\n                                initialValue: this.state.data.discount_gold\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"白金会员折扣\">\r\n                            {form.getFieldDecorator('discount_platinum', {\r\n                                initialValue: this.state.data.discount_platinum\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"钻石会员折扣\">\r\n                            {form.getFieldDecorator('discount_diamond', {\r\n                                initialValue: this.state.data.discount_diamond\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"上传图片\">\r\n                            {form.getFieldDecorator('pictures', {\r\n                                initialValue: this.state.data.pictures\r\n                            })(<PictureWall imgs={this.state.data.pictures} />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品备注\" hasFeedback>\r\n                            { form.getFieldDecorator('note', {\r\n                                initialValue: this.state.data.note\r\n                            })(<Input.TextArea rows={4} />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button style={{margin: \"50px 0 0 450px\"}} type=\"primary\" htmlType=\"submit\">完成，提交商品</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'add-product-form' })(EditProduct);\r\n","import React from 'react';\r\nimport './product.less';\r\nimport {Form, Button, Card, Icon} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewProduct extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            data: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        console.log(data);\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        let stateYes = (string) => (<span><Icon type=\"check\" style={{color: \"#1DA57A\"}}/>{string}</span>);\r\n        let stateNo = (string) => (<span><Icon type=\"close\" style={{color: \"#1DA57A\"}}/>{string}</span>);\r\n        return (\r\n            <div className=\"product-view-container\">\r\n                <TopNav nav={['商品管理', '商品列表', '商品详情']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/product')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.number}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.category === 999 ? \"未设置分类\" : this.state.data.categoryName}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\">\r\n                            <span className=\"ant-form-text\">￥ {this.state.data.price.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.unit}</span>\r\n                        </Form.Item>\r\n                        {\r\n                            this.state.data.category === 999 ? null : (\r\n                                <Form.Item label=\"商品状态\">\r\n                            <span className=\"ant-form-text\" style={{marginLeft: \"-20px\"}}>\r\n                                {this.state.data.onsale ? stateYes(\"上架\") : stateNo(\"上架\")}\r\n                                {this.state.data.onsale ? stateYes(\"新品\") : stateNo(\"新品\")}\r\n                                {this.state.data.onsale ? stateYes(\"推荐\") : stateNo(\"推荐\")}\r\n                            </span>\r\n                                </Form.Item>\r\n                            )\r\n                        }\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"简介\">\r\n                            <span className=\"ant-form-text\">{this.state.data.introduce}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠提示\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tip}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品描述\">\r\n                            <span className=\"ant-form-text\">{this.state.data.description}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_gold===10 ? \"无\" : this.state.data.discount_gold+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_platinum===10 ? \"无\" : this.state.data.discount_platinum+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_diamond===10 ? \"无\" : this.state.data.discount_diamond+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品图片\">\r\n                            <span className=\"ant-form-pictures\">\r\n                                {\r\n                                    this.state.data.pictures===\"\" ? <span>无</span> :\r\n                                        this.state.data.pictures.split(\",\").map((item, index)=> {\r\n                                            return (<img key={index} src={'/upload/'+item} alt=\"商品图片\"/>)\r\n                                        })\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠信息备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({name:'product-add-form'})(ViewProduct);\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Input, Table, Button, Icon, Tag, Modal,  Select, DatePicker} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport {\r\n    reqOrderSearch,\r\n    reqProductList,\r\n    reqCustomerList,\r\n    reqOrderUpdate,\r\n    reqOrderList,\r\n    reqOrderRange\r\n} from '../../api/index';\r\nimport moment from \"moment\";\r\n\r\nclass Order extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            searching: false,\r\n            option: 0,\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqOrderList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentDidMount = () => {\r\n        this.timerID1 = setInterval(async () => {\r\n            if(!this.state.searching){\r\n                const response = await reqOrderList();\r\n                this.refreshTable(response)\r\n            }\r\n        }, 5000)\r\n    };\r\n    componentWillUnmount = () => {\r\n        this.setState = () => {};\r\n        clearInterval(this.timerID1);\r\n        clearTimeout(this.timerID2)\r\n    };\r\n    refreshTable = async (response1) => {\r\n        const response2 = await reqProductList();\r\n        const response3 = await reqCustomerList();\r\n        if(response1.status===0 && response2.status===0 && response3){\r\n            let data = response1.data.map(item1 => {\r\n                item1.commodity = JSON.parse(item1.commodity);\r\n                response3.data.forEach(item2 => {\r\n                    if(item1.customer === item2.id) item1.customer=item2\r\n                });\r\n                return item1\r\n            });\r\n            this.timerID2 = setTimeout(()=>{\r\n                this.setState({\r\n                    data: data.reverse(),\r\n                    isLoading: false\r\n                })\r\n            }, 100)\r\n            \r\n        }\r\n    };\r\n    handleSearch = async (id) => {\r\n        if(id){\r\n            const response = await reqOrderSearch(id);\r\n            this.setState({\r\n                searching: true,\r\n                isLoading: true\r\n            });\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({\r\n                searching: false,\r\n                isLoading: true\r\n            })\r\n        }\r\n    };\r\n    handleView = (record) => {\r\n        console.log(record);\r\n        this.props.history.push({pathname: '/order/view', state: {data : record}});\r\n    };\r\n    handleCustomerDetail = (record) => {\r\n        this.props.history.push({pathname: '/member/view', state: {data: record}})\r\n    };\r\n    handleCancel = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要取消订单(ID: \"+record.id+\")吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 2\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.map(item => {\r\n                        if(item.id === record.id) item.state = 3;\r\n                        return item\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleComplete = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要将订单(ID: \"+record.id+\")设置为完成状态吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 3\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.map(item => {\r\n                        if(item.id === record.id) item.state = 4;\r\n                        return item\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleSelectChange = (value) => {\r\n        this.setState({option: value});\r\n        if(value === 0){\r\n            this.setState({\r\n                searching: false,\r\n                isLoading: true\r\n            });\r\n            this.timerID2 = setTimeout(async () => {\r\n                const response = await reqOrderList();\r\n                this.refreshTable(response);\r\n                this.setState({isLoading: false})\r\n            }, 100)\r\n        }else{\r\n            this.setState({searching: true})\r\n        }\r\n    };\r\n    handleDatePickerChange = async (date, dateString) => {\r\n        if(dateString){\r\n            let start = new Date(dateString+\" 00:00:00\").getTime();\r\n            let end = new Date(dateString+\" 23:59:59\").getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    handleWeekPickerChange = async (week) => {\r\n        if(week){\r\n            let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n            let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n            start = new Date(start).getTime();\r\n            end = new Date(end).getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    handleMonthPickerChange = async (month) => {\r\n        if(month){\r\n            let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n            let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n            start = new Date(start).getTime();\r\n            end = new Date(end).getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    handleRangePickerChange = async (dates, dateStrings) => {\r\n        if(dateStrings[0] && dateStrings[1]){\r\n            let start = new Date(dateStrings[0]).getTime();\r\n            let end = new Date(dateStrings[1]).getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    render(){\r\n        const column = [\r\n            {\r\n                title: '订单ID',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text} [查看]</Button>\r\n            },\r\n            {\r\n                title: '顾客',\r\n                dataIndex: 'customer',\r\n                key: 'customer',\r\n                render: (text) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleCustomerDetail(text)}>\r\n                        {\r\n                            text.status===1 ? <span>{text.name} <Tag color=\"blue\">黄金</Tag></span> :\r\n                                text.status===2 ? <span>{text.name} <Tag color=\"green\">白金</Tag></span> :\r\n                                    text.status===3 ? <span>{text.name} <Tag color=\"red\">钻石</Tag></span> :\r\n                                        <span>{text.name}</span>\r\n                        }\r\n                    </Button>\r\n                ),\r\n                filters: [\r\n                    {text: \"黄金会员\", value: 1},\r\n                    {text: \"白金会员\", value: 2},\r\n                    {text: \"钻石会员\", value: 3},\r\n                    {text: \"普通顾客\", value: 0}\r\n                ],\r\n                onFilter: (value, record) => value === record.customer.status\r\n            },\r\n            {\r\n                title: '桌号',\r\n                dataIndex: 'seat',\r\n                key: 'seat',\r\n                render: (text) => <span>{text}</span>,\r\n                sorter: (a, b) => a.seat - b.seat\r\n            },\r\n            {\r\n                title: '订单内容',\r\n                dataIndex: 'commodity',\r\n                key: 'commodity',\r\n                render: (text) => (\r\n                    <div>\r\n                        {\r\n                            text.map((item, index) => {\r\n                                return <div key={index}>{item.name}<Icon type=\"close\"/>{item.count}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n            {\r\n                title: '下单时间',\r\n                dataIndex: 'createtime',\r\n                key: 'createtime',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => a.createtime - b.createtime,\r\n                // filters: [\r\n                //     {text: \"今日\", value: 0},\r\n                //     {text: \"近一周\", value: 1},\r\n                //     {text: \"近一个月\", value: 2},\r\n                //     {text: \"近一季度\", value: 3}\r\n                // ],\r\n                // onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '支付金额',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.amount - b.amount\r\n            },\r\n            {\r\n                title: '评价',\r\n                key: 'stars',\r\n                dataIndex: 'stars',\r\n                render: (text) => {\r\n                    if(text === 0){\r\n                        return <span>暂未评价</span>\r\n                    }else{\r\n                        let starArr=[];\r\n                        for(let i=0;i<text;i++){\r\n                            starArr.push(i)\r\n                        }\r\n                        return starArr.map((item) => {\r\n                            return <Icon key={item} type=\"star\" style={{color: \"yellow\"}} theme=\"filled\" />\r\n                        });\r\n                    }\r\n                },\r\n                sorter: (a, b) => a.stars - b.stars,\r\n                filters: [\r\n                    {text: \"未评价\", value: 0},\r\n                    {text: \"一星\", value: 1},\r\n                    {text: \"二星\", value: 2},\r\n                    {text: \"三星\", value: 3},\r\n                    {text: \"四星\", value: 4},\r\n                    {text: \"五星\", value: 5},\r\n                ],\r\n                onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (text, record) => text === 0 ? (\r\n                    <div>\r\n                        {\r\n                            record.urged === 0 ? '已付款' : <Tag color=\"red\">催单</Tag>\r\n                        }\r\n                    </div>\r\n                ) : text === 1 ? <Tag color=\"red\">请求取消</Tag> :\r\n                    text === 2 ? '已取消' : '已完成',\r\n                filters: [\r\n                    {text: \"已付款\", value: 0},\r\n                    {text: \"请求取消\", value: 1},\r\n                    {text: \"已取消\", value: 2},\r\n                    {text: \"已完成\", value: 3}\r\n                ],\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => record.state === 0 ? (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleComplete(record)}>完成</Button>\r\n                    </span>\r\n                ) : record.state === 1 ? (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleCancel(record)}>取消</Button>\r\n                    </span>\r\n                ) :  '/'\r\n            }\r\n        \r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['订单管理', '全部订单']} />\r\n                <div style={{margin: \"20px 22px 0 20px\", overflow: \"hidden\"}}>\r\n                    <div style={{display: \"inline-block\", width: \"70%\", textAlign: \"right\"}}>\r\n                        { this.state.option===0 ? null : this.getTimePicker()}\r\n                        <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                                style={{width: \"115px\", marginLeft: \"10px\"}}>\r\n                            <Select.Option value={0}>按顺序查看</Select.Option>\r\n                            <Select.Option value={1}>按日期查看</Select.Option>\r\n                            <Select.Option value={2}>按周次查看</Select.Option>\r\n                            <Select.Option value={3}>按月份查看</Select.Option>\r\n                            <Select.Option value={4}>自定义区间</Select.Option>\r\n                        </Select>\r\n                    </div>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"搜索订单ID\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={column}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n// import './order.less';\r\nimport {Form, Button, Card, Icon, Tag} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewOrder extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            data: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    getTime = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        return (\r\n            <div className=\"product-view-container\">\r\n                <TopNav nav={['订单管理', '订单详情']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看订单信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/order')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"订单ID\">\r\n                            <span className=\"ant-form-text\">{this.state.data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"顾客\">\r\n                            <span className=\"ant-form-text\">{this.state.data.customer.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"桌号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.seat}号</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"状态\">\r\n                            <span className=\"ant-form-text\" style={{textIndent: 0, marginLeft: \"20px\"}}>\r\n                                {\r\n                                    this.state.data.state === 0 ? (\r\n                                        <div>\r\n                                            {\r\n                                                this.state.data.urged === 0 ? <Tag color=\"blue\">已付款</Tag> : <Tag color=\"red\">催单</Tag>\r\n                                            }\r\n                                        </div>\r\n                                    ) : this.state.data.state === 1 ? <Tag color=\"red\">请求取消</Tag> :\r\n                                        this.state.data.state === 2 ? <Tag color=\"green\">已取消</Tag> :\r\n                                            <Tag color=\"green\">已完成</Tag>\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单列表\">\r\n                            <div className=\"ant-form-text\">\r\n                                {\r\n                                    this.state.data.commodity.map((item, index) => {\r\n                                        return <div key={index}>{item.name}<Icon type=\"close\"/> {item.count}</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"下单时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(this.state.data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单总金额\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.amount.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"实付金额\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.payment.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所获积分\">\r\n                            <span className=\"ant-form-text\">{this.state.data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"评价等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {\r\n                                    this.state.data.stars === 0 ? \"暂未评价\" : [1,2,3,4,5].map((item, index) => {\r\n                                        return (\r\n                                            <Icon key={index} type=\"star\" theme=\"filled\"\r\n                                                  style={{color: \"yellow\", marginLeft: \"5px\",\r\n                                                      display: item > this.state.data.stars ? \"none\" : \"inline\"}}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"评价文字\">\r\n                            <span className=\"ant-form-text\">\r\n                                {\r\n                                    this.state.data.stars === 0 ? \"暂未评价\" : this.state.data.evaluation\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({name:'product-add-form'})(ViewOrder);\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Input, Table, Button, Icon, Tag, Divider, Modal} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport {\r\n    reqOrderSearch,\r\n    reqProductList,\r\n    reqCustomerList,\r\n    reqOrderUpdate,\r\n    reqFrontdeskList\r\n} from '../../api/index';\r\n\r\nclass Stage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            searching: false\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqFrontdeskList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentDidMount = () => {\r\n        this.timerID1 = setInterval(async () => {\r\n            if(!this.state.searching){\r\n                const response = await reqFrontdeskList();\r\n                this.refreshTable(response)\r\n            }\r\n        }, 5000)\r\n    };\r\n    componentWillUnmount = () => {\r\n        this.setState = () => {};\r\n        clearInterval(this.timerID1);\r\n        clearTimeout(this.timerID2)\r\n    };\r\n    refreshTable = async (response1) => {\r\n        const response2 = await reqProductList();\r\n        const response3 = await reqCustomerList();\r\n        if(response1.status===0 && response2.status===0 && response3){\r\n            let data = response1.data.map(item1 => {\r\n                item1.commodity = JSON.parse(item1.commodity);\r\n                response3.data.forEach(item2 => {\r\n                    if(item1.customer === item2.id) item1.customer=item2\r\n                });\r\n                return item1\r\n            });\r\n            this.timerID2 = setTimeout(()=>{\r\n                this.setState({\r\n                    data: data.reverse(),\r\n                    isLoading: false\r\n                })\r\n            }, 100)\r\n            \r\n        }\r\n    };\r\n    handleSearch = async (id) => {\r\n        if(id){\r\n            const response = await reqOrderSearch(id);\r\n            this.setState({\r\n                searching: true,\r\n                isLoading: true\r\n            });\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({\r\n                searching: false,\r\n                isLoading: true\r\n            })\r\n        }\r\n    };\r\n    handleView = (record) => {\r\n        console.log(record);\r\n        this.props.history.push({pathname: '/order/stage/view', state: {data : record}});\r\n    };\r\n    handleCustomerDetail = (record) => {\r\n        this.props.history.push({pathname: '/member/view', state: {data: record}})\r\n    };\r\n    handleCancel = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要取消订单(ID: \"+record.id+\")吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 2\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.filter(item => {\r\n                        return item.id !== record.id\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleComplete = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要将订单(ID: \"+record.id+\")设置为完成状态吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 3\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.filter(item => {\r\n                        return item.id !== record.id\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    getTime = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const column = [\r\n            {\r\n                title: '订单ID',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text} [查看]</Button>\r\n            },\r\n            {\r\n                title: '顾客',\r\n                dataIndex: 'customer',\r\n                key: 'customer',\r\n                render: (text) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleCustomerDetail(text)}>\r\n                        {\r\n                            text.status===1 ? <span>{text.name} <Tag color=\"blue\">黄金</Tag></span> :\r\n                                text.status===2 ? <span>{text.name} <Tag color=\"green\">白金</Tag></span> :\r\n                                    text.status===3 ? <span>{text.name} <Tag color=\"red\">钻石</Tag></span> :\r\n                                        <span>{text.name}</span>\r\n                        }\r\n                    </Button>\r\n                ),\r\n                filters: [\r\n                    {text: \"黄金会员\", value: 1},\r\n                    {text: \"白金会员\", value: 2},\r\n                    {text: \"钻石会员\", value: 3},\r\n                    {text: \"普通顾客\", value: 0}\r\n                ],\r\n                onFilter: (value, record) => value === record.customer.status\r\n            },\r\n            {\r\n                title: '桌号',\r\n                dataIndex: 'seat',\r\n                key: 'seat',\r\n                render: (text) => <span>{text}</span>,\r\n                sorter: (a, b) => a.seat - b.seat\r\n            },\r\n            {\r\n                title: '订单内容',\r\n                dataIndex: 'commodity',\r\n                key: 'commodity',\r\n                render: (text) => (\r\n                    <div>\r\n                        {\r\n                            text.map((item, index) => {\r\n                                return <div key={index}>{item.name}<Icon type=\"close\"/>{item.count}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n            {\r\n                title: '下单时间',\r\n                dataIndex: 'createtime',\r\n                key: 'createtime',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTime(text)}</span>,\r\n                sorter: (a, b) => a.createtime - b.createtime,\r\n                // filters: [\r\n                //     {text: \"今日\", value: 0},\r\n                //     {text: \"近一周\", value: 1},\r\n                //     {text: \"近一个月\", value: 2},\r\n                //     {text: \"近一季度\", value: 3}\r\n                // ],\r\n                // onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '支付金额',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.amount - b.amount\r\n            },\r\n            {\r\n                title: '评价',\r\n                key: 'stars',\r\n                dataIndex: 'stars',\r\n                render: (text) => {\r\n                    if(text === 0){\r\n                        return <span>暂未评价</span>\r\n                    }else{\r\n                        let starArr=[];\r\n                        for(let i=0;i<text;i++){\r\n                            starArr.push(i)\r\n                        }\r\n                        return starArr.map((item) => {\r\n                            return <Icon key={item} type=\"star\" style={{color: \"yellow\"}} theme=\"filled\" />\r\n                        });\r\n                    }\r\n                },\r\n                sorter: (a, b) => a.stars - b.stars,\r\n                filters: [\r\n                    {text: \"未评价\", value: 0},\r\n                    {text: \"一星\", value: 1},\r\n                    {text: \"二星\", value: 2},\r\n                    {text: \"三星\", value: 3},\r\n                    {text: \"四星\", value: 4},\r\n                    {text: \"五星\", value: 5},\r\n                ],\r\n                onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (text, record) => text === 0 ? (\r\n                    <div>\r\n                        {\r\n                            record.urged === 0 ? <Tag color=\"blue\">已付款</Tag> : <Tag color=\"red\">催单</Tag>\r\n                        }\r\n                    </div>\r\n                ) : text === 1 ? <Tag color=\"red\">请求取消</Tag> :\r\n                    text === 2 ? <Tag color=\"green\">已取消</Tag> :\r\n                        <Tag color=\"green\">已完成</Tag>,\r\n                filters: [\r\n                    {text: \"已付款\", value: 0},\r\n                    {text: \"请求取消\", value: 1},\r\n                    {text: \"已取消\", value: 2},\r\n                    {text: \"已完成\", value: 3}\r\n                ],\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => record.state === 0 ? (\r\n                    <span>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleComplete(record)}>完成</Button>\r\n                    </span>\r\n                ) : record.state === 1 ? (\r\n                    <span>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleCancel(record)}>取消</Button>\r\n                    </span>\r\n                ) :  '/'\r\n            }\r\n        \r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['订单管理', '全部订单']} />\r\n                <div style={{margin: \"20px 22px 0 20px\", overflow: \"hidden\"}}>\r\n                    {/*<Button type=\"primary\" onClick={this.handleAdd}>新增订单</Button>*/}\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"搜索订单ID\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={column}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Button, Input, Table, Divider, Icon, Modal, Tag, message, Form} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport Loading from '../../components/loading/index';\r\nimport { reqMemberList, reqMemberSearch, reqMemberDelete, reqRuleUpdate } from '../../api/index';\r\n\r\nclass Member extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            visible: false,\r\n            rule: {}\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let response = await reqMemberList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = (response) => {\r\n        if(response.status === 0){\r\n            let data = response.data;\r\n            data = data.map(item => {\r\n                return item\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data,\r\n                })\r\n            }, 300)\r\n        }\r\n    };\r\n    handleSearch = async (value) => {\r\n        console.log(value);\r\n        const response = value===\"\" ? await reqMemberList() : await reqMemberSearch(value);\r\n        this.refreshTable(response)\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/member/add')\r\n    };\r\n    //会员设置\r\n    // handleSet = async () => {\r\n    //     const response = await reqRuleList();\r\n    //     if(response.status === 0){\r\n    //         this.setState({\r\n    //             visible: true,\r\n    //             rule: response.data[0]\r\n    //         })\r\n    //     }\r\n    // };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除会员\\\"\"+record.name+\"(ID:\"+record.id+\")\\\"吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                const response1 = await reqMemberDelete(record.id);\r\n                if(response1.status === 0){\r\n                    let data = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleDetail = (record) => {\r\n        this.props.history.push({pathname: '/member/view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/member/edit', state: { data: record}})\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if(!err){\r\n                const response = await reqRuleUpdate(values);\r\n                if(response.status === 0){\r\n                    this.setState({visible: false});\r\n                    this.timerID = setTimeout(()=>{\r\n                        message.success(\"设置成功\");\r\n                    }, 500)\r\n                }\r\n            }\r\n        })\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '会员ID',\r\n                key: 'id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '昵称/等级',\r\n                key: 'name',\r\n                dataIndex: 'name',\r\n                render: (text, record) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleDetail(record)}>\r\n                        {\r\n                            record.status===1 ? <span>{text} <Tag color=\"blue\">黄金</Tag></span> :\r\n                                record.status===2 ? <span>{text} <Tag color=\"green\">白金</Tag></span> :\r\n                                    record.status===3 ? <span>{text} <Tag color=\"red\">钻石</Tag></span> :\r\n                                        <span>{text}</span>\r\n                        }\r\n                    </Button>\r\n                ),\r\n                filters: [{text: '黄金会员', value: 1}, {text: '白金会员', value: 2}, {text: '钻石会员', value: 3}],\r\n                onFilter: (value, record) => value===record.status\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                key: 'createtime',\r\n                dataIndex: 'createtime',\r\n                render: (text) => <span>{this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => a.createtime-b.createtime,\r\n            },\r\n            {\r\n                title: '电话',\r\n                key: 'tel',\r\n                dataIndex: 'tel',\r\n                render: (text)=><span><Icon type=\"phone\" /> {text}</span>\r\n            },\r\n            {\r\n                title: '积分',\r\n                key: 'integral',\r\n                dataIndex: 'integral',\r\n                sorter: (a, b) => a.integral-b.integral\r\n            },\r\n            {\r\n                title: '订单数量',\r\n                key: 'orderSum',\r\n                render: (text, record) => <span>待完成</span>,\r\n                filters: [\r\n                    {\r\n                        text: '最近一周',\r\n                        value: '0',\r\n                    },\r\n                    {\r\n                        text: '最近一月',\r\n                        value: '1',\r\n                    },\r\n                    {\r\n                        text: '最近一年',\r\n                        value: '2'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '消费金额',\r\n                key: 'orderAmount',\r\n                render: (text, record) => <span>待完成</span>,\r\n                filters: [\r\n                    {\r\n                        text: '最近一周',\r\n                        value: '0',\r\n                    },\r\n                    {\r\n                        text: '最近一月',\r\n                        value: '1',\r\n                    },\r\n                    {\r\n                        text: '最近一年',\r\n                        value: '2'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={[\"会员管理\",\"会员列表\"]}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\"/>新增会员</Button>\r\n                    {/*会员设置*/}\r\n                    {/*<Button type=\"primary\" style={{marginLeft: \"40px\"}} onClick={this.handleSet}>会员设置</Button>*/}\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询会员ID/昵称\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey={record => record.id}\r\n                               bordered\r\n                        />\r\n                }\r\n                {/*<Modal*/}\r\n                {/*    visible={this.state.visible}*/}\r\n                {/*    title=\"会员设置\"*/}\r\n                {/*    onCancel={()=>{this.setState({visible: false})}}*/}\r\n                {/*    footer={null}*/}\r\n                {/*>*/}\r\n                {/*    <Form style={{overflow: \"hidden\"}} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }} onSubmit={this.handleSubmit}>*/}\r\n                {/*        <Form.Item label=\"ID\" style={{display: \"none\"}}>*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('id', {*/}\r\n                {/*                    initialValue: 1000*/}\r\n                {/*                })(<InputNumber/>)*/}\r\n                {/*            }*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        <Form.Item label=\"黄金会员\">*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('gold', {*/}\r\n                {/*                    initialValue: this.state.rule.gold || 0*/}\r\n                {/*                })(<InputNumber style={{width: \"150px\"}}/>)*/}\r\n                {/*            }*/}\r\n                {/*            <span style={{marginLeft: \"10px\"}}>积分</span>*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        <Form.Item label=\"白金会员\">*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('platinum', {*/}\r\n                {/*                    initialValue: this.state.rule.platinum || 0*/}\r\n                {/*                })(<InputNumber style={{width: \"150px\"}}/>)*/}\r\n                {/*            }*/}\r\n                {/*            <span style={{marginLeft: \"10px\"}}>积分</span>*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        <Form.Item label=\"钻石会员\">*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('diamond', {*/}\r\n                {/*                    initialValue: this.state.rule.diamond || 0*/}\r\n                {/*                })(<InputNumber style={{width: \"150px\"}}/>)*/}\r\n                {/*            }*/}\r\n                {/*            <span style={{marginLeft: \"10px\"}}>积分</span>*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        /!*<Button style={{float: \"right\", margin: \"20px 160px 0 30px\"}} type=\"primary\" htmlType=\"submit\">确定</Button>*!/*/}\r\n                {/*        <Popconfirm*/}\r\n                {/*            placement=\"topRight\"*/}\r\n                {/*            title=\"确定要更新会员设置吗？\"*/}\r\n                {/*            okType=\"danger\"*/}\r\n                {/*            onConfirm={this.handleSubmit}*/}\r\n                {/*            okText=\"确认\"*/}\r\n                {/*            cancelText=\"取消\"*/}\r\n                {/*        >*/}\r\n                {/*            <Button style={{float: \"right\", margin: \"20px 160px 0 30px\"}} type=\"primary\">设置</Button>*/}\r\n                {/*        </Popconfirm>*/}\r\n                {/*        <Button*/}\r\n                {/*            style={{float: \"right\", marginTop: \"20px\"}}*/}\r\n                {/*            type=\"primary\"*/}\r\n                {/*            onClick={()=>{this.setState({visible: false})}}*/}\r\n                {/*        >取消</Button>*/}\r\n                {/*    </Form>*/}\r\n                {/*</Modal>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(Member);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Card, Button, Input, message, Radio} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { reqMemberAdd } from '../../api/index'\r\n\r\nconst AddCustomer = Form.create({name: 'add-member-form'})(\r\n    class extends React.Component{\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields(async (err, values) => {\r\n                if(!err){\r\n                    let data = values;\r\n                    data.createtime = new Date().getTime();\r\n                    data.status = 1;\r\n                    data.integral = 0;\r\n                    data.orderid = '';\r\n                    data.deleted = 0;\r\n                    const response = await reqMemberAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增会员成功！即将返回会员列表页面\");\r\n                        this.timerID = setTimeout(() => {\r\n                            this.props.history.push('/member')\r\n                        }, 2000)\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['会员管理', '新增会员']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增会员信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/member')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"姓名\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('status', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: 1\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={1}>黄金会员</Radio.Button>\r\n                                            <Radio.Button value={2}>白金会员</Radio.Button>\r\n                                            <Radio.Button value={3}>钻石会员</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddCustomer;","import React from 'react';\r\nimport { Form, Card, Button, Input, message, InputNumber, Radio} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { updateMemberList } from '../../api/index'\r\n\r\nconst EditCustomer = Form.create({name: 'add-member-form'})(\r\n    class extends React.Component{\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields(async (err, values) => {\r\n                if(!err){\r\n                    let data = {};\r\n                    data.id = this.props.location.state.data.id;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key];\r\n                        }\r\n                    }\r\n                    const response = await updateMemberList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"编辑会员信息成功，即将返回会员列表页！\");\r\n                        this.timerID = setTimeout(() => {\r\n                            this.props.history.push('/member')\r\n                        }, 2000)\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const data = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['会员管理', '会员列表', '编辑会员']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑会员信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/member')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"姓名\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.name\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.tel\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('status', {\r\n                                        initialValue: data.status,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={1}>黄金</Radio.Button>\r\n                                            <Radio.Button value={2}>白金</Radio.Button>\r\n                                            <Radio.Button value={3}>钻石</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"积分\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('integral', {\r\n                                        initialValue: data.integral\r\n                                    })(<InputNumber style={{width: \"100px\"}} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: data.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditCustomer;","import React from 'react';\r\nimport './member.less';\r\nimport {Button, Card, Form, Tag} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewCustomer extends React.Component{\r\n    getTime = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        return <span>{time.getFullYear()+'-'+month+'-'+time.getDate()}&nbsp;&nbsp;{time.getHours()+':'+time.getMinutes()}</span>;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        let data = this.props.location.state.data;\r\n        return (\r\n            <div className=\"customer-view-container\">\r\n                <TopNav nav={['会员管理', '会员列表', '会员详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看会员详情</span>}\r\n                      extra={<Button onClick={()=>{this.props.history.push('/member')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"会员ID\">\r\n                            <span className=\"ant-form-text\">{data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"积分\">\r\n                            <span className=\"ant-form-text\">{data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span style={{marginLeft: \"20px\"}}>\r\n                                {\r\n                                    data.status===1 ? <Tag color=\"blue\">黄金</Tag> :\r\n                                        data.status===2 ? <Tag color=\"green\">白金</Tag> : <Tag color=\"red\">钻石</Tag>\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"创建时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{data.note ? data.note : '无'}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCustomer;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Divider, Icon, Input, Table, Tag, Modal} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport { reqEmployeeList, reqEmployeeDelete, reqEmployeeSearch } from '../../api/index';\r\n\r\nclass Employee extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            dutyFilter: [],\r\n            departmentFilter: []\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqEmployeeList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = (response) => {\r\n        if(response.status === 0){\r\n            let department = [], departmentFilter = [], duty = [], dutyFilter = [];\r\n            response.data.forEach(item => {\r\n                department.push(item.department);\r\n                duty.push(item.duty)\r\n            });\r\n            new Set(department).forEach(item => {\r\n                departmentFilter.push({text: item, value: item})\r\n            });\r\n            new Set(duty).forEach(item => {\r\n                dutyFilter.push({text: item, value: item})\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: response.data,\r\n                    departmentFilter: departmentFilter,\r\n                    dutyFilter: dutyFilter\r\n                })\r\n            })\r\n        }\r\n    };\r\n    handleSearch = async (value) => {\r\n        const response = value === \"\" ? await reqEmployeeList() : await reqEmployeeSearch(value);\r\n        this.refreshTable(response)\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除员工\\\"\"+record.name+\"(工号：\"+record.workid+\")\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqEmployeeDelete(record.workid);\r\n                if(response.status === 0){\r\n                    let data = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.workid===record.workid ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({data})\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        })\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push(\"/employee/add\")\r\n    };\r\n    handleView = (record) => {\r\n        console.log(record);\r\n        this.props.history.push({pathname: '/employee/view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/employee/edit', state: {data: record}})\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '工号',\r\n                key: 'workid',\r\n                dataIndex: 'workid',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '姓名',\r\n                key: 'name',\r\n                dataIndex: 'name'\r\n            },\r\n            {\r\n                title: '性别',\r\n                key: 'gender',\r\n                dataIndex: 'gender',\r\n                render: (text) => <span>{text === 0 ? '女' : '男'}</span>,\r\n                filters: [{text: '男', value: 1},{text: '女', value: 0}],\r\n                onFilter: (value, record) => value===record.gender\r\n            },\r\n            {\r\n                title: '年龄',\r\n                key: 'age',\r\n                dataIndex: 'age',\r\n                sorter: (a, b) => a.age-b.age\r\n            },\r\n            {\r\n                title: '电话',\r\n                key: 'tel',\r\n                dataIndex: 'tel',\r\n                render: (text)=><span><Icon type=\"phone\" /> {text}</span>\r\n            },\r\n            {\r\n                title: '工龄',\r\n                key: 'workage',\r\n                dataIndex: 'entrytime',\r\n                render: (text) => <span>{new Date().getFullYear()-new Date(text).getFullYear() || \"未满一年\"}</span>,\r\n                sorter: (a, b) => a.entrytime-b.entrytime\r\n            },\r\n            {\r\n                title: '部门',\r\n                key: 'department',\r\n                dataIndex: 'department',\r\n                filters: this.state.departmentFilter,\r\n                onFilter: (value, record) => value===record.department\r\n            },\r\n            {\r\n                title: '职责',\r\n                key: 'duty',\r\n                dataIndex: 'duty',\r\n                render: (text,record) => record.level===0 ? <span>{text} <Tag color=\"blue\">初级</Tag></span> :\r\n                    record.level===1 ? <span>{text} <Tag color=\"green\">中级</Tag></span> :\r\n                        <span>{text} <Tag color=\"red\">高级</Tag></span>,\r\n                filters: this.state.dutyFilter,\r\n                onFilter: (value, record) => value===record.duty\r\n            },\r\n            {\r\n                title: '月薪',\r\n                key: 'salary',\r\n                dataIndex: 'salary',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.salary-b.salary\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['人事管理', '员工列表']} />\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\"/>新增员工</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询工号/姓名\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading/> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey={record => record.workid}\r\n                               bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee;","import React from 'react';\r\nimport {Button, Card, Form, Input, Radio, InputNumber, Steps, DatePicker, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport Select from \"antd/es/select\";\r\nimport PicturesWall from \"../../components/picture-wall/picture-wall\";\r\nimport { addEmployeeList } from '../../api/index';\r\n\r\nconst AddEmployee = Form.create({name: 'add-employee-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                current: 0,\r\n                value1: {},\r\n                data: {},\r\n                key: 'tab1'\r\n            }\r\n        }\r\n        handleNext = () => {\r\n            let field = ['name','identity','gender','age','nation','birthday','origin','marriage','institution','degree','graduatetime'];\r\n            this.props.form.validateFields(field,(err,values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        current: current+1,\r\n                        data: data\r\n                    })\r\n                }\r\n            })\r\n        };\r\n        handlePrevious = () => {\r\n            let current = this.state.current;\r\n            this.setState({current: current-1})\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            let field = ['profile','workid','entrytime','department','duty','level','tel','address','salary','note'];\r\n            this.props.form.validateFields(field, async (err, values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    data.birthday = new Date(data.birthday).getTime();\r\n                    data.graduatetime = new Date(data.graduatetime).getTime();\r\n                    data.entrytime = new Date(data.entrytime).getTime();\r\n                    const response = await addEmployeeList(data);\r\n                    if(response.status === 0){\r\n                        this.setState({\r\n                            data: data,\r\n                            current: current+1\r\n                        });\r\n                        message.success(\"新增员工信息成功！\");\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        onTabChange = (key) => {\r\n            this.setState({ key: key });\r\n        };\r\n        getDateTime = (birthday) => {\r\n            let time = new Date(birthday);\r\n            let month = time.getMonth()+1;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            month = month>=10 ? month : \"0\"+month;\r\n            return time.getFullYear()+'-'+month+'-'+date;\r\n        };\r\n        getMonthTime = (date) => {\r\n            let time = new Date(date);\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            return time.getFullYear()+'-'+month;\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const contentList = {\r\n                tab1: (\r\n                    <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"身份证号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.identity}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"性别\">\r\n                            <span className=\"ant-form-text\">{this.state.data.gender===0 ? '女' : '男'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"年龄\">\r\n                            <span className=\"ant-form-text\">{this.state.data.age}岁</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"民族\">\r\n                            <span className=\"ant-form-text\">{this.state.data.nation}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"出生日期\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.birthday)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"籍贯\">\r\n                            <span className=\"ant-form-text\">{this.state.data.origin}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"婚姻状况\">\r\n                            <span className=\"ant-form-text\">{this.state.data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"学历\">\r\n                            <span className=\"ant-form-text\">{this.state.data.degree}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业院校\">\r\n                            <span className=\"ant-form-text\">{this.state.data.institution}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业时间\">\r\n                            <span className=\"ant-form-text\">{this.getMonthTime(this.state.data.graduatetime)}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                ),\r\n                tab2: (\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"工号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.workid}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"入职时间\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.entrytime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"部门\">\r\n                            <span className=\"ant-form-text\">{this.state.data.department}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"职责\">\r\n                            <span className=\"ant-form-text\">{this.state.data.duty}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.level===0 ? \"初级\" : this.state.data.level===1 ?  \"中级\" : \"高级\"}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"住址\">\r\n                            <span className=\"ant-form-text\">{this.state.data.address}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"月薪\">\r\n                            <span className=\"ant-form-text\">{this.state.data.salary} 元</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    !this.state.data.profile ? <span>无</span> :\r\n                                        <img src={'/upload/' + this.state.data.profile}\r\n                                             alt=\"员工照片\"\r\n                                             style={{\r\n                                                 width: \"100px\",\r\n                                                 height: \"100px\",\r\n                                                 padding: \"7px\",\r\n                                                 marginRight: \"10px\",\r\n                                                 borderRadius: \"5px\",\r\n                                                 border: \"1px solid lightgray\"}}\r\n                                        />\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n            };\r\n            const steps = [\r\n                {\r\n                    title: \"填写基本信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                            <Form.Item label=\"姓名\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"身份证号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('identity', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入身份证号码\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"性别\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('gender', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={1} style={{margin: \"0 20px\"}}>男</Radio>\r\n                                            <Radio value={0}>女</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"年龄\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('age', {\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber style={{width: \"150px\"}} />)\r\n                                }\r\n                                <span className=\"ant-form-text\">岁</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"民族\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('nation', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入民族\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"出生日期\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('birthday', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"籍贯\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('origin', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入籍贯\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            \r\n                            \r\n                            <Form.Item label=\"婚姻状况\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('marriage', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={0} style={{margin: \"0 20px\"}}>未婚</Radio>\r\n                                            <Radio value={1}>已婚</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"学历\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('degree', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select placeholder=\"请选择学历\" style={{width: \"187px\"}}>\r\n                                            <Select.Option value='博士'>博士</Select.Option>\r\n                                            <Select.Option value='硕士'>硕士</Select.Option>\r\n                                            <Select.Option value='本科'>本科</Select.Option>\r\n                                            <Select.Option value='高中'>高中</Select.Option>\r\n                                            <Select.Option value='初中'>初中</Select.Option>\r\n                                            <Select.Option value='小学'>小学</Select.Option>\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业院校\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('institution', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入毕业院校\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('graduatetime', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker.MonthPicker format='YYYY/MM' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\"\r\n                                        style={{margin: \"50px 0 0 450px\"}}\r\n                                        onClick={()=>this.handleNext(0)}>下一步</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"填写工作信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"工号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('workid', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入工号\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"入职时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('entrytime', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"部门\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('department', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input  placeholder=\"请输入工作部门\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"职责\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('duty', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入工作职责\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('level', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={0}>初 级</Radio.Button>\r\n                                            <Radio.Button value={1}>中 级</Radio.Button>\r\n                                            <Radio.Button value={2}>高 级</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"住址\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('address', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入住址\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"月薪\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('salary', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonAfter=\"元\" placeholder=\"请输入月薪\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"照片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('profile', {\r\n                                        rules: [{required: true}]\r\n                                    })(<PicturesWall />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input.Group style={{marginLeft: \"410px\"}}>\r\n                                    <Button type=\"primary\" style={{marginRight: \"50px\"}} onClick={()=>this.handlePrevious()}>上一步</Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">完成，确认提交</Button>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"提交成功\",\r\n                    content: (\r\n                        <Card\r\n                            style={{ width: \"80%\", margin: \"20px auto\"}}\r\n                            tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                            activeTabKey={this.state.key}\r\n                            onTabChange={key => {\r\n                                this.onTabChange(key);\r\n                            }}\r\n                        >\r\n                            {contentList[this.state.key]}\r\n                        </Card>\r\n                    )\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '员工列表', '新增员工']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增员工信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Steps current={this.state.current} style={{margin: \"40px auto\", width: \"550px\"}}>\r\n                            {\r\n                                steps.map((item, index) =>\r\n                                    <Steps.Step key={index} title={item.title}/>)\r\n                            }\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[this.state.current].content}</div>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddEmployee;","import React from \"react\";\r\nimport { Form, Card, Button } from \"antd\";\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewEmployee extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'tab1'\r\n        }\r\n    }\r\n    onTabChange = (key) => {\r\n        this.setState({key: key})\r\n    };\r\n    getDateTime = (birthday) => {\r\n        let time = new Date(birthday);\r\n        let month = time.getMonth()+1;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        month = month>=10 ? month : \"0\"+month;\r\n        return time.getFullYear()+'-'+month+'-'+date;\r\n    };\r\n    getMonthTime = (date) => {\r\n        let time = new Date(date);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        return time.getFullYear()+'-'+month;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        const data = this.props.location.state.data;\r\n        const contentList = {\r\n            tab1: (\r\n                <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                    <Form.Item label=\"姓名\">\r\n                        <span className=\"ant-form-text\">{data.name}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"身份证号\">\r\n                        <span className=\"ant-form-text\">{data.identity}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"性别\">\r\n                        <span className=\"ant-form-text\">{data.gender===0 ? '女' : '男'}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"年龄\">\r\n                        <span className=\"ant-form-text\">{data.age}岁</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"民族\">\r\n                        <span className=\"ant-form-text\">{data.nation}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"出生日期\">\r\n                        <span className=\"ant-form-text\">{this.getDateTime(data.birthday)}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"籍贯\">\r\n                        <span className=\"ant-form-text\">{data.origin}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"婚姻状况\">\r\n                        <span className=\"ant-form-text\">{data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"学历\">\r\n                        <span className=\"ant-form-text\">{data.degree}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"毕业院校\">\r\n                        <span className=\"ant-form-text\">{data.institution}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"毕业时间\">\r\n                        <span className=\"ant-form-text\">{this.getMonthTime(data.graduatetime)}</span>\r\n                    </Form.Item>\r\n                </Form>\r\n            ),\r\n            tab2: (\r\n                <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                    <Form.Item label=\"工号\">\r\n                        <span className=\"ant-form-text\">{data.workid}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"入职时间\">\r\n                        <span className=\"ant-form-text\">{this.getDateTime(data.entrytime)}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"部门\">\r\n                        <span className=\"ant-form-text\">{data.department}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"职责\">\r\n                        <span className=\"ant-form-text\">{data.duty}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"等级\">\r\n                        <span className=\"ant-form-text\">{data.level===0 ? \"初级\" : data.level===1 ?  \"中级\" : \"高级\"}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Tel\">\r\n                        <span className=\"ant-form-text\">{data.tel}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"住址\">\r\n                        <span className=\"ant-form-text\">{data.address}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"月薪\">\r\n                        <span className=\"ant-form-text\">{data.salary.toFixed(2)} 元</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"备注\">\r\n                        <span className=\"ant-form-text\">{ data.note ? data.note : '无'}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    data.profile===\"\" ? <span>无</span> :\r\n                                        data.profile.split(\",\").map((item, index)=> {\r\n                                            return (<img key={index}\r\n                                                         src={'/upload/'+item}\r\n                                                         alt=\"员工照片\"\r\n                                                         style={{width: \"100px\",\r\n                                                             height: \"100px\",\r\n                                                             padding: \"7px\",\r\n                                                             marginRight: \"10px\",\r\n                                                             borderRadius: \"5px\",\r\n                                                             border: \"1px solid lightgray\"}}\r\n                                                    />)\r\n                                        })\r\n                                }\r\n                            </span>\r\n                    </Form.Item>\r\n                </Form>\r\n            )\r\n        };\r\n        return (\r\n            <div className=\"employee-view-container\">\r\n                <TopNav nav={['人事管理', '员工列表', '员工详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看员工详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                      tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                      activeTabKey={this.state.key}\r\n                      onTabChange={key=>this.onTabChange(key)}\r\n                >\r\n                    {contentList[this.state.key]}\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEmployee;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, DatePicker, Form, Input, InputNumber, message, Radio, Steps} from \"antd\";\r\nimport { updateEmployeeList } from \"../../api\";\r\nimport Select from \"antd/es/select\";\r\nimport PicturesWall from \"../../components/picture-wall/picture-wall\";\r\nimport moment from 'moment';\r\n\r\nconst EditEmployee = Form.create({name: 'edit-employee-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                current: 0,\r\n                value1: {},\r\n                data: {},\r\n                key: 'tab1'\r\n            }\r\n        }\r\n        handleNext = () => {\r\n            let field = ['name','identity','gender','age','nation','birthday','origin','marriage','institution','degree','graduatetime'];\r\n            this.props.form.validateFields(field,(err,values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        current: current+1,\r\n                        data: data\r\n                    })\r\n                }\r\n            })\r\n        };\r\n        handlePrevious = () => {\r\n            let current = this.state.current;\r\n            this.setState({current: current-1})\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            let field = ['profile','workid','entrytime','department','duty','level','tel','address','salary','note'];\r\n            this.props.form.validateFields(field, async (err, values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    data.birthday = new Date(data.birthday).getTime();\r\n                    data.graduatetime = new Date(data.graduatetime).getTime();\r\n                    data.entrytime = new Date(data.entrytime).getTime();\r\n                    let updateData = {};\r\n                    updateData.workid = data.workid;\r\n                    for(let key in data){\r\n                        if(data.hasOwnProperty(key)){\r\n                            updateData[key] = data[key]\r\n                        }\r\n                    }\r\n                    const response = await updateEmployeeList(updateData);\r\n                    if(response.status === 0){\r\n                        this.setState({\r\n                            data: data,\r\n                            current: current+1\r\n                        });\r\n                        message.success(\"编辑员工信息成功！\");\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        onTabChange = (key) => {\r\n            this.setState({ key: key });\r\n        };\r\n        getDateTime = (birthday) => {\r\n            let time = new Date(birthday);\r\n            let month = time.getMonth()+1;\r\n            return time.getFullYear()+'-'+month+'-'+time.getDate();\r\n        };\r\n        getMonthTime = (date) => {\r\n            let time = new Date(date);\r\n            let month = time.getMonth()+1;\r\n            return time.getFullYear()+'-'+month;\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const data = this.props.location.state.data;\r\n            const contentList = {\r\n                tab1: (\r\n                    <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"身份证号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.identity}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"性别\">\r\n                            <span className=\"ant-form-text\">{this.state.data.gender===0 ? '女' : '男'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"年龄\">\r\n                            <span className=\"ant-form-text\">{this.state.data.age}岁</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"民族\">\r\n                            <span className=\"ant-form-text\">{this.state.data.nation}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"出生日期\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.birthday)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"籍贯\">\r\n                            <span className=\"ant-form-text\">{this.state.data.origin}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"婚姻状况\">\r\n                            <span className=\"ant-form-text\">{this.state.data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"学历\">\r\n                            <span className=\"ant-form-text\">{this.state.data.degree}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业院校\">\r\n                            <span className=\"ant-form-text\">{this.state.data.institution}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业时间\">\r\n                            <span className=\"ant-form-text\">{this.getMonthTime(this.state.data.graduatetime)}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                ),\r\n                tab2: (\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"工号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.workid}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"入职时间\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.entrytime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"部门\">\r\n                            <span className=\"ant-form-text\">{this.state.data.department}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"职责\">\r\n                            <span className=\"ant-form-text\">{this.state.data.duty}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.level===0 ? \"初级\" : this.state.data.level===1 ?  \"中级\" : \"高级\"}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"住址\">\r\n                            <span className=\"ant-form-text\">{this.state.data.address}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"月薪\">\r\n                            <span className=\"ant-form-text\">{this.state.data.salary} 元</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{ this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    !this.state.data.profile ? <span>无</span> :\r\n                                        <img src={'/upload/'+this.state.data.profile}\r\n                                             alt=\"员工照片\"\r\n                                             style={{\r\n                                                 width: \"100px\",\r\n                                                 height: \"100px\",\r\n                                                 padding: \"7px\",\r\n                                                 marginRight: \"10px\",\r\n                                                 borderRadius: \"5px\",\r\n                                                 border: \"1px solid lightgray\"}}\r\n                                        />\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n            };\r\n            const steps = [\r\n                {\r\n                    title: \"填写基本信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                            <Form.Item label=\"姓名\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.name\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"身份证号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('identity', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.identity\r\n                                    })(<Input placeholder=\"请输入身份证号码\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"性别\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('gender', {\r\n                                        initialValue: data.gender,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={1} style={{margin: \"0 20px\"}}>男</Radio>\r\n                                            <Radio value={0}>女</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"年龄\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('age', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.age\r\n                                    })(<InputNumber style={{width: \"150px\"}} />)\r\n                                }\r\n                                <span className=\"ant-form-text\">岁</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"民族\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('nation', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.nation\r\n                                    })(<Input placeholder=\"请输入民族\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"出生日期\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('birthday', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.birthday), \"YYYYMMDD\")\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"籍贯\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('origin', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.origin\r\n                                    })(<Input placeholder=\"请输入籍贯\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            \r\n                            \r\n                            <Form.Item label=\"婚姻状况\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('marriage', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.marriage\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={0} style={{margin: \"0 20px\"}}>未婚</Radio>\r\n                                            <Radio value={1}>已婚</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"学历\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('degree', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.degree\r\n                                    })(\r\n                                        <Select placeholder=\"请选择学历\" style={{width: \"187px\"}}>\r\n                                            <Select.Option value='博士'>博士</Select.Option>\r\n                                            <Select.Option value='硕士'>硕士</Select.Option>\r\n                                            <Select.Option value='本科'>本科</Select.Option>\r\n                                            <Select.Option value='高中'>高中</Select.Option>\r\n                                            <Select.Option value='初中'>初中</Select.Option>\r\n                                            <Select.Option value='小学'>小学</Select.Option>\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业院校\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('institution', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.institution\r\n                                    })(<Input placeholder=\"请输入毕业院校\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('graduatetime', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.graduatetime), \"YYYYMMDD\")\r\n                                    })(<DatePicker.MonthPicker format='YYYY/MM' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\"\r\n                                        style={{margin: \"50px 0 0 450px\"}}\r\n                                        onClick={()=>this.handleNext(0)}>下一步</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"填写工作信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"工号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('workid', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.workid\r\n                                    })(<Input placeholder=\"请输入工号\" disabled/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"入职时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('entrytime', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.entrytime), \"YYYY/MM/DD\")\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"部门\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('department', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.department\r\n                                    })(<Input  placeholder=\"请输入工作部门\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"职责\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('duty', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.duty\r\n                                    })(<Input placeholder=\"请输入工作职责\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('level', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.level\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={0}>初 级</Radio.Button>\r\n                                            <Radio.Button value={1}>中 级</Radio.Button>\r\n                                            <Radio.Button value={2}>高 级</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.tel\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"住址\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('address', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.address\r\n                                    })(<Input placeholder=\"请输入住址\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"月薪\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('salary', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.salary\r\n                                    })(<Input addonAfter=\"元\" placeholder=\"请输入月薪\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"照片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('profile', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.profile\r\n                                    })(<PicturesWall imgs={data.profile} />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: data.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input.Group style={{marginLeft: \"410px\"}}>\r\n                                    <Button type=\"primary\" style={{marginRight: \"50px\"}} onClick={()=>this.handlePrevious()}>上一步</Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">完成，确认提交</Button>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"提交成功\",\r\n                    content: (\r\n                        <Card\r\n                            style={{ width: \"80%\", margin: \"20px auto\"}}\r\n                            tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                            activeTabKey={this.state.key}\r\n                            onTabChange={key => {\r\n                                this.onTabChange(key);\r\n                            }}\r\n                        >\r\n                            {contentList[this.state.key]}\r\n                        </Card>\r\n                    )\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '员工列表', '编辑员工']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑员工信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Steps current={this.state.current} style={{margin: \"40px auto\", width: \"550px\"}}>\r\n                            {\r\n                                steps.map((item, index) =>\r\n                                    <Steps.Step key={index} title={item.title}/>)\r\n                            }\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[this.state.current].content}</div>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditEmployee;","import React from 'react';\r\nimport {Table, Divider, Button, Modal, Icon, Tag} from 'antd';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from '../../components/top-nav/index'\r\nimport {reqRoleList, reqUserList, reqRoleDelete} from '../../api/index';\r\n\r\nclass Role extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            viewVisible: false,\r\n            role: {},\r\n        }\r\n    };\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqRoleList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = async (response1) => {\r\n        const response2 = await reqUserList();\r\n        if(response1.status===0 && response2.status===0){\r\n            let data = response1.data.map((item1, index) => {\r\n                let roleUser = [];\r\n                item1.index = index;\r\n                response1.data.forEach(item3 => {\r\n                    if(item1.creater === item3.id) item1.createrRole = item3.name\r\n                });\r\n                response2.data.forEach(item2 => {\r\n                    if(item1.creater === item2.id) item1.createrName = item2.username;\r\n                    if(item1.id === item2.role) roleUser.push(item2.username)\r\n                });\r\n                item1.roleUser = roleUser;\r\n                let permission = [\r\n                    {\r\n                        title: \"订单管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"全部订单\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"前台管理\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"商品管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"商品分类\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"商品列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"添加商品\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"库存管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"库存信息\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"库存盘点\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"会员管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"会员列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"新增会员\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"人事管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"员工列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"用户列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"角色管理\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    }\r\n                ];\r\n                item1.permission.split('-').forEach(item3 => {\r\n                    switch (item3) {\r\n                        case '全部订单':\r\n                            permission[0].display = 1;\r\n                            permission[0].children[0].display = 1;\r\n                            break;\r\n                        case '前台管理':\r\n                            permission[0].display = 1;\r\n                            permission[0].children[1].display = 1;\r\n                            break;\r\n                        case '商品分类':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[0].display = 1;\r\n                            break;\r\n                        case '商品列表':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[1].display = 1;\r\n                            break;\r\n                        case '添加商品':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[2].display = 1;\r\n                            break;\r\n                        case '库存信息':\r\n                            permission[2].display = 1;\r\n                            permission[2].children[0].display = 1;\r\n                            break;\r\n                        case '库存盘点':\r\n                            permission[2].display = 1;\r\n                            permission[2].children[1].display = 1;\r\n                            break;\r\n                        case '会员列表':\r\n                            permission[3].display = 1;\r\n                            permission[3].children[0].display = 1;\r\n                            break;\r\n                        case '新增会员':\r\n                            permission[3].display = 1;\r\n                            permission[3].children[1].display = 1;\r\n                            break;\r\n                        case '员工列表':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[0].display = 1;\r\n                            break;\r\n                        case '用户列表':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[1].display = 1;\r\n                            break;\r\n                        case '角色管理':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[2].display = 1;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                });\r\n                item1.permission = permission;\r\n                return item1\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({isLoading: false, data: data})\r\n            }, 300)\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除角色\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqRoleDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleView = (record) => {\r\n        this.setState({\r\n            viewVisible: true,\r\n            role: record\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/employee/role/add')\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/employee/role/edit', state: {data: record}})\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                key: 'son',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => b.createtime - a.createtime\r\n            },\r\n            {\r\n                title: '创建人',\r\n                dataIndex: 'createrName',\r\n                key: 'createrName',\r\n                render: (text, record) => <span>{text} <Tag color=\"green\">{record.createrRole}</Tag></span>\r\n            },\r\n            {\r\n                title: '角色用户',\r\n                dataIndex: 'roleUser',\r\n                key: 'roleUser',\r\n                render: (text) => (\r\n                    <span>\r\n                        {\r\n                            text.length !== 0 ? text.map((item, index) => {\r\n                                return <div  key={index}><span>{item}</span></div>\r\n                            }) : '/'\r\n                        }\r\n                    </span>\r\n                )\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'note',\r\n                key: 'note',\r\n                render: (text) => <span>{text ? text : '/'}</span>\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['人事管理','角色管理']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\"/>新增角色</Button>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n                {/*查看角色详情*/}\r\n                <Modal\r\n                    title={<span>角色权限-{this.state.role.name}</span>}\r\n                    visible={this.state.viewVisible}\r\n                    onCancel={()=>{this.setState({viewVisible: false})}}\r\n                    footer={\r\n                        [<Button type=\"primary\" key=\"view-ok\" onClick={()=>this.setState({viewVisible: false})}>确认</Button>]\r\n                    }\r\n                >\r\n                    <div style={{marginLeft: \"100px\"}}>\r\n                        {\r\n                            this.state.role.permission ? this.state.role.permission.map((item1, index) => {\r\n                                return (\r\n                                    <div key={index}>\r\n                                        <div><Icon type=\"caret-down\" style={{color: \"#1DA57A\"}}/>{item1.title}</div>\r\n                                        {\r\n                                            item1.children.map((item2, index) => {\r\n                                                return item2.display===1 ? (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"check\" style={{color: \"#1DA57A\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                ) :  (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"close\" style={{color: \"#fa7f3e\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Role;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, Checkbox, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\nimport { reqRoleAdd } from '../../api/index';\r\n\r\nconst AddRole = Form.create({ name: 'role-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: [\r\n                    {\r\n                        title: \"全部订单\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"前台管理\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"商品分类\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"商品列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"添加商品\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"库存信息\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"库存盘点\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"会员列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"新增会员\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"员工列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"用户列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"角色管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入角色名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let arr = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.display===1 ? arr.push(item.title) : arr.push();\r\n                    });\r\n                    let data=values;\r\n                    data.createtime = new Date(data.createtime).getTime();\r\n                    data.creater = memoryUtils.user.id;\r\n                    data.permission = arr.join('-');\r\n                    data.deleted = 0;\r\n                    const response = await reqRoleAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增角色成功, 即将返回角色管理列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/role')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        handleChange = (e, temp) => {\r\n            let data = this.state.data;\r\n            if(typeof(temp)===\"object\"){\r\n                if(e.target.checked){\r\n                    temp.forEach(item => {\r\n                        data[item].display = 1\r\n                    })\r\n                }else{\r\n                    temp.forEach(item => {\r\n                        data[item].display = 0\r\n                    })\r\n                }\r\n            }else{\r\n                data[temp].display = 1 - data[temp].display\r\n            }\r\n            this.setState({data: data})\r\n        };\r\n        getTimeForm = () => {\r\n            let time = new Date();\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '角色管理', '新增角色']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增角色信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee/role')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"创建时间：\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTimeForm()\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建人：\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: memoryUtils.user.username\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色名：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"权限：\">\r\n                                {form.getFieldDecorator('permission', {\r\n                                    initialValue: \"perimission\",\r\n                                    rules: [{required: true}]\r\n                                })(<Input style={{display: \"none\"}} />)}\r\n                            </Form.Item>\r\n                            <div style={{margin: \"-53px 0 40px 340px\"}}>\r\n                                {/*订单管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [0, 1])}>订单管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 0)}\r\n                                        checked={this.state.data[0].display===1}\r\n                                    >全部订单</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 1)}\r\n                                        checked={this.state.data[1].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >前台订单</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [2, 3, 4])}>商品管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 2)}\r\n                                        checked={this.state.data[2].display===1}\r\n                                    >商品分类</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 3)}\r\n                                        checked={this.state.data[3].display===1}\r\n                                    >商品列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 4)}\r\n                                        checked={this.state.data[4].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >添加商品</Checkbox><br/>\r\n                                </div>\r\n                                {/*库存管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [5, 6])}>库存管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 5)}\r\n                                        checked={this.state.data[5].display===1}\r\n                                    >库存信息</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 6)}\r\n                                        checked={this.state.data[6].display===1}\r\n                                    >库存盘点</Checkbox><br/>\r\n                                </div>\r\n                                {/*会员管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [7, 8])}>会员管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 7)}\r\n                                        checked={this.state.data[7].display===1}\r\n                                    >会员列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 8)}\r\n                                        checked={this.state.data[8].display===1}\r\n                                    >新增会员</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [9, 10, 11])}>人事管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 9)}\r\n                                        checked={this.state.data[9].display===1}\r\n                                    >员工列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 10)}\r\n                                        checked={this.state.data[10].display===1}\r\n                                    >用户列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 11)}\r\n                                        checked={this.state.data[11].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >角色管理</Checkbox><br/>\r\n                                </div>\r\n                            </div>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddRole;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, Checkbox, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { reqRoleUpdate } from '../../api/index';\r\n\r\nconst EditRole = Form.create({ name: 'role-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = () => {\r\n            let data = this.props.location.state.data;\r\n            let permission = [];\r\n            data.permission.forEach(item => {\r\n                permission = permission.concat(item.children)\r\n            });\r\n            data.permission = permission;\r\n            this.setState({data: data.permission});\r\n        };\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let arr = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.display===1 ? arr.push(item.title) : arr.push();\r\n                    });\r\n                    let data=values;\r\n                    data.permission = arr.join('-');\r\n                    data.creater = this.props.location.state.data.creater;\r\n                    data.createtime = new Date(data.createtime).getTime();\r\n                    const response = await reqRoleUpdate(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"编辑角色成功, 即将返回角色管理页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/role')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        handleChange = (e, temp) => {\r\n            let data = this.state.data;\r\n            if(typeof(temp)===\"object\"){\r\n                if(e.target.checked){\r\n                    temp.forEach(item => {\r\n                        data[item].display = 1\r\n                    })\r\n                }else{\r\n                    temp.forEach(item => {\r\n                        data[item].display = 0\r\n                    })\r\n                }\r\n            }else{\r\n                data[temp].display = 1 - data[temp].display\r\n            }\r\n            this.setState({data: data})\r\n        };\r\n        getTimeForm = (time) => {\r\n            time = new Date(time);\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        getFatherChecked = (arr) => {\r\n            let checked = true;\r\n            arr.forEach(item => {\r\n                if(this.state.data[item].display === 0) checked = false\r\n            });\r\n            return checked\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            let data = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '角色管理', '编辑角色']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑角色信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee/role')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\r\n                                {form.getFieldDecorator('id', {\r\n                                    initialValue: data.id\r\n                                })(<Input/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建时间：\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTimeForm(data.createtime)\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建人：\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: data.createrName\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色名：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                    initialValue: data.name\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"权限：\">\r\n                                {form.getFieldDecorator('permission', {\r\n                                    initialValue: \"perimission\",\r\n                                    rules: [{required: true}]\r\n                                })(<Input style={{display: \"none\"}} />)}\r\n                            </Form.Item>\r\n                            <div style={{margin: \"-53px 0 40px 340px\"}}>\r\n                                {/*订单管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [0, 1])}\r\n                                    defaultChecked={this.getFatherChecked([0, 1])}\r\n                                >订单管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 0)}\r\n                                        checked={this.state.data[0].display===1}\r\n                                    >全部订单</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 1)}\r\n                                        checked={this.state.data[1].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >前台订单</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [2, 3, 4])}\r\n                                    defaultChecked={this.getFatherChecked([2, 3, 4])}\r\n                                >商品管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 2)}\r\n                                        checked={this.state.data[2].display===1}\r\n                                    >商品分类</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 3)}\r\n                                        checked={this.state.data[3].display===1}\r\n                                    >商品列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 4)}\r\n                                        checked={this.state.data[4].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >添加商品</Checkbox><br/>\r\n                                </div>\r\n                                {/*库存管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [5, 6])}\r\n                                    defaultChecked={this.getFatherChecked([5, 6])}\r\n                                >库存管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 5)}\r\n                                        checked={this.state.data[5].display===1}\r\n                                    >库存信息</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 6)}\r\n                                        checked={this.state.data[6].display===1}\r\n                                    >库存盘点</Checkbox><br/>\r\n                                </div>\r\n                                {/*会员管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [7, 8])}\r\n                                    defaultChecked={this.getFatherChecked([7, 8])}\r\n                                >会员管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 7)}\r\n                                        checked={this.state.data[7].display===1}\r\n                                    >会员列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 8)}\r\n                                        checked={this.state.data[8].display===1}\r\n                                    >新增会员</Checkbox><br/>\r\n                                </div>\r\n                                {/*人事管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [9, 10, 11])}\r\n                                    defaultChecked={this.getFatherChecked([9, 10, 11])}\r\n                                >人事管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 9)}\r\n                                        checked={this.state.data[9].display===1}\r\n                                    >员工列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 10)}\r\n                                        checked={this.state.data[10].display===1}\r\n                                    >用户列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 11)}\r\n                                        checked={this.state.data[11].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >角色管理</Checkbox><br/>\r\n                                </div>\r\n                            </div>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditRole;","import React from 'react';\r\nimport {Table, Divider, Button, Modal, Icon} from 'antd';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from '../../components/top-nav/index'\r\nimport {reqUserList, reqUserDelete, reqRoleList} from '../../api/index';\r\n\r\nclass User extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            visible: false,\r\n            role: {}\r\n        }\r\n    };\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqUserList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = async (response1) => {\r\n        const response2 = await reqRoleList();\r\n        if(response1.status===0 && response2.status===0){\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                let data = response1.data.map((item1, index) => {\r\n                    item1.index = index;\r\n                    response2.data.forEach(item2 => {\r\n                        if(item1.role === item2.id){\r\n                            item1.role = item2;\r\n                            let permission = [\r\n                                {\r\n                                    title: \"订单管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"全部订单\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"前台管理\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"商品管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"商品分类\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"商品列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"添加商品\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"库存管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"库存信息\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"库存盘点\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"会员管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"会员列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"新增会员\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"人事管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"员工列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"用户列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"角色管理\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ];\r\n                            item1.role.permission.split('-').forEach(item3 => {\r\n                                switch (item3) {\r\n                                    case '全部订单':\r\n                                        permission[0].display = 1;\r\n                                        permission[0].children[0].display = 1;\r\n                                        break;\r\n                                    case '前台管理':\r\n                                        permission[0].display = 1;\r\n                                        permission[0].children[1].display = 1;\r\n                                        break;\r\n                                    case '商品分类':\r\n                                        permission[1].display = 1;\r\n                                        permission[1].children[0].display = 1;\r\n                                        break;\r\n                                    case '商品列表':\r\n                                        permission[1].display = 1;\r\n                                        permission[1].children[1].display = 1;\r\n                                        break;\r\n                                    case '添加商品':\r\n                                        permission[1].display = 1;\r\n                                        permission[1].children[2].display = 1;\r\n                                        break;\r\n                                    case '库存信息':\r\n                                        permission[2].display = 1;\r\n                                        permission[2].children[0].display = 1;\r\n                                        break;\r\n                                    case '库存盘点':\r\n                                        permission[2].display = 1;\r\n                                        permission[2].children[1].display = 1;\r\n                                        break;\r\n                                    case '会员列表':\r\n                                        permission[3].display = 1;\r\n                                        permission[3].children[0].display = 1;\r\n                                        break;\r\n                                    case '新增会员':\r\n                                        permission[3].display = 1;\r\n                                        permission[3].children[1].display = 1;\r\n                                        break;\r\n                                    case '员工列表':\r\n                                        permission[4].display = 1;\r\n                                        permission[4].children[0].display = 1;\r\n                                        break;\r\n                                    case '用户列表':\r\n                                        permission[4].display = 1;\r\n                                        permission[4].children[1].display = 1;\r\n                                        break;\r\n                                    case '角色管理':\r\n                                        permission[4].display = 1;\r\n                                        permission[4].children[2].display = 1;\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            });\r\n                            item1.role.permission = permission\r\n                        }\r\n                    });\r\n                    return item1\r\n                });\r\n                this.setState({isLoading: false, data: data})\r\n            }, 300)\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除用户\\\"\"+record.username+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqUserDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleAdd = () => {this.props.history.push('/employee/user/add')};\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/employee/user/edit', state: {data: record}})\r\n    };\r\n    handleRoleView = (role) => {\r\n        console.log(role);\r\n        this.setState({\r\n            visible: true,\r\n            role: role\r\n        });\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '用户名称',\r\n                dataIndex: 'username',\r\n                key: 'username',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                key: 'son',\r\n                render: (text) => <span><Icon type=\"clock-circle\" /> {this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => b.createtime - a.createtime\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role',\r\n                key: 'role',\r\n                render: (text) => <Button type=\"link\" onClick={()=>this.handleRoleView(text)}>{text.name}</Button>\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'tel',\r\n                key: 'tel',\r\n                render: (text) => <span><Icon type=\"phone\" />+86 {text}</span>\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n                key: 'email'\r\n            },\r\n            {\r\n                title: '密码',\r\n                dataIndex: 'password',\r\n                key: 'password'\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'note',\r\n                key: 'note',\r\n                render: (text) => text ? text : '/'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>设置</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['人事管理','用户列表']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\"/>创建用户</Button>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n                <Modal\r\n                    title={<span>角色权限-{this.state.role.name}</span>}\r\n                    visible={this.state.visible}\r\n                    onCancel={()=>{this.setState({visible: false})}}\r\n                    footer={\r\n                        [<Button type=\"primary\" key=\"view-ok\" onClick={()=>this.setState({visible: false})}>确认</Button>]\r\n                    }\r\n                >\r\n                    <div style={{marginLeft: \"100px\"}}>\r\n                        {\r\n                            this.state.role.permission ? this.state.role.permission.map((item1, index) => {\r\n                                return (\r\n                                    <div key={index}>\r\n                                        <div><Icon type=\"caret-down\" style={{color: \"#1DA57A\"}}/>{item1.title}</div>\r\n                                        {\r\n                                            item1.children.map((item2, index) => {\r\n                                                return item2.display===1 ? (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"check\" style={{color: \"#1DA57A\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                ) :  (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"close\" style={{color: \"#fa7f3e\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqRoleList, reqUserAdd} from \"../../api\";\r\n\r\nconst AddUser = Form.create({ name: 'user-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                options: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqRoleList();\r\n            if(response.status === 0){\r\n                let options = [];\r\n                response.data.forEach(item => {\r\n                    options.push({key: item.id, value: item.name})\r\n                });\r\n                this.setState({options: options});\r\n            }\r\n        };\r\n        \r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.createtime = new Date().getTime();\r\n                    data.deleted = 0;\r\n                    console.log(values);\r\n                    const response = await reqUserAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增用户成功,即将返回用户列表页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/user')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理','用户列表','创建用户']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增用户信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee/user')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"用户名：\">\r\n                                {form.getFieldDecorator('username', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户名\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码：\">\r\n                                {form.getFieldDecorator('password', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户密码\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色：\">\r\n                                {form.getFieldDecorator('role', {\r\n                                    rules: [{required: true}]\r\n                                })(\r\n                                    <Select placeholder=\"请选择角色\">\r\n                                        {\r\n                                            this.state.options.map((item) => {\r\n                                                return <Select.Option key={item.key}>{item.value}</Select.Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel：\">\r\n                                {form.getFieldDecorator('tel', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入电话号码\" addonBefore=\"+86\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"邮箱：\">\r\n                                {form.getFieldDecorator('email', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户邮箱\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqRoleList, reqUserUpdate} from \"../../api\";\r\n\r\nconst EditUser = Form.create({ name: 'user-edit' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: {},\r\n                options: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqRoleList();\r\n            if(response.status === 0){\r\n                let options = [];\r\n                let data = this.props.location.state.data;\r\n                response.data.forEach(item => {\r\n                    options.push({key: item.id, value: item.name});\r\n                    if(data.role === item.id){\r\n                        data.rolename = item.name\r\n                    }\r\n                });\r\n                this.setState({\r\n                    options: options,\r\n                    data: data\r\n                });\r\n            }\r\n        };\r\n        componentWillUnmount = () => {\r\n            clearTimeout(this.timerID)\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.createtime = new Date().getTime();\r\n                    this.state.options.forEach(item => {\r\n                        if(item.value === data.role) data.role = item.key;\r\n                    });\r\n                    const response = await reqUserUpdate(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"更新成功,即将返回用户列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/user')\r\n                        }, 1500);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理','用户列表','编辑用户']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑用户信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/user')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\r\n                                {form.getFieldDecorator('id', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.id\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"用户名：\">\r\n                                {form.getFieldDecorator('username', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.username\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码：\">\r\n                                {form.getFieldDecorator('password', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.password\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色：\">\r\n                                {form.getFieldDecorator('role', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.rolename,\r\n                                })(\r\n                                    <Select>\r\n                                        {\r\n                                            this.state.options.map((item) => {\r\n                                                return <Select.Option key={item.key}>{item.value}</Select.Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel：\">\r\n                                {form.getFieldDecorator('tel', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.tel\r\n                                })(<Input addonBefore=\"+86\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"邮箱：\">\r\n                                {form.getFieldDecorator('email', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.email\r\n                                })(<Input placeholder=\"请输入用户邮箱\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: this.state.data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './stock.less';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport Loading from '../../components/loading/index';\r\nimport {Button, Table, Divider, Tag, Modal, Input, Icon} from 'antd';\r\nimport {\r\n    reqStockList,\r\n    reqStockCategory,\r\n    reqStockDelete,\r\n    reqStockSearch,\r\n    reqStocklogList,\r\n    addStocklogList\r\n} from '../../api/index';\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nclass Stock extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            isLoading: true,\r\n            data: [],\r\n            category: [],\r\n            options: []\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqStockList();\r\n        this.refreshTable(response, 0);\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = async (response1, type) => {\r\n        const response2 = await reqStocklogList();\r\n        const response3 = await reqStockCategory();\r\n        if(response1.status === 0 && response2.status === 0 && response3.status === 0){\r\n            let data = response1.data.map(item1 => {\r\n                item1.state = item1.amount>item1.excess ? 2 : item1.amount<item1.warning ? 0 : 1;\r\n                item1.log = [];\r\n                response2.data.forEach(item2 => {\r\n                    if(item2.stockid === item1.id){\r\n                        item1.log.push(item2)\r\n                    }\r\n                });\r\n                item1.manager = item1.log[item1.log.length-1].manager;\r\n                let time = item1.log[item1.log.length-1].time;\r\n                item1.latestTime = new Date(time);\r\n                item1.pictures = item1.pictures.split(',');\r\n                return item1\r\n            });\r\n            let category = [];\r\n            let options = [];\r\n            response3.data.forEach(item => {\r\n                category.push({text: item.category, value: item.category});\r\n                options.push({label: item.category, value: item.category})\r\n            });\r\n            if(type === 0){\r\n                this.setState({\r\n                    category: category,\r\n                    options: options,\r\n                    isLoading: true\r\n                });\r\n                this.timerID = setTimeout(() => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        data: data\r\n                    })}, 300)\r\n            }else{\r\n                this.setState({\r\n                    category: category,\r\n                    options: options,\r\n                    data: data\r\n                })\r\n            }\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除库存记录\\\"\"+record.name+\"\\\"吗\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqStockDelete(record.id);\r\n                if(response.status === 0){\r\n                    let log = {...record};\r\n                    log.stockid = log.id;\r\n                    log.stockname =log.name;\r\n                    log.manager = memoryUtils.user.username;\r\n                    log.time = new Date().getTime();\r\n                    log.operation = \"删除\";\r\n                    log.pictures = log.pictures.join(',');\r\n                    delete log.state;\r\n                    delete log.log;\r\n                    delete log.name;\r\n                    delete log.id;\r\n                    delete log.latestTime;\r\n                    let response2 = await addStocklogList(log);\r\n                    if(response2.status === 0){\r\n                        const response3 = await reqStockList();\r\n                        this.refreshTable(response3, 1)\r\n                    }\r\n                }\r\n            },\r\n            cancelText: \"取消\",\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/stock/edit', state: {data: record}} )\r\n    };\r\n    handleSearch = async (name) => {\r\n        const response = name===\"\" ? await reqStockList() : await reqStockSearch(name);\r\n        this.refreshTable(response, 0);\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/stock/view', state: {data: record}});\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const state = [{text: \"正常\", value: 0},{text: \"告罄\", value: 1},{text: \"过剩\", value: 2}];\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record, index) => <span>{index+1}</span>\r\n            },\r\n            {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button type=\"link\" onClick={()=>this.handleView(record)}>\r\n                            {text}\r\n                            {record.amount<record.warning ? <Tag size=\"small\" color=\"red\">告罄</Tag> : null}\r\n                            {record.amount>record.excess ? <Tag size=\"small\" color=\"green\">过剩</Tag> : null}\r\n                        </Button>\r\n                    </span>\r\n                )\r\n            },\r\n            {\r\n                title: '类型',\r\n                dataIndex: 'category',\r\n                key: 'category',\r\n                filters: this.state.category,\r\n                onFilter: (value, record) => value===record.category\r\n            },\r\n            {\r\n                title: '单价',\r\n                dataIndex: 'price',\r\n                key: 'price',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.price-b.price\r\n            },\r\n            {\r\n                title: '库存量',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                sorter: (a, b) => a.amount - b.amount,\r\n                filters: state,\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '单位',\r\n                dataIndex: 'unit',\r\n                key: 'unit',\r\n            },\r\n            {\r\n                title: '最近更新',\r\n                dataIndex: 'latestTime',\r\n                key: 'latestTime',\r\n                render: (text) => <span><Icon type=\"clock-circle\" /> {this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => a.latestTime - b.latestTime\r\n            },\r\n            {\r\n                title: '操作人',\r\n                dataIndex: 'manager',\r\n                key: 'manager'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>{this.handleEdit(record)}}>编辑</Button>\r\n                        <Divider type=\"vertical\" />\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>{this.handleDelete(record)}}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"stock-container\">\r\n                <TopNav nav={['库存管理', '库存信息']}/>\r\n                <div className=\"stock-header\">\r\n                    <Button type=\"primary\"\r\n                            style={{marginRight: \"40px\"}}\r\n                            onClick={()=>{this.props.history.push('/stock/add')}}><Icon type=\"plus\"/>新增库存</Button>\r\n                    <Button type=\"primary\" onClick={()=>this.props.history.push('/stock/log')}>仓库日志</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询库存名称\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey = {record => record.id}\r\n                               bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stock\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Card, Input, Button, Select, InputNumber, Modal, message} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport PictureWall from \"../../components/picture-wall/picture-wall\";\r\nimport {reqStockCategory, addStocklogList, addStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst AddStock = Form.create({name: 'add-stock-form'})(\r\n    class extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                category: [],\r\n                categoryAdd: \"\",\r\n                visible: false\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockCategory();\r\n            if(response.status === 0){\r\n                let category = [];\r\n                response.data.forEach(item => {\r\n                    category.push(item.category)\r\n                });\r\n                this.setState({category: category})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data = values;\r\n                    let response1 = await addStockList(data);\r\n                    if(response1.status===0){\r\n                        let log = {...data};\r\n                        log.stockname = log.name;\r\n                        log.manager = memoryUtils.user.username;\r\n                        log.operation = \"新增\";\r\n                        log.time = new Date().getTime();\r\n                        log.stockid = response1.data.insertId;\r\n                        delete log.name;\r\n                        let response2 = await addStocklogList(log);\r\n                        if(response2.status === 0){\r\n                            message.success(\"新增库存信息成功，即将返回库存列表页面\", 2);\r\n                            this.timerID = setTimeout(()=>{\r\n                                this.props.history.push('/stock')\r\n                            }, 2000);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        handleAddClick = () => {\r\n            this.setState({visible: true})\r\n        };\r\n        handleNameChange = (e) => {\r\n            this.setState({categoryAdd: e.target.value})\r\n        };\r\n        onOk = () => {\r\n            let category = this.state.category;\r\n            category.push(this.state.categoryAdd);\r\n            this.setState({\r\n                category: category,\r\n                visible: false\r\n            })\r\n        };\r\n        onCancel = () => {\r\n            this.setState({visible: false})\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存信息', '新增库存']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增库存记录</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"货物名称\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物名称\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"货物种类\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('category', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select style={{width: \"75%\"}} placeholder=\"请选择货物品类\">\r\n                                            {this.state.category.map(item => (\r\n                                                <Select.Option key={item}>{item}</Select.Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    <div style={{display: \"inline-block\", float: \"right\"}}>\r\n                                        <Button type=\"primary\"\r\n                                                onClick={this.handleAddClick}>新增品类</Button>\r\n                                        <Modal\r\n                                            title=\"新增品类\"\r\n                                            visible={this.state.visible}\r\n                                            okText=\"确认\"\r\n                                            onOk={this.onOk}\r\n                                            cancelText=\"取消\"\r\n                                            onCancel={this.onCancel}\r\n                                        >\r\n                                            <Input placeholder=\"请输入品类名称\" onChange={this.handleNameChange}/>\r\n                                        </Modal>\r\n                                    </div>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单价\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('price', {\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber />)\r\n                                }\r\n                                <span style={{marginLeft: \"10px\"}}>元</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存数量\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('amount', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入库存数量\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单位\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('unit', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物单位\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存监控\">\r\n                                <Input.Group compact>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('warning', {\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"下限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                    <span style={{margin: \"8px 20px 0 20px\"}}>~</span>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('excess', {\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"上限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"图片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('pictures', {\r\n                                        rules: [{required: true, message: \"请上传商品图片\"}]\r\n                                    })(<PictureWall />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入库存备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddStock;","import React from 'react';\r\nimport {Form, Tag, Modal, Row, Col, Card} from 'antd';\r\n\r\nclass StocklogView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'tab1'\r\n        }\r\n    }\r\n    onTabChange = (key) => {\r\n        this.setState({key: key})\r\n    };\r\n    content = (header) => header ? (\r\n        <div>\r\n            <Row>\r\n                <Col span={7} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>名称：</Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item>{header.stockname}</Form.Item>\r\n                </Col>\r\n                <Col span={4} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>种类：</Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item>{header.category}</Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={7} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>数量：</Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item>{header.amount}</Form.Item>\r\n                </Col>\r\n                <Col span={4} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>单位：</Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item>{header.unit}</Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={7} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>状态：</Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item>\r\n                        {header.amout > header.excess ? <Tag size=\"small\" color=\"blue\">过剩</Tag> :\r\n                            header.state < header.warning ? <Tag size=\"small\" color=\"red\">告罄</Tag> :\r\n                                <Tag size=\"small\" color=\"green\">正常</Tag>}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>监控：</Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item>\r\n                        下限:{header.warning}&nbsp;&nbsp;\r\n                        上限:{header.excess}\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={7}>\r\n                    <Form.Item style={{textAlign: \"right\"}}>图片：</Form.Item>\r\n                </Col>\r\n                <Col span={17}>\r\n                    {\r\n                        String(header.pictures).split(',').map((item, index) => {\r\n                            return item===\"\" ? null : <img\r\n                                key={index} src={'http://localhost:3001/upload/'+item} alt=\"货物图片\"\r\n                                style={{\r\n                                    width: \"80px\",\r\n                                    height: \"80px\",\r\n                                    padding: \"5px\",\r\n                                    marginRight: \"10px\",\r\n                                    borderRadius: \"5px\",\r\n                                    border: \"1px solid lightgray\"\r\n                                }}\r\n                            />\r\n                        })\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: '10px'}}>\r\n                <Col span={7}>\r\n                    <Form.Item style={{textAlign: \"right\"}}>备注：</Form.Item>\r\n                </Col>\r\n                <Col span={17}>\r\n                    <Form.Item>{header.note ? header.note : '无'}</Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    ) : null;\r\n    render() {\r\n        const contentList = {\r\n            tab1: this.content(this.props.info.before),\r\n            tab2: this.content(this.props.info),\r\n        };\r\n        return (\r\n            <Modal\r\n                visible={this.props.visible}\r\n                // title={<span style={{color: \"#1DA57A\"}}>日志详情-{this.props.info.operation || \"修改\"}</span>}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onOk={this.props.onOk}\r\n                onCancel={this.props.onCancel}\r\n                footer={null}\r\n            >\r\n                {\r\n                    Object.getOwnPropertyNames(this.props.info).length === 0 ? null :\r\n                        this.props.info.hasOwnProperty('before') ? (\r\n                            <Card\r\n                                style={{width: \"100%\", border: \"none\"}}\r\n                                tabList={[{key: 'tab1', tab: '修改前'}, {key: 'tab2', tab: '修改后'}]}\r\n                                activeTabKey={this.state.key}\r\n                                onTabChange={key=>this.onTabChange(key)}\r\n                            >\r\n                                {contentList[this.state.key]}\r\n                            </Card>\r\n                        ) : (\r\n                            <Card\r\n                                style={{width: \"100%\", border: \"none\"}}\r\n                                title={<span style={{ color: \"#1DA57A\", marginLeft: \"10px\"}}>{this.props.info.operation}记录</span>}\r\n                            >\r\n                                {this.content(this.props.info)}\r\n                            </Card>\r\n                        )\r\n                }\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StocklogView;\r\n\r\n","import React from 'react';\r\nimport {Button, Card, DatePicker, List,  Select} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport StocklogView from './stock-log-view';\r\nimport moment from \"moment\";\r\nimport { reqStocklogList } from \"../../api\";\r\n\r\nclass StockLog extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            data: [],\r\n            log: [],\r\n            option: 0,\r\n            visible: false,\r\n            logInfo: {},\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let response = await reqStocklogList();\r\n        if(response.status === 0){\r\n            let data1 = response.data.reverse();\r\n            data1 = data1.map(item1 => {\r\n                if(item1.operation === \"修改\"){\r\n                    let data2 = data1.filter(item2 => {\r\n                        return item1.time > item2.time && item1.stockid === item2.stockid && item1.operation === \"修改\"\r\n                    });\r\n                    if(data2.length === 0){\r\n                        item1.before = data1.find(item3 => {\r\n                            return item3.stockid === item1.stockid && item3.operation === \"新增\"\r\n                        });\r\n                    }else{\r\n                        data2 = data2.sort((a, b) => a.time - b.time);\r\n                        item1.before = data2.pop();\r\n                    }\r\n                }\r\n                return item1\r\n            });\r\n            this.setState({\r\n                data: data1,\r\n                log: data1\r\n            })\r\n        }\r\n    };\r\n    handleSelectChange = (value) => {\r\n        if(value === 0){\r\n            this.setState({log: this.state.data})\r\n        }\r\n        this.setState({option: value})\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleDatePickerChange = (date, dateString) => {\r\n        let start = new Date(dateString+\" 00:00:00\").getTime();\r\n        let end = new Date(dateString+\" 23:59:59\").getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleWeekPickerChange = (week) => {\r\n        let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n        let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleMonthPickerChange = (month) => {\r\n        let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleRangePickerChange = (dates, dateStrings) => {\r\n        let start = new Date(dateStrings[0]).getTime();\r\n        let end = new Date(dateStrings[1]).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    handleDetail = async (data) => {\r\n        console.log(data);\r\n        this.setState({\r\n            visible: true,\r\n            logInfo: data\r\n        });\r\n    };\r\n    onOk = () =>{\r\n        this.setState({\r\n            visible: false,\r\n            logInfo: {}\r\n        })\r\n    };\r\n    render(){\r\n        let header = (\r\n            <div style={{textAlign: \"right\"}}>\r\n                { this.state.option===0 ? null : this.getTimePicker()}\r\n                <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                        style={{width: \"115px\", margin: \"0 20px 0 10px\"}}>\r\n                    <Select.Option value={0}>按顺序查看</Select.Option>\r\n                    <Select.Option value={1}>按日期查看</Select.Option>\r\n                    <Select.Option value={2}>按周次查看</Select.Option>\r\n                    <Select.Option value={3}>按月份查看</Select.Option>\r\n                    <Select.Option value={4}>自定义区间</Select.Option>\r\n                </Select>\r\n            </div>\r\n        );\r\n        return (\r\n            <div>\r\n                <TopNav nav={['库存管理','库存信息','库存日志']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看库存日志</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/stock')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <List style={{margin: \"20px 170px\"}}\r\n                          size=\"small\"\r\n                          header={header}\r\n                          dataSource={this.state.log}\r\n                          pagination={{pageSize: 10}}\r\n                          renderItem={item =>\r\n                              <List.Item>\r\n                                  <span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>{this.getTimeForm(item.time)}</span>\r\n                                  <span style={{color: \"#1DA57A\", marginLeft: \"20px\", width: \"60px\"}}>{item.manager}</span>\r\n                                  <span>对</span>\r\n                                  <span style={{margin: \"0 20px\", width: \"80px\"}}>\r\n                                      “<span style={{color: \"#1DA57A\"}}>{item.before ? item.before.stockname : item.stockname}</span>”\r\n                                  </span>\r\n                                  <span>的库存信息进行了</span>\r\n                                  <span style={item.operation === '删除' ? {color: 'red'} : {color: '#1DA57A'}}>{item.operation}</span>\r\n                                  <Button\r\n                                      type='primary'\r\n                                      size='small'\r\n                                      style={{marginLeft: \"30px\"}}\r\n                                      onClick={()=>this.handleDetail(item)}\r\n                                  >详情</Button>\r\n                              </List.Item>\r\n                          }\r\n                          bordered\r\n                    />\r\n                    <StocklogView\r\n                        visible={this.state.visible}\r\n                        info={this.state.logInfo}\r\n                        onCancel={this.onOk}\r\n                        onOk={this.onOk}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StockLog;","import React from 'react';\r\nimport { Form, Card, Button, Tag, List, Select, DatePicker } from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport StocklogView from './stock-log-view';\r\nimport moment from \"moment\";\r\n\r\nclass ViewStock extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            data: [],\r\n            log: [],\r\n            option: 0,\r\n            visible: false,\r\n            logInfo: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = () => {\r\n        // const data = this.props.location.state.data;\r\n        // this.setState({\r\n        //     data: data,\r\n        //     log: data.log.reverse()\r\n        // });\r\n    \r\n        const data = this.props.location.state.data;\r\n        let data1 = data.log.reverse();\r\n        data1 = data1.map(item1 => {\r\n            if(item1.operation === \"修改\"){\r\n                let data2 = data1.filter(item2 => {\r\n                    return item1.time > item2.time && item1.stockid === item2.stockid && item1.operation === \"修改\"\r\n                });\r\n                if(data2.length === 0){\r\n                    item1.before = data1.find(item3 => {\r\n                        return item3.stockid === item1.stockid && item3.operation === \"新增\"\r\n                    });\r\n                }else{\r\n                    data2 = data2.sort((a, b) => a.time - b.time);\r\n                    item1.before = data2.pop();\r\n                }\r\n            }\r\n            return item1\r\n        });\r\n        this.setState({\r\n            data: data,\r\n            log: data1\r\n        });\r\n    };\r\n    handleSelectChange = (value) => {\r\n        if(value === 0){\r\n            this.setState({log: this.state.data.log})\r\n        }\r\n        this.setState({option: value})\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleDatePickerChange = (date, dateString) => {\r\n        let start = new Date(dateString+\" 00:00:00\").getTime();\r\n        let end = new Date(dateString+\" 23:59:59\").getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleWeekPickerChange = (week) => {\r\n        let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n        let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleMonthPickerChange = (month) => {\r\n        let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleRangePickerChange = (dates, dateStrings) => {\r\n        let start = new Date(dateStrings[0]).getTime();\r\n        let end = new Date(dateStrings[1]).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    handleDetail = (data) => {\r\n        this.setState({\r\n            visible: true,\r\n            logInfo: data\r\n        })\r\n    };\r\n    onOk = () =>{\r\n        this.setState({visible: false})\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        let header = (\r\n            <div style={{textAlign: \"right\"}}>\r\n                { this.state.option===0 ? null : this.getTimePicker()}\r\n                <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                        style={{width: \"115px\", margin: \"0 20px 0 10px\"}}>\r\n                    <Select.Option value={0}>按顺序查看</Select.Option>\r\n                    <Select.Option value={1}>按日期查看</Select.Option>\r\n                    <Select.Option value={2}>按周次查看</Select.Option>\r\n                    <Select.Option value={3}>按月份查看</Select.Option>\r\n                    <Select.Option value={4}>自定义区间</Select.Option>\r\n                </Select>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"stock-view-container\">\r\n                <TopNav nav={['库存管理', '库存信息', '货物详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看货物详情</span>}\r\n                      extra={<Button type='primary' onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"货物名称\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"货物种类\">\r\n                            <span className=\"ant-form-text\">{this.state.data.category}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"单价\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.price.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存数量\">\r\n                            <span className=\"ant-form-text\">{this.state.data.amount}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存单位\">\r\n                            <span className=\"ant-form-text\">{this.state.data.unit}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存状态\">\r\n                            <span style={{marginLeft: \"20px\"}}>\r\n                                {this.state.data.state===0 ? <Tag size=\"small\" color=\"blue\">正常</Tag> :\r\n                                    this.state.data.state===1 ? <Tag size=\"small\" color=\"red\">告罄</Tag> :\r\n                                        <Tag size=\"small\" color=\"green\">过剩</Tag>}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存监控\">\r\n                            <span className=\"ant-form-text\">\r\n                                上限：{this.state.data.excess}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                下限：{this.state.data.warning}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"图片\">\r\n                                <span className=\"ant-form-pictures\">\r\n                                    {\r\n                                        this.state.data.pictures.map((item, index) => {\r\n                                            return item===\"\" ? null\r\n                                                : <img key={index} src={'/upload/'+item} alt=\"货物图片\"/>\r\n                                        })\r\n                                    }\r\n                                </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{ this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <List style={{margin: \"50px 170px\"}}\r\n                          size=\"small\"\r\n                          header={header}\r\n                          dataSource={this.state.log}\r\n                          pagination={{pageSize: 10}}\r\n                          renderItem={item =>\r\n                              <List.Item>\r\n                                  {/*<span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>{this.getTimeForm(item.time)}</span>*/}\r\n                                  {/*<span style={{color: \"#1DA57A\", marginLeft: \"20px\", width: \"50px\"}}>{item.manager}</span>*/}\r\n                                  {/*<span>对“{item.stockname}”的库存信息进行了{item.operation}</span>*/}\r\n                                  {/*<Button type=\"link\"*/}\r\n                                  {/*        style={{marginLeft: \"30px\"}}*/}\r\n                                  {/*        onClick={()=>this.handleDetail(item)}*/}\r\n                                  {/*>详情</Button>*/}\r\n                                  <span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>\r\n                                      {this.getTimeForm(item.time)}\r\n                                  </span>\r\n                                  <span style={{color: \"#1DA57A\", marginLeft: \"20px\", width: \"60px\"}}>\r\n                                      {item.manager}\r\n                                  </span>\r\n                                  <span>对</span>\r\n                                  <span style={{margin: \"0 20px\", width: \"80px\"}}>“<span style={{color: \"#1DA57A\"}}>{item.stockname}</span>”</span>\r\n                                  <span>的库存信息进行了</span>\r\n                                  <span style={{color: '#1DA57A'}}>{item.operation}</span>\r\n                                  <Button\r\n                                      type=\"primary\"\r\n                                      size=\"small\"\r\n                                      style={{marginLeft: \"30px\"}}\r\n                                      onClick={()=>this.handleDetail(item)}\r\n                                  >详情</Button>\r\n                              </List.Item>\r\n                          }\r\n                          bordered\r\n                    />\r\n                    <StocklogView\r\n                        visible={this.state.visible}\r\n                        info={this.state.logInfo}\r\n                        onCancel={this.onOk}\r\n                        onOk={this.onOk}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ViewStock;","import React from 'react';\r\nimport {Form, Card, Input, Button, Select, InputNumber, Modal, message} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport PictureWall from \"../../components/picture-wall/picture-wall\";\r\nimport {reqStockCategory, addStocklogList, updateStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst EditStock = Form.create({name: 'edit-stock-form'})(\r\n    class extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                category: [],\r\n                categoryAdd: \"\",\r\n                visible: false\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockCategory();\r\n            if(response.status === 0){\r\n                let category = [];\r\n                response.data.forEach(item => {\r\n                    category.push(item.category)\r\n                });\r\n                this.setState({category: category})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data1 = {};\r\n                    let data2 = JSON.parse(JSON.stringify(this.props.location.state.data));\r\n                    data1.id = data2.id;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data1[key] = values[key]\r\n                        }\r\n                    }\r\n                    data2.pictures = data2.pictures.join(',');\r\n                    let tag = 0;\r\n                    for(let key in data1){\r\n                        if(data1[key] !== data2[key]) tag = 1\r\n                    }\r\n                    console.log(tag);\r\n                    let response1 = await updateStockList(data1);\r\n                    //当库存信息未发生改变时，不更新日志\r\n                    if(response1.status === 0 && tag === 1){\r\n                        let log = {...data1};\r\n                        log.stockid = log.id;\r\n                        log.stockname = log.name;\r\n                        log.time = new Date().getTime();\r\n                        log.operation = \"修改\";\r\n                        log.manager = memoryUtils.user.username;\r\n                        delete log.id;\r\n                        delete log.name;\r\n                        let response2 = await addStocklogList(log);\r\n                        if(response2.status === 0){\r\n                            message.success(\"更新库存信息成功,即将返回库存列表页面\");\r\n                            this.timerID = setTimeout(()=>{\r\n                                this.props.history.push('/stock')\r\n                            }, 2000);\r\n                        }\r\n                    }else{\r\n                        message.success(\"更新库存信息成功,即将返回库存列表页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/stock')\r\n                        }, 2000);\r\n                    }\r\n                    \r\n                }\r\n            })\r\n        };\r\n        handleAddClick = () => {\r\n            this.setState({visible: true})\r\n        };\r\n        handleNameChange = (e) => {\r\n            this.setState({categoryAdd: e.target.value})\r\n        };\r\n        onOk = () => {\r\n            let category = this.state.category;\r\n            category.push(this.state.categoryAdd);\r\n            this.setState({\r\n                category: category,\r\n                visible: false\r\n            })\r\n        };\r\n        onCancel = () => {\r\n            this.setState({visible: false})\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            let initialData = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存信息', '编辑库存']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑库存记录</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"货物名称\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        initialValue: initialData.name,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物名称\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"货物种类\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('category', {\r\n                                        initialValue: initialData.category,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select style={{width: \"75%\"}} placeholder=\"请选择货物品类\">\r\n                                            {this.state.category.map(item => (\r\n                                                <Select.Option key={item}>{item}</Select.Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    <div style={{display: \"inline-block\", float: \"right\"}}>\r\n                                        <Button type=\"primary\"\r\n                                                onClick={this.handleAddClick}>新增品类</Button>\r\n                                        <Modal\r\n                                            title=\"新增品类\"\r\n                                            visible={this.state.visible}\r\n                                            okText=\"确认\"\r\n                                            onOk={this.onOk}\r\n                                            cancelText=\"取消\"\r\n                                            onCancel={this.onCancel}\r\n                                        >\r\n                                            <Input placeholder=\"请输入品类名称\" onChange={this.handleNameChange}/>\r\n                                        </Modal>\r\n                                    </div>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存单价\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('price', {\r\n                                        initialValue: initialData.price,\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber />)\r\n                                }\r\n                                <span style={{marginLeft: \"10px\"}}>元</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存数量\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('amount', {\r\n                                        initialValue: initialData.amount,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入库存数量\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单位\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('unit', {\r\n                                        initialValue: initialData.unit,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物单位\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存监控\">\r\n                                <Input.Group compact>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('warning', {\r\n                                                initialValue: initialData.warning,\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"下限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                    <span style={{margin: \"8px 20px 0 20px\"}}>~</span>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('excess', {\r\n                                                initialValue: initialData.excess,\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"上限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"图片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('pictures', {\r\n                                        initialValue: initialData.pictures.join(',')\r\n                                    })(<PictureWall imgs={initialData.pictures.join(\",\")} />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: initialData.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入库存备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditStock;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Input, Form, DatePicker, Table, Tag, Icon, Divider, Modal} from \"antd\";\r\nimport Loading from '../../components/loading';\r\nimport {reqInventoryList, reqStockList, reqUserList, reqInventoryUpdate, reqInventoryDelete} from '../../api';\r\n\r\nconst Inventory = Form.create({name: 'search-inventory-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                isLoading: true,\r\n                data: [],\r\n                tableData: [],\r\n                createrFilters: [],\r\n                dateRange: [],\r\n                searchValue : ''\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqInventoryList();\r\n            this.refreshTable(response);\r\n        };\r\n        componentWillUnmount = () => {\r\n            clearTimeout(this.timerID)\r\n        };\r\n        refreshTable = async (response1) => {\r\n            const response2 = await reqUserList();\r\n            const response3 = await reqStockList();\r\n            if(response1.status===0 && response2.status===0 && response3.status===0){\r\n                let creater = [];\r\n                let data = response1.data.map(item1 => {\r\n                    response2.data.forEach(item2 => {\r\n                        if(item1.creater === item2.id){\r\n                            item1.creater = item2.username;\r\n                            creater.push(item1.creater)\r\n                        }\r\n                    });\r\n                    return item1\r\n                });\r\n                creater = new Set(creater);\r\n                let createrFilters = [];\r\n                creater.forEach(item => {\r\n                    createrFilters.push({text: item, value: item})\r\n                });\r\n                this.setState({isLoading: true});\r\n                this.timerID = setTimeout(() => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        data: data.reverse(),\r\n                        tableData: data,\r\n                        createrFilters: createrFilters,\r\n                        dateRange: [NaN, NaN]\r\n                    })\r\n                }, 300)\r\n            }\r\n        };\r\n        handleDeal = (record) => {\r\n            let data = {id: record.id, state : 1-record.state};\r\n            Modal.confirm({\r\n                title: \"警告\",\r\n                content: \"确定要将单号\\\"PD\"+record.id+\"\\\"设置为已处理吗\",\r\n                okText: \"确认\",\r\n                onOk: async ()=>{\r\n                    const response = await reqInventoryUpdate(data);\r\n                    if(response.status===0){\r\n                        let data = this.state.data.map(item => {\r\n                            item.state = item.id===record.id ? 1-item.state : item.state;\r\n                            return item;\r\n                        });\r\n                        this.setState({data: data})\r\n                    }\r\n                },\r\n                cancelText: \"取消\",\r\n                onCancel: () => {}\r\n            })\r\n        };\r\n        handleDelete = async (record) => {\r\n            Modal.confirm({\r\n                title: '警告',\r\n                content:  \"确定要删除该库存记录\\\"\"+record.id+\"\\\"吗？\",\r\n                okText: '确认',\r\n                onOk: async () => {\r\n                    const response = await reqInventoryDelete(record.id);\r\n                    if(response.status === 0){\r\n                        let tableData=[];\r\n                        this.state.data.forEach(item => {\r\n                            if(item.id !== record.id)  tableData.push(item)\r\n                        });\r\n                        this.setState({\r\n                            tableData: tableData\r\n                        })\r\n                    }\r\n                },\r\n                cancelText: '取消',\r\n                onCancel: () => {}\r\n            });\r\n        };\r\n        handleView = (record) => {\r\n            this.props.history.push({pathname: '/stock/inventory/view', state: {data: record}})\r\n        };\r\n        handleRangePickerChange = (dates, dateStrings) => {\r\n            let start = new Date(dateStrings[0]).getTime();\r\n            let end = new Date(dateStrings[1]).getTime();\r\n            let dateRange = [];\r\n            dateRange.push(start);\r\n            dateRange.push(end);\r\n            let tableData = isNaN(start) || isNaN(end) ? this.state.data : this.state.data.filter(item => {\r\n                return item.createtime >= start && item.createtime <= end\r\n            });\r\n            if(!!this.state.searchValue){\r\n                tableData = tableData.filter(item => {\r\n                    return String(item.id) === this.state.searchValue\r\n                });\r\n            }\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(()=>{\r\n                this.setState({\r\n                    isLoading: false,\r\n                    tableData: tableData,\r\n                    dateRange: dateRange\r\n                })\r\n            },300)\r\n        };\r\n        handleSearch = async (value) => {\r\n            console.log(this.state.dateRange);\r\n            console.log(isNaN(this.state.dateRange[0]));\r\n            console.log(isNaN(this.state.dateRange[1]));\r\n            if(isNaN(this.state.dateRange[0] && isNaN(this.state.dateRange[1]))){\r\n                if(!value){\r\n                    const response = await reqInventoryList();\r\n                    this.refreshTable(response)\r\n                }else{\r\n                    let tableData = this.state.data.filter(item => {\r\n                        return String(item.id) === value\r\n                    });\r\n                    this.setState({isLoading: true});\r\n                    this.timerID = setTimeout(() => {\r\n                        this.setState({\r\n                            isLoading: false,\r\n                            tableData: tableData,\r\n                            searchValue: value\r\n                        })\r\n                    }, 300)\r\n                }\r\n            }else{\r\n                let tableData = this.state.data.filter(item => {\r\n                    return !value ?\r\n                        item.createtime >= this.state.dateRange[0] && item.createtime <= this.state.dateRange[1] :\r\n                        value === String(item.id) && item.createtime >= this.state.dateRange[0] && item.createtime <= this.state.dateRange[1]\r\n                });\r\n                this.setState({isLoading: true});\r\n                this.timerID = setTimeout(() => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        tableData: tableData,\r\n                        searchValue: value\r\n                    })\r\n                }, 300)\r\n            }\r\n        };\r\n        getTimeForm = (time) => {\r\n            time = new Date(time);\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        getVariance = (amount, expect) => {\r\n            const ret = (amount-expect).toFixed(2);\r\n            return ret>0 ? <span>+{ret}</span> : <span>{ret}</span>\r\n        };\r\n        render(){\r\n            const columns = [\r\n                {\r\n                    title: '盘点单号',\r\n                    dataIndex: 'id',\r\n                    key: 'id',\r\n                    render: (text, record) => <Button type=\"link\" onClick={()=>{this.handleView(record)}}>{text}</Button>\r\n                },\r\n                {\r\n                    title: '盘点时间',\r\n                    dataIndex: 'createtime',\r\n                    key: 'time',\r\n                    render: (text) => <span><Icon type=\"clock-circle\" />  {this.getTimeForm(text)}</span>,\r\n                    sorter: (a, b) => a.time-b.time\r\n                },\r\n                {\r\n                    title: '盘点人',\r\n                    dataIndex: 'creater',\r\n                    key: 'creater',\r\n                    filters: this.state.createrFilters,\r\n                    onFilter: (value, record) => value===record.creatername\r\n                },\r\n                {\r\n                    title: '预期金额',\r\n                    key: 'expect',\r\n                    dataIndex: 'expect',\r\n                    render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                    sorter: (a, b) => a.expect-b.expect\r\n                },\r\n                {\r\n                    title: '盘点金额',\r\n                    key: 'amount',\r\n                    dataIndex: 'amount',\r\n                    render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                    sorter: (a, b) => a.amount-b.amount\r\n                },\r\n                {\r\n                    title: '差异金额',\r\n                    key: 'variance',\r\n                    render: (text, record) => this.getVariance(record.amount, record.expect),\r\n                    sorter: (a, b) => a.amount-b.amount\r\n                },\r\n                {\r\n                    title: '状态',\r\n                    key: 'state',\r\n                    dataIndex: 'state',\r\n                    render: (text) => text===1 ? <Tag color='green'>已处理</Tag> : <Tag color='red'>未处理</Tag>,\r\n                    filters: [{text: '已处理', value: 0}, {text: '未处理', value: 1}],\r\n                    onFilter: (value, record) => value===record.state\r\n                },\r\n                {\r\n                    title: '操作',\r\n                    key: 'operate',\r\n                    render: (text, record) => record.state===1 ?\r\n                        <div>\r\n                            <Button size=\"small\" disabled>处理</Button>\r\n                            <Divider type=\"vertical\" />\r\n                            <Button size=\"small\" type=\"danger\" disabled>删除</Button>\r\n                        </div> : <div>\r\n                            <Button size=\"small\" onClick={()=>this.handleDeal(record)}>处理</Button>\r\n                            <Divider type=\"vertical\" />\r\n                            <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                        </div>\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存盘点']} />\r\n                    <div className=\"stock-header\" style={{margin: \"20px\"}}>\r\n                        <Button type=\"primary\"\r\n                                style={{marginRight: \"40px\"}}\r\n                                onClick={()=>{this.props.history.push('/stock/inventory/add')}}>\r\n                            <Icon type=\"plus\"/>新建盘点单\r\n                        </Button>\r\n                        <Input.Search\r\n                            placeholder=\"搜索盘点单号\"\r\n                            style={{width: \"160px\", float: \"right\", marginLeft: \"15px\"}}\r\n                            onSearch={(value) => this.handleSearch(value)}\r\n                            enterButton\r\n                        />\r\n                        <DatePicker.RangePicker\r\n                            style={{width: \"250px\", float: \"right\"}}\r\n                            onChange={this.handleRangePickerChange}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.isLoading ? <Loading /> :\r\n                            <Table\r\n                                size=\"small\"\r\n                                style={{margin: '20px'}}\r\n                                columns={columns}\r\n                                dataSource={this.state.tableData}\r\n                                rowKey={record => record.id}\r\n                                bordered\r\n                            />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default Inventory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, Form, Tag} from \"antd\";\r\n\r\nclass ViewInventory extends React.Component{\r\n    getTime = (time) => {\r\n        time = new Date();\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    getVariance = (amount, expect) => {\r\n        const ret = (amount-expect).toFixed(2);\r\n        return ret>0 ? <span>+{ret}</span> : <span>{ret}</span>\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        const data = this.props.location.state.data;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['库存管理', '库存盘点', '盘点详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看盘点详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock/inventory')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"盘点单号\">\r\n                            <span className=\"ant-form-text\">{data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点人\">\r\n                            <span className=\"ant-form-text\">{data.creater}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"预期金额\">\r\n                            <span className=\"ant-form-text\">￥{data.expect.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点金额\">\r\n                            <span className=\"ant-form-text\">￥{data.amount.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"差异金额\">\r\n                            <span className=\"ant-form-text\">{this.getVariance(data.amount, data.expect)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"状态\">\r\n                            <span className=\"ant-form-text\" style={{marginLeft: \"20px\", textIndent: 0}}>\r\n                                {data.state===0 ? <Tag color='green'>未处理</Tag> : <Tag color='red'>已处理</Tag>}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{ data.note ? data.note : '无'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"详情\">\r\n                            <span className=\"ant-form-text\">{data.detail}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewInventory;\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, InputNumber, Card, Button, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqInventoryAdd, reqStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst AddInventory = Form.create({ name: 'inventory-add-form' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                expect: 0\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockList();\r\n            if(response.status === 0){\r\n                let expect = 0;\r\n                response.data.forEach(item => {\r\n                    expect = expect + item.amount * item.price;\r\n                });\r\n                this.setState({expect: expect.toFixed(2)})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data = values;\r\n                    data.createtime = new Date(data.createtime).getTime();\r\n                    data.state = 0;\r\n                    data.creater = memoryUtils.user.id;\r\n                    data.amount = data.amount.toFixed(2);\r\n                    const response = await reqInventoryAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增盘点记录成功,即将返回盘点列表页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/stock/inventory')\r\n                        }, 1500);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        getTime = () => {\r\n            let time = new Date();\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存盘点', '新建盘点单']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新建盘点单</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock/inventory')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"盘点日期\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTime(),\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"盘点人\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: memoryUtils.user.username\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"预期金额\">\r\n                                {form.getFieldDecorator('expect', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.expect\r\n                                })(<Input addonBefore=\"￥\" disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"盘点金额\">\r\n                                {form.getFieldDecorator('amount', {\r\n                                    rules: [{required: true}]\r\n                                })(<InputNumber style={{width: \"100%\"}} placeholder=\"请输入盘点金额\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"详情\">\r\n                                {form.getFieldDecorator('detail', {\r\n                                    rules: [{required: true}]\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={2}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddInventory;","import React from 'react';\r\nimport {Switch, Redirect, Route} from 'react-router-dom';\r\nimport memoryUtils from '../../util/memoryUtils';\r\nimport {Layout} from 'antd';\r\nimport Header from '../../components/header';\r\nimport LeftNav from '../../components/left-nav';\r\nimport Home from '../../pages/home/home';\r\nimport EditHome from '../../pages/home/home-edit';\r\nimport ViewHome from '../../pages/home/home-view';\r\nimport Category from '../product/category';\r\nimport AddCategory from '../product/category-add';\r\nimport EditCategory from '../product/category-edit';\r\nimport ViewCategory from '../product/category-view';\r\nimport Product from '../../pages/product/product';\r\nimport AddProduct from '../product/product-add';\r\nimport EditProduct from '../product/product-edit';\r\nimport ViewProduct from '../product/product-view';\r\nimport Order from '../../pages/order/order';\r\nimport ViewOrder from '../../pages/order/order-view';\r\nimport Stage from '../order/stage';\r\nimport Member from '../member/member';\r\nimport AddMember from '../member/member-add';\r\nimport EditMember from '../member/member-edit';\r\nimport ViewMember from '../member/member-view';\r\nimport Employee from '../../pages/employee/employee';\r\nimport AddEmployee from '../../pages/employee/employee-add';\r\nimport ViewEmployee from '../../pages/employee/employee-view';\r\nimport EditEmployee from '../../pages/employee/employee-edit';\r\nimport Role from '../../pages/employee/role';\r\nimport AddRole from '../../pages/employee/role-add';\r\nimport EditRole from '../../pages/employee/role-edit';\r\nimport User from '../../pages/employee/user';\r\nimport AddUser from '../../pages/employee/user-add';\r\nimport EditUser from '../../pages/employee/user-edit';\r\nimport Stock from '../../pages/stock/stock';\r\nimport AddStock from '../../pages/stock/stock-add';\r\nimport StockLog from '../../pages/stock/stock-log';\r\nimport ViewStock from '../../pages/stock/stock-view';\r\nimport EditStock from '../../pages/stock/stock-edit';\r\nimport Inventory from '../stock/inventory';\r\nimport ViewInventory from \"../stock/inventory-view\";\r\nimport AddInventory from '../stock/inventory-add';\r\n\r\n\r\nconst {Sider,Content,Footer}=Layout;\r\n\r\nclass Admin extends React.Component{\r\n    render(){\r\n        const user=memoryUtils.user;\r\n        if(JSON.stringify(user)==='{}'){\r\n            return <Redirect to='/login' />\r\n        }else{\r\n            return (\r\n                <Layout>\r\n                    <Sider style={{height: \"100vh\", position: \"fixed\"}}>\r\n                        <LeftNav />\r\n                    </Sider>\r\n                    <Layout id=\"right\" style={{marginLeft: \"200px\"}}>\r\n                        <Header />\r\n                        <Content style={{margin: \"0 20px\", paddingBottom: \"100px\", backgroundColor: \"white\", minHeight: \"500px\"}}>\r\n                            <Switch>\r\n                                {/*首页*/}\r\n                                <Route exact path='/home' component={Home} />\r\n                                <Route path='/home/view' component={ViewHome} />\r\n                                <Route path='/home/edit' component={EditHome} />\r\n                                \r\n                                {/*订单管理*/}\r\n                                <Route exact path='/order' component={Order} />\r\n                                <Route path='/order/view' component={ViewOrder} />\r\n                                <Route exact path='/order/stage' component={Stage} />\r\n                                <Route path='/order/stage/view' component={ViewOrder} />\r\n                                \r\n                                {/*商品管理*/}\r\n                                <Route exact path='/product' component={Product} />\r\n                                <Route path='/product/add' component={AddProduct} />\r\n                                <Route path='/product/edit' component={EditProduct} />\r\n                                <Route path='/product/view' component={ViewProduct} />\r\n                                <Route exact path='/product/category' component={Category} />\r\n                                <Route path='/product/category/add' component={AddCategory} />\r\n                                <Route path='/product/category/edit' component={EditCategory} />\r\n                                <Route path='/product/category/view' component={ViewCategory} />\r\n                                \r\n                                {/*库存管理*/}\r\n                                <Route exact path='/stock' component={Stock} />\r\n                                <Route path='/stock/add' component={AddStock} />\r\n                                <Route path='/stock/view' component={ViewStock} />\r\n                                <Route path='/stock/log' component={StockLog} />\r\n                                <Route path='/stock/edit' component={EditStock} />\r\n                                <Route exact path='/stock/inventory' component={Inventory} />\r\n                                <Route path='/stock/inventory/view' component={ViewInventory} />\r\n                                <Route path='/stock/inventory/add' component={AddInventory} />\r\n                                \r\n                                {/*会员管理*/}\r\n                                <Route exact path='/member' component={Member} />\r\n                                <Route path='/member/add' component={AddMember} />\r\n                                <Route path='/member/edit' component={EditMember} />\r\n                                <Route path='/member/view' component={ViewMember} />\r\n                                \r\n                                {/*人事管理*/}\r\n                                <Route exact path='/employee' component={Employee} />\r\n                                <Route path='/employee/add' component={AddEmployee} />\r\n                                <Route path='/employee/view' component={ViewEmployee} />\r\n                                <Route path='/employee/edit' component={EditEmployee} />\r\n                                <Route exact path='/employee/user' component={User} />\r\n                                <Route path='/employee/user/add' component={AddUser} />\r\n                                <Route path='/employee/user/edit' component={EditUser} />\r\n                                <Route exact path='/employee/role' component={Role} />\r\n                                <Route path='/employee/role/add' component={AddRole} />\r\n                                <Route path='/employee/role/edit' component={EditRole} />\r\n                                \r\n                                {/*重定向*/}\r\n                                <Redirect to='/home' />\r\n                            </Switch>\r\n                        </Content>\r\n                        <Footer>推荐使用Chrome浏览器，可获得更佳的页面操作体验。</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin","import React from 'react';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Login from './pages/login/login';\nimport Admin from './pages/admin/admin';\n\nclass App extends React.Component{\n    render(){\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/login\" component={Login}/>\n                    <Route path=\"/\" component={Admin}/>\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport storageUtil from './util/storageUtils';\nimport memoryUtils from './util/memoryUtils';\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nmoment.locale('zh-cn');\n\nconst user=storageUtil.getUser();\nmemoryUtils.user=user;\n\nReactDOM.render(<ConfigProvider locale={zh_CN}><App /></ConfigProvider>, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.6c9c9c6a.png\";"],"sourceRoot":""}