{"version":3,"sources":["assets/images/logo.png","api/ajax.js","api/jsonp.js","api/index.js","util/memoryUtils.js","util/storageUtils.js","pages/login/login.jsx","components/header/index.jsx","components/left-nav/index.jsx","components/top-nav/index.jsx","pages/home/home.jsx","components/avatar/index.jsx","pages/home/home-edit.jsx","components/loading/index.jsx","pages/product/category.jsx","pages/product/category-add.jsx","pages/product/category-edit.jsx","pages/product/category-view.jsx","pages/product/product.jsx","components/picture-wall/picture-wall.jsx","pages/product/product-add.jsx","pages/product/product-edit.jsx","pages/product/product-view.jsx","pages/order/order.jsx","pages/order/order-view.jsx","pages/order/stage.jsx","pages/member/member.jsx","pages/member/member-add.jsx","pages/member/member-edit.jsx","pages/member/member-view.jsx","pages/employee/employee.jsx","pages/employee/employee-add.jsx","pages/employee/employee-view.jsx","pages/employee/employee-edit.jsx","pages/employee/role.jsx","pages/employee/role-add.jsx","pages/employee/role-edit.jsx","pages/employee/user.jsx","pages/employee/user-add.jsx","pages/employee/user-edit.jsx","pages/stock/stock.jsx","pages/stock/stock-add.jsx","pages/stock/stock-log-view.jsx","pages/stock/stock-log.jsx","pages/stock/stock-view.jsx","pages/stock/stock-edit.jsx","pages/stock/inventory.jsx","pages/stock/inventory-view.jsx","pages/stock/inventory-add.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["module","exports","ajax","url","data","type","Promise","resolve","axios","get","params","post","then","response","catch","err","message","error","jsonp","key","output","ouput","undefined","$","dataType","success","ret","WEATHER_URL","LOCATION_URL","reqWeather","location","reqCity","reqLogin","username","password","reqShopInfo","updateShopInfo","reqCategoryList","updateCategoryList","reqCategorySearch","name","reqCategoryDelete","id","addCategoryList","reqProductList","reqProductDelete","updateProductList","addProductList","reqProductSearch","reqImgDelete","reqStockList","reqStockCategory","reqStockDelete","reqStockSearch","addStockList","updateStockList","reqStocklogList","addStocklogList","reqCustomerList","reqMemberList","reqMemberSearch","value","reqMemberDelete","reqMemberAdd","updateMemberList","reqEmployeeList","reqEmployeeDelete","reqEmployeeSearch","addEmployeeList","updateEmployeeList","reqInventoryList","reqInventoryAdd","reqInventoryUpdate","reqInventoryDelete","reqUserList","reqUserDelete","reqUserAdd","reqUserUpdate","reqOrderList","reqFrontdeskList","reqOrderSearch","reqOrderRange","start","end","reqOrderUpdate","reqRoleList","reqRoleDelete","reqRoleAdd","reqRoleUpdate","reqRuleUpdate","user","others","store","require","saveUser","set","getUser","removeUser","remove","Login","handleSubmit","e","preventDefault","props","form","validateFields","values","a","async","response1","response2","status","permission","forEach","item","role","split","memoryUtils","storageUtils","history","replace","console","log","validatePwd","rule","callback","length","test","validateUser","JSON","stringify","to","this","className","src","logo","alt","onSubmit","Item","getFieldDecorator","rules","validator","prefix","style","color","placeholder","htmlType","React","Component","create","Header","UNSAFE_componentWillMount","memoryUtil","result","ad_info","district","HeWeather6","weather_txt","now","cond_txt","weather_code","cond_code","intervalId","setInterval","time","Date","month","getMonth","setState","date","getFullYear","getDate","logout","loading","setTimeout","storageUtil","state","clearInterval","marginRight","placement","title","okType","onConfirm","okText","cancelText","withRouter","SubMenu","LeftNav","menu","icon","display","children","selectedKeys","getSelectedKeys","pathname","openKeys","getOpenKeys","rootSubmenuKeys","onOpenChange","latestOpenKey","find","indexOf","closeSubmenuAll","selectedKey","openKey","Logo","mode","theme","map","TopNav","nav","index","fontWeight","cursor","margin","Home","profile","handleEdit","push","fontSize","extra","onClick","width","border","labelCol","span","wrapperCol","marginTop","textIndent","label","address","seats","tel","notice","businesshour","Avatar","previewVisible","previewImage","fileList","uid","img","getBase64","file","reject","reader","FileReader","readAsDataURL","onload","onerror","handleCancel","handlePreview","preview","originFileObj","handleChange","fileIndex","splice","urls","onChange","join","uploadButton","action","accept","listType","onPreview","visible","footer","onCancel","EditHome","componentWillMount","opentime","closetime","validateName","moment","_i","timerID","initialValue","required","format","story","TextArea","rows","treaty","Loading","size","Category","refreshTable","isLoading","level","levelText","msg","handleIsnavChange","record","isnav","handleSearch","handleDelete","confirm","content","onOk","handleAdd","handleView","columns","render","text","dataIndex","sorter","b","son","defaultChecked","filters","onFilter","Search","float","onSearch","enterButton","dataSource","rowKey","bordered","AddCategory","Number","Option","valuePropName","EditCategory","note","ViewCategory","Product","componentWillUnmount","clearTimeout","formRef","rowSelection","selectedRowKeys","options1","options2","categoryFilters","item1","item2","category","categoryName","handleStateChange","string","obj","handleSelectChange","selectedType","hasOwnProperty","arr","handleCascaderChange","operation","handleOperate","formRef1","resetFields","selectedCategory","toFixed","price","unit","sales","onsale","isnew","recommend","options","textAlign","PicturesWall","urlArr","imgs","AddProduct","category_options","validateNumber","validatePrice","validateUnit","validateNoteProduct","validateIntegral","validateIntroduceTitle","validateIntroduceContent","integral","deleted","hasFeedback","validate","addonAfter","Group","min","max","step","EditProduct","categoryOptions","number","introduce","tip","description","discount_gold","discount_platinum","discount_diamond","pictures","ViewProduct","stateYes","stateNo","marginLeft","Order","componentDidMount","timerID1","searching","timerID2","response3","commodity","parse","customer","reverse","handleCustomerDetail","handleComplete","getTimeForm","hour","getHours","minute","getMinutes","second","getSeconds","getTimePicker","option","handleDatePickerChange","WeekPicker","handleWeekPickerChange","MonthPicker","handleMonthPickerChange","RangePicker","handleRangePickerChange","dateString","getTime","week","day","startOf","endOf","dates","dateStrings","column","seat","count","createtime","amount","starArr","i","stars","urged","overflow","defaultValue","ViewOrder","payment","evaluation","Stage","filter","Member","handleDetail","AddCustomer","orderid","addonBefore","buttonStyle","Button","EditCustomer","ViewCustomer","Employee","department","departmentFilter","duty","dutyFilter","Set","workid","gender","age","entrytime","salary","AddEmployee","handleNext","current","handlePrevious","birthday","graduatetime","onTabChange","getDateTime","getMonthTime","value1","formItemLayout","contentList","tab1","identity","nation","origin","marriage","degree","institution","tab2","height","padding","borderRadius","steps","tabList","tab","activeTabKey","Step","ViewEmployee","EditEmployee","updateData","disabled","Role","roleUser","item3","creater","createrRole","createrName","viewVisible","AddRole","temp","target","checked","marginBottom","EditRole","concat","getFatherChecked","User","handleRoleView","AddUser","EditUser","rolename","email","Stock","excess","warning","stockid","manager","latestTime","stockname","AddStock","insertId","handleAddClick","handleNameChange","categoryAdd","compact","StocklogView","header","amout","String","info","before","Object","getOwnPropertyNames","StockLog","data1","data2","sort","pop","logInfo","pagination","pageSize","renderItem","ViewStock","EditStock","initialData","Inventory","createrFilters","tableData","dateRange","NaN","handleDeal","isNaN","searchValue","getVariance","expect","creatername","ViewInventory","detail","AddInventory","Sider","Content","Footer","Admin","position","paddingBottom","backgroundColor","minHeight","exact","path","component","AddMember","EditMember","ViewMember","App","locale","ReactDOM","zh_CN","document","getElementById"],"mappings":"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","file":"static/js/main.1d743b95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6c9c9c6a.png\";","/*能发送异步ajax的函数模块，\r\n*封装Axios库，\r\n* 返回的是一个promise对象*/\r\n\r\nimport axios from 'axios';\r\nimport {message} from 'antd';\r\n\r\nexport default function ajax(url,data={},type='GET') {\r\n    return new Promise(resolve => {\r\n        let promise = null;\r\n        if(type === 'GET'){\r\n            promise = axios.get(url, {\r\n                params: data\r\n            });\r\n        } else {\r\n            promise = axios.post(url, data)\r\n        }\r\n        promise.then(response=>{\r\n            resolve(response.data)\r\n        }).catch((err)=>{\r\n            message.error(\"请求失败 \"+err.message)\r\n        })\r\n    })\r\n}","import $ from 'jquery';\r\n\r\nexport default function jsonp(url, data={}) {\r\n    return new Promise(resolve => {\r\n        data.key===\"LOABZ-ONL6F-CLXJZ-N4A2L-AB74O-ITFWZ\" ? data.output=\"jsonp\" : data.ouput=undefined;\r\n        $.ajax({\r\n            url: url,\r\n            type: \"post\",\r\n            dataType: 'jsonp',\r\n            data: data,\r\n            jsonp: 'callback',\r\n            success: ret => {\r\n                resolve(ret)\r\n            }\r\n        })\r\n    })\r\n}","/*该模块包含应用中所有接口请求函数\r\n*每个函数的返回值都是promise\r\n */\r\nimport ajax from './ajax';\r\nimport jsonp from './jsonp'\r\n\r\n\r\nconst WEATHER_URL=\"https://free-api.heweather.net/s6/weather/now\";\r\nconst WEATHER_KEY=\"0894aab8b0394389a7ac887e32db9c30\";\r\nconst LOCATION_URL=\"https://apis.map.qq.com/ws/location/v1/ip\";\r\nconst LOCATION_KEY=\"LOABZ-ONL6F-CLXJZ-N4A2L-AB74O-ITFWZ\";\r\n\r\n//header;\r\nexport const reqWeather = (location, key=WEATHER_KEY) => ajax(WEATHER_URL,{location: location, key: key},'GET');\r\nexport const reqCity = (key=LOCATION_KEY) => jsonp(LOCATION_URL, {key});\r\n\r\n//basic requests;\r\nexport const reqLogin = (username,password) => ajax('/login',{username: username, password: password},'POST');\r\n\r\n//home\r\nexport const reqShopInfo = () => ajax('/shop/info', null, 'GET');\r\nexport const updateShopInfo = (data) => ajax('/shop/update', data, 'POST');\r\n\r\n//category;\r\nexport const reqCategoryList = () => ajax('/category/list',null ,'GET');\r\nexport const updateCategoryList = (data) => ajax('/category/update', data, 'POST');\r\nexport const reqCategorySearch = (name) => ajax('/category/search', {name}, 'GET');\r\nexport const reqCategoryDelete = (id) => ajax('/category/delete', {id}, 'GET');\r\nexport const addCategoryList = (data) => ajax('/category/add', data, 'POST');\r\n\r\n//product\r\nexport const reqProductList = () => ajax('/product/list', null, 'GET');\r\nexport const reqProductDelete = (id) => ajax('/product/delete', {id}, 'POST');\r\nexport const updateProductList = (data) => ajax('/product/update', data, 'POST');\r\nexport const addProductList = (data) => ajax('/product/add', data, 'POST');\r\nexport const reqProductSearch = (data) => ajax('/product/search', data, 'POST');\r\n\r\n//file\r\nexport const reqImgDelete = (name) => ajax('/file/delete', {name}, 'GET');\r\n\r\n//stock\r\nexport const reqStockList = () => ajax('/stock/list', null, 'GET');\r\nexport const reqStockCategory = () => ajax('/stock/category', null, 'GET');\r\nexport const reqStockDelete = (id) => ajax('/stock/delete', {id}, 'GET');\r\nexport const reqStockSearch = (name) => ajax('/stock/search', {name}, 'GET');\r\nexport const addStockList = (data) => ajax('/stock/add', data, 'POST');\r\nexport const updateStockList = (data) => ajax('/stock/update', data, 'POST');\r\n\r\n//stocklog\r\nexport const reqStocklogList = (data) => ajax('/stock/stocklog-list', data, 'GET');\r\nexport const addStocklogList = (data) => ajax('/stock/stocklog-add', data, 'POST');\r\n\r\n//customer\r\nexport const reqCustomerList = () => ajax('/customer/list', null, 'GET');\r\nexport const reqMemberList = () => ajax('/customer/member-list', null, 'GET');\r\nexport const reqMemberSearch = (value) => ajax('/customer/member-search', {value}, 'GET');\r\nexport const reqMemberDelete = (id) => ajax('/customer/delete', {id}, 'GET');\r\nexport const reqMemberAdd = (data) => ajax('/customer/add', data, 'POST');\r\nexport const updateMemberList = (data) => ajax('/customer/update', data, 'POST');\r\n\r\n//employee\r\nexport const reqEmployeeList = () => ajax('/employee/list', null, 'GET');\r\nexport const reqEmployeeDelete = (id) => ajax('/employee/delete', {id}, 'GET');\r\nexport const reqEmployeeSearch = (value) => ajax('/employee/search', {value}, 'GET');\r\nexport const addEmployeeList = (data) => ajax('/employee/add', data, 'POST');\r\nexport const updateEmployeeList = (data) => ajax('/employee/update', data, 'POST');\r\n\r\n//inventory\r\nexport const reqInventoryList = () => ajax('/inventory/list', null, 'GET');\r\nexport const reqInventoryAdd = (data) => ajax('/inventory/add', data, 'POST');\r\nexport const reqInventoryUpdate = (data) => ajax('/inventory/update', data, 'POST');\r\nexport const reqInventoryDelete = (id) => ajax('/inventory/delete', {id}, 'GET');\r\n\r\n\r\n//user\r\nexport const reqUserList = () => ajax('/user/list', null, 'GET');\r\nexport const reqUserDelete = (id) => ajax('/user/delete', {id}, 'GET');\r\nexport const reqUserAdd = (data) => ajax('/user/add', data, 'POST');\r\nexport const reqUserUpdate = (data) => ajax('/user/update', data, 'POST');\r\n\r\n//order\r\nexport const reqOrderList = () => ajax('/order/list', null, 'GET');\r\nexport const reqFrontdeskList = () => ajax('/order/frontdesk-list', null, 'GET');\r\nexport const reqOrderSearch = (id) => ajax('/order/search', {id}, 'GET');\r\nexport const reqOrderRange = (start,end) => ajax('/order/range', {start, end}, 'GET');\r\nexport const reqOrderUpdate = (data) => ajax('/order/update', data, 'POST');\r\n\r\n//Role\r\nexport const reqRoleList = () => ajax('/role/list', null, 'GET');\r\nexport const reqRoleDelete = (id) => ajax('/role/delete', {id}, 'GET');\r\nexport const reqRoleAdd = (data) => ajax('/role/add', data, 'POST');\r\nexport const reqRoleUpdate = (data) => ajax('/role/update', data, 'POST');\r\n\r\n//Rule\r\nexport const reqRuleList = () => ajax('/rule/list', null, 'GET');\r\nexport const reqRuleUpdate = (data) => ajax('/rule/update', data, 'POST');\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default {\r\n    user : {},\r\n    others: {}\r\n}","let store=require('store');\r\nconst USER_KEY='user_key';\r\nexport default{\r\n    saveUser(user){\r\n        // localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n        store.set(USER_KEY,user)\r\n    },\r\n    getUser(){\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n        return store.get(USER_KEY) || {}\r\n    },\r\n    removeUser(){\r\n        // localStorage.removeItem(USER_KEY)R_KEY\r\n        store.remove(USER_KEY)\r\n    }\r\n}","import React from 'react';\r\nimport {Form,Input,Icon,Button,message} from 'antd';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './login.less';\r\nimport logo from '../../assets/images/logo.png';\r\nimport {reqLogin, reqRoleList} from '../../api';\r\nimport memoryUtils from '../../util/memoryUtils';\r\nimport storageUtils from '../../util/storageUtils';\r\n//登录的路由组件\r\nclass Login extends React.Component{\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err,values)=>{\r\n            if(!err){\r\n                const {username,password}=values;\r\n                const response1 = await reqLogin(username,password);\r\n                const response2 = await reqRoleList();\r\n                if(response1.status===0 && response2.status===0){\r\n                    message.success('登录成功');\r\n                    let data = response1.data;\r\n                    let permission = [];\r\n                    response2.data.forEach(item => {\r\n                        if(response1.data.role===item.id) permission = item.permission.split(\"-\")\r\n                    });\r\n                    data.permission = permission;\r\n                    memoryUtils.user = response1.data;\r\n                    storageUtils.saveUser(response1.data);\r\n                    this.props.history.replace('/')\r\n                }\r\n            }else{\r\n                console.log(\"校验失败\")\r\n            }\r\n        })\r\n    };\r\n    validatePwd=(rule,value,callback)=>{\r\n        if(!value){\r\n            callback(\"请输入密码\")\r\n        }else if(value.length<4){\r\n            callback(\"密码长度不能小于4位\")\r\n        }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n            callback(\"密码必须由字母、数字或字符串组成\")\r\n        }else if(value.length>12){\r\n            callback(\"密码长度不能大于12位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUser=(rule,value,callback)=>{\r\n        if(!value){\r\n            callback(\"请输入用户名\")\r\n        }else if(value.length<4){\r\n            callback(\"用户名长度不能小于4位\")\r\n        }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n            callback(\"用户名必须由字母、数字或字符串组成\")\r\n        }else if(value.length>12){\r\n            callback(\"用户名长度不能大于12位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    render(){\r\n        const user=memoryUtils.user;\r\n        if(JSON.stringify(user)!=='{}'){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        const form=this.props.form;\r\n        return (\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <h3>餐饮后台管理系统</h3>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <h2>用户登录</h2>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {\r\n                                form.getFieldDecorator('username',{\r\n                                    rules:[\r\n                                        {validator:this.validateUser}\r\n                                    ]\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"请输入用户名\"\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item>\r\n                            {\r\n                                form.getFieldDecorator('password',{\r\n                                    rules:[\r\n                                        {validator:this.validatePwd}\r\n                                    ]\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"请输入密码\"\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default Form.create()(Login);\r\n\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Popconfirm} from 'antd';\r\nimport './index.less';\r\nimport {reqWeather, reqCity} from '../../api/index';\r\nimport memoryUtil from '../../util/memoryUtils';\r\nimport storageUtil from '../../util/storageUtils';\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username: \"-\",\r\n            location: \"-\",\r\n            weather_txt: \"-\",\r\n            weather_code: \"100\",\r\n            date: \"-\",\r\n            loading:false\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response1=await reqCity();\r\n        response1.status===0 ? memoryUtil.others.location=response1.result.ad_info.district : console.log(\"请求位置信息失败  \"+response1.message);\r\n        const response2=await reqWeather(memoryUtil.others.location);\r\n        if(response2.HeWeather6[0].status===\"ok\"){\r\n            memoryUtil.others.weather_txt=response2.HeWeather6[0].now.cond_txt;\r\n            memoryUtil.others.weather_code=response2.HeWeather6[0].now.cond_code;\r\n        }else{\r\n            console.log(\"请求天气信息失败  \"+response2.HeWeather6[0].status)\r\n        }\r\n        this.intervalId=setInterval(() => {\r\n            let time=new Date();\r\n            let month=time.getMonth()+1;\r\n            this.setState({\r\n                username: memoryUtil.user.username,\r\n                location: memoryUtil.others.location,\r\n                weather_txt: memoryUtil.others.weather_txt,\r\n                weather_code: memoryUtil.others.weather_code,\r\n                date: time.getFullYear()+\"-\"+month+\"-\"+time.getDate()\r\n            })\r\n        }, 1000)\r\n    };\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId)\r\n    };\r\n    logout= () => {\r\n        this.setState({ loading: true });\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                memoryUtil.user={};\r\n                memoryUtil.others={};\r\n                storageUtil.removeUser();\r\n                this.props.history.replace('/login');\r\n                resolve()\r\n            }, 1000);\r\n        }).catch(() => console.log('登出失败'));\r\n    };\r\n    render(){\r\n        return (\r\n            <div className=\"header\">\r\n                <span>{this.state.date}</span>\r\n                <span>{this.state.location}</span>\r\n                <img src={\"https://cdn.heweather.com/cond_icon/\"+this.state.weather_code+\".png\"} alt=\"weather\" />\r\n                <span style={{marginRight: \"100px\"}}>{this.state.weather_txt}</span>\r\n                <span style={{marginRight: \"20px\"}}>欢迎! {this.state.username}</span>\r\n                <Popconfirm\r\n                    placement=\"bottomRight\"\r\n                    title=\"确定要退出系统吗？\"\r\n                    okType=\"danger\"\r\n                    onConfirm={this.logout}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <Button style={{marginRight: \"50px\"}} type=\"primary\" loading={this.state.loading}>退出</Button>\r\n                </Popconfirm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  withRouter(Header);","import React from 'react';\r\nimport './index.less';\r\nimport Logo from '../../assets/images/logo.png';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {Menu,Icon} from 'antd';\r\n// import menuList from '../../config/menuConfig';\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst {SubMenu}=Menu;\r\n\r\nclass LeftNav extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            menu: [],\r\n            selectedKeys: [],\r\n            openKeys: []\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = () => {\r\n        let menu = [\r\n            {\r\n                key: \"/home\",\r\n                title: \"首页\",\r\n                icon: \"home\",\r\n                display: 1\r\n            },\r\n            {\r\n                key: \"/order\",\r\n                title: \"订单管理\",\r\n                icon: \"account-book\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/order\",\r\n                        title: \"全部订单\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/order/stage\",\r\n                        title: \"前台管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/product\",\r\n                title: \"商品管理\",\r\n                icon: \"shopping\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/product/category\",\r\n                        title: \"商品分类\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/product\",\r\n                        title: \"商品列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/product/add\",\r\n                        title: \"添加商品\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/stock\",\r\n                title: \"库存管理\",\r\n                icon: \"appstore\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/stock\",\r\n                        title: \"库存信息\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/stock/inventory\",\r\n                        title: \"库存盘点\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/member\",\r\n                title: \"会员管理\",\r\n                icon: \"crown\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/member\",\r\n                        title: \"会员列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/member/add\",\r\n                        title: \"新增会员\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/employee\",\r\n                title: \"人事管理\",\r\n                icon: \"team\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/employee\",\r\n                        title: \"员工列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/employee/user\",\r\n                        title: \"用户列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/employee/role\",\r\n                        title: \"角色管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        memoryUtils.user.permission.forEach(item => {\r\n            switch (item) {\r\n                case '全部订单':\r\n                    menu[1].display = 1;\r\n                    menu[1].children[0].display = 1;\r\n                    break;\r\n                case '前台管理':\r\n                    menu[1].display = 1;\r\n                    menu[1].children[1].display = 1;\r\n                    break;\r\n                case '商品分类':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[0].display = 1;\r\n                    break;\r\n                case '商品列表':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[1].display = 1;\r\n                    break;\r\n                case '添加商品':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[2].display = 1;\r\n                    break;\r\n                case '库存信息':\r\n                    menu[3].display = 1;\r\n                    menu[3].children[0].display = 1;\r\n                    break;\r\n                case '库存盘点':\r\n                    menu[3].display = 1;\r\n                    menu[3].children[1].display = 1;\r\n                    break;\r\n                case '会员列表':\r\n                    menu[4].display = 1;\r\n                    menu[4].children[0].display = 1;\r\n                    break;\r\n                case '新增会员':\r\n                    menu[4].display = 1;\r\n                    menu[4].children[1].display = 1;\r\n                    break;\r\n                case '员工列表':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[0].display = 1;\r\n                    break;\r\n                case '用户列表':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[1].display = 1;\r\n                    break;\r\n                case '角色管理':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[2].display = 1;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        this.setState({\r\n            menu: menu,\r\n            selectedKeys: this.getSelectedKeys(this.props.location.pathname),\r\n            openKeys: this.getOpenKeys(this.props.location.pathname)\r\n        })\r\n    };\r\n    rootSubmenuKeys = ['/home', '/order', '/product','/category','/stock', '/member','/employee'];\r\n    onOpenChange = openKeys => {\r\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\r\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            this.setState({ openKeys });\r\n        } else {\r\n            this.setState({\r\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\r\n            });\r\n        }\r\n    };\r\n    closeSubmenuAll = () =>{\r\n        this.setState({openKeys:[]});\r\n    };\r\n    getSelectedKeys = (pathname) => {\r\n        // let selectedKey = '';\r\n        // switch(pathname){\r\n        //     case '/order/stage': selectedKey = '/order/stage'; break;\r\n        //     case '/product/category': selectedKey = '/product/category'; break;\r\n        //     case '/product/add': selectedKey = '/product/add'; break;\r\n        //     case '/stock/inventory': selectedKey = '/stock/inventory'; break;\r\n        //     case '/member/add': selectedKey = '/member/add'; break;\r\n        //     case '/employee/user': selectedKey = '/employee/user'; break;\r\n        //     case '/employee/role': selectedKey = '/employee/role'; break;\r\n        //     default: selectedKey = '/'+pathname.split('/')[1];\r\n        // }\r\n        // return [selectedKey];\r\n        \r\n        let selectedKey = '';\r\n        switch (pathname) {\r\n            // 首页\r\n            case '/home':\r\n            case '/home/edit': selectedKey = '/home'; break;\r\n            // 订单管理\r\n            case '/order':\r\n            case '/order/view': selectedKey = '/order'; break;\r\n            case '/order/stage':\r\n            case '/order/stage/view': selectedKey = '/order/stage'; break;\r\n            // 商品管理\r\n            case '/product':\r\n            case '/product/view':\r\n            case '/product/edit': selectedKey = '/product'; break;\r\n            case '/product/add': selectedKey = '/product/add'; break;\r\n            case '/product/category':\r\n            case '/product/category/view':\r\n            case '/product/category/add':\r\n            case '/product/category/edit': selectedKey = '/product/category'; break;\r\n            //库存管理\r\n            case '/stock':\r\n            case '/stock/view':\r\n            case '/stock/add':\r\n            case '/stock/edit':\r\n            case '/stock/log': selectedKey = '/stock'; break;\r\n            case '/stock/inventory':\r\n            case '/stock/inventory/view':\r\n            case '/stock/inventory/add': selectedKey = '/stock/inventory'; break;\r\n            //会员管理\r\n            case '/member':\r\n            case '/member/view':\r\n            case '/member/edit': selectedKey = '/member'; break;\r\n            case '/member/add': selectedKey = '/member/add'; break;\r\n            //人事管理\r\n            case '/employee':\r\n            case '/employee/view':\r\n            case '/employee/add':\r\n            case '/employee/edit': selectedKey = '/employee'; break;\r\n            case '/employee/user':\r\n            case '/employee/user/add':\r\n            case '/employee/user/edit': selectedKey = '/employee/user'; break;\r\n            case '/employee/role':\r\n            case '/employee/role/add':\r\n            case '/employee/role/edit': selectedKey = '/employee/role'; break;\r\n            default: break;\r\n        }\r\n        return [selectedKey]\r\n    };\r\n    getOpenKeys = (pathname) => {\r\n        let openKey = '';\r\n        switch(pathname){\r\n            case '/product/category': openKey = '/product'; break;\r\n            case '/stock/inventory': openKey = '/stock'; break;\r\n            case '/employee/role': openKey = '/employee'; break;\r\n            case '/employee/user': openKey = '/employee'; break;\r\n            default: openKey = '/'+pathname.split('/')[1];\r\n        }\r\n        return [openKey];\r\n    };\r\n    render(){\r\n        return (\r\n            <div className=\"left-nav\">\r\n                <Link to=\"/\">\r\n                    <div className=\"left-nav-header\">\r\n                        <img src={Logo} alt=\"logo\"/>\r\n                        <h1>餐厅后台</h1>\r\n                    </div>\r\n                </Link>\r\n                <Menu\r\n                    selectedKeys={this.getSelectedKeys(this.props.location.pathname)}\r\n                    mode=\"inline\"\r\n                    openKeys={this.state.openKeys}\r\n                    onOpenChange={this.onOpenChange}\r\n                    // style={{backgroundColor:\"#0354d9\"}}\r\n                    theme=\"dark\"\r\n                >\r\n                    {\r\n                        this.state.menu.map((item) => {\r\n                            if(!item.children){\r\n                                return (\r\n                                    <Menu.Item\r\n                                        key={item.key}\r\n                                        style={{display: item.display===0 ? \"none\" : \"block\"}}\r\n                                    >\r\n                                        <Link to={item.key}><Icon type={item.icon}/>{item.title}</Link>\r\n                                    </Menu.Item>\r\n                                )\r\n                            }else{\r\n                                return  (\r\n                                    <SubMenu\r\n                                        key={item.key}\r\n                                        title={(<span><Icon type={item.icon}/>{item.title}</span>)}\r\n                                        style={{display: item.display===0 ? \"none\" : \"block\"}}\r\n                                    >\r\n                                        {\r\n                                            item.children.map(item => {\r\n                                                return (\r\n                                                    <Menu.Item\r\n                                                        key={item.key}\r\n                                                        style={{display: item.display===0 ? \"none\" : \"block\"}}\r\n                                                    >\r\n                                                        <Link to={item.key}>{item.title}</Link>\r\n                                                    </Menu.Item>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </SubMenu>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(LeftNav);","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './index.less';\r\n\r\nclass TopNav extends React.Component{\r\n    // handleNavClick = (item) => {\r\n    //     let nav = \"\";\r\n    //     switch(item){\r\n    //         case \"首页\": nav=\"/home\";break;\r\n    //         // 订单管理\r\n    //         case \"全部订单\": nav=\"/order\";break;\r\n    //         case \"订单详情\": nav=\"/order-view\";break;\r\n    //         case \"前台管理\": nav=\"/order-stage\";break;\r\n    //         // 商品管理\r\n    //         case \"商品分类\": nav=\"/category\";break;\r\n    //         case \"新增品类\": nav=\"/category-add\";break;\r\n    //         case \"编辑品类\": nav=\"/category-edit\";break;\r\n    //         case \"品类详情\": nav=\"/category-view\";break;\r\n    //         case \"商品列表\": nav=\"/product\";break;\r\n    //         case \"添加商品\": nav=\"/product-add\";break;\r\n    //         case \"编辑商品\": nav=\"/product-edit\";break;\r\n    //         case \"商品详情\": nav=\"/product-view\";break;\r\n    //         // 库存管理\r\n    //         case \"库存信息\": nav=\"/stock\";break;\r\n    //         case \"新增库存\": nav=\"/stock-add\";break;\r\n    //         case \"编辑库存\": nav=\"/stock-add\";break;\r\n    //         case \"货物详情\": nav=\"/stock-view\";break;\r\n    //         case \"库存日志\": nav=\"/stock-log\";break;\r\n    //         case \"库存盘点\": nav=\"/inventory\";break;\r\n    //         case \"新建盘点单\": nav=\"/inventory-add\";break;\r\n    //         case \"盘点详情\": nav=\"/inventory-view\";break;\r\n    //         //会员管理\r\n    //         case \"会员列表\": nav=\"/member\";break;\r\n    //         case \"编辑会员\": nav=\"/member-edit\";break;\r\n    //         case \"新增会员\": nav=\"/member-add\";break;\r\n    //         case \"会员详情\": nav=\"/member-view\";break;\r\n    //         //人事管理\r\n    //         case \"员工列表\": nav=\"/employee\";break;\r\n    //         case \"新增员工\": nav=\"/employee-add\";break;\r\n    //         case \"编辑员工\": nav=\"/employee-edit\";break;\r\n    //         case \"员工详情\": nav=\"/employee-view\";break;\r\n    //         case \"用户列表\": nav=\"/user\";break;\r\n    //         case \"创建用户\": nav=\"/user-add\";break;\r\n    //         case \"角色管理\": nav=\"/role\";break;\r\n    //         case \"新增角色\": nav=\"/role-add\";break;\r\n    //         case \"编辑角色\": nav=\"/role-edit\";break;\r\n    //         //财务管理（待完善）\r\n    //         default : nav=\"home\";break;\r\n    //     }\r\n    //     this.props.history.replace(nav)\r\n    // };\r\n    render(){\r\n        return (\r\n            <div className=\"top-nav-container\">\r\n                {\r\n                    this.props.nav.map((item,index) => {\r\n                        // return index===0 ? (\r\n                        //     <span key={index}>\r\n                        //         <span style={{fontWeight: \"bold\", cursor: \"pointer\"}}>{item}</span>\r\n                        //         <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                        //     </span>\r\n                        // ) : index+1===this.props.nav.length ? (\r\n                        //     <span key={index}\r\n                        //           style={{cursor: \"pointer\", color: \"#98a9c4\"}}\r\n                        //           onClick={()=>this.handleNavClick(item)}\r\n                        //     >{item}</span>\r\n                        // ) : (\r\n                        //     <span key={index}>\r\n                        //         <span key={index}\r\n                        //               style={{fontWeight: \"bold\", cursor: \"pointer\"}}\r\n                        //               onClick={()=>this.handleNavClick(item)}>{item}</span>\r\n                        //         <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                        //     </span>\r\n                        // )\r\n                        return index===0 && index===this.props.nav.length ? (\r\n                            <span key={index}>\r\n                                <span style={{fontWeight: \"bold\", cursor: \"default\"}}>{item}</span>\r\n                                <span style={{\r\n                                    margin: \"0 10px\",\r\n                                    color: \"#98a9c4\",\r\n                                }}>/</span>\r\n                            </span>\r\n                        ) : index+1===this.props.nav.length ? (\r\n                            <span key={index} style={{color: \"#98a9c4\",  cursor: \"default\"}}>{item}</span>\r\n                        ) : (\r\n                            <span key={index}>\r\n                                <span key={index} style={{fontWeight: \"bold\",  cursor: \"default\"}}>{item}</span>\r\n                                <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TopNav);","import React from 'react';\r\nimport './home.less';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, Form} from \"antd\";\r\nimport {reqShopInfo} from \"../../api\";\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqShopInfo();\r\n        if(response.status === 0){\r\n            let data = response.data;\r\n            data.profile = 'http://localhost:3001/upload/'+data.profile;\r\n            this.setState({data: data})\r\n        }\r\n    };\r\n    handleEdit = () => {\r\n        this.props.history.push({\r\n            pathname: '/home/edit',\r\n            state: {\r\n                data: this.state.data\r\n            }\r\n        })\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {span: 7},\r\n            wrapperCol: {span: 11}\r\n        };\r\n        return (\r\n            <div className='home-container'>\r\n                <TopNav nav={['首页']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>门店信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={this.handleEdit}>编辑</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"20px\", textIndent: \"20px\", fontWeight: \"bold\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"店名\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        {/*<Form.Item label=\"头像\">*/}\r\n                        {/*    <span className=\"ant-form-pictures\">*/}\r\n                        {/*        <img src={this.state.data.profile} alt=\"头像\"/>*/}\r\n                        {/*    </span>*/}\r\n                        {/*</Form.Item>*/}\r\n                        <Form.Item label=\"地址\">\r\n                            <span className=\"ant-form-text\">{this.state.data.address}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"桌数\">\r\n                            <span className=\"ant-form-text\">{this.state.data.seats}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"电话\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"公告\">\r\n                            <span className=\"ant-form-text\">{this.state.data.notice}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"营业时间\">\r\n                            <span className=\"ant-form-text\">{this.state.data.businesshour}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { Upload, Icon, Modal } from 'antd';\nimport { reqImgDelete } from '../../api/index';\n\nclass Avatar extends React.Component {\n    state = {\n        previewVisible: false,\n        previewImage: '',\n        fileList: [],\n    };\n    UNSAFE_componentWillMount = () => {\n        console.log(this.props);\n        let fileList = [];\n        fileList.push({\n            uid: -1,\n            name: this.props.img,\n            status: 'done',\n            url: '/upload/'+this.props.img\n        });\n        this.setState({fileList: fileList})\n    };\n    getBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n    };\n    handleCancel = () => this.setState({ previewVisible: false });\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await this.getBase64(file.originFileObj);\n        }\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true,\n        });\n    };\n    handleChange = async ({ file, fileList }) => {\n        if(file.status === 'done'){\n            let response = file.response;\n            file = fileList[fileList.length-1];\n            file.name = response.data.name;\n            file.url = response.data.url;\n        } else if(file.status === 'removed'){\n            let response = await reqImgDelete(file.name);\n            if(response.status === 0){\n                let fileIndex = 0;\n                fileList.forEach((item, index) => {\n                    if(item.name === file.name){\n                        fileIndex = index\n                    }\n                });\n                fileList.splice(fileIndex, 1);\n            }\n        }\n        let urls = fileList.map(item => {\n            return item.url;\n        });\n        this.props.onChange(urls.join(','));\n        this.setState({ fileList })\n    };\n    render() {\n        const uploadButton = (\n            <div>\n                <Icon type=\"plus\" />\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n        return (\n            <div className=\"clearfix\">\n                <Upload\n                    action=\"/file/upload\"\n                    accept=\"image/*\"\n                    name=\"image\"\n                    listType=\"picture-card\"\n                    fileList={this.state.fileList}\n                    onPreview={this.handlePreview}\n                    onChange={this.handleChange}\n                >\n                    {this.state.fileList.length >= 1 ? null : uploadButton}\n                </Upload>\n                <Modal visible={this.state.previewVisible} footer={null} onCancel={this.handleCancel}>\n                    <img alt=\"example\" style={{ width: '100%' }} src={this.state.previewImage} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Avatar;","import React from 'react';\nimport {Form, Input, Card, Button, message, InputNumber} from 'antd';\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\nimport TopNav from \"../../components/top-nav\";\nimport Avatar from '../../components/avatar';\nimport {reqShopInfo, updateShopInfo} from \"../../api\";\n\nconst EditHome = Form.create({ name: 'category-add' })(\n    class extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                data: []\n            }\n        }\n        componentWillMount = async () => {\n            const response = await reqShopInfo();\n            if(response.status === 0){\n                let data = response.data;\n                data.opentime = data.businesshour.split(' ~ ')[0];\n                data.closetime = data.businesshour.split(' ~ ')[1];\n                this.setState({\n                    data: data\n                });\n                console.log(data);\n            }\n        };\n        validateName = (rule, value, callback) =>{\n            if(!value){\n                callback(\"请输入品类名称\")\n            }else if(value.length>10){\n                callback(\"请输入少于10个字符\")\n            }else{\n                callback()\n            }\n        };\n        handleSubmit = (e) => {\n            e.preventDefault();\n            this.props.form.validateFields( async (err, values) => {\n                if(!err){\n                    let data = values;\n                    data.profile = data.profile.split('upload/')[1];\n                    data.businesshour = moment(data.opentime, 'HH:mm')._i + ' ~ ' + moment(data.closetime, 'HH:mm')._i;\n                    delete data.opentime;\n                    delete data.closetime;\n                    const response = await updateShopInfo(data);\n                    if(response.status === 0){\n                        message.success(\"更新成功,即将返回品类列表\", 2);\n                        this.timerID = setTimeout(()=>{\n                            this.props.history.push('/home')\n                        }, 2000);\n                    }\n                }\n            });\n        };\n        render() {\n            const formItemLayout = {\n                labelCol: {span: 8},\n                wrapperCol: {span: 10}\n            };\n            const form = this.props.form;\n            return (\n                <div>\n                    <TopNav nav={['首页', '编辑']} />\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑门店信息</span>}\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/home')}}>返回</Button>}\n                          style={{width: \"100%\", border: \"none\"}}\n                    >\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\n                                {form.getFieldDecorator('id', {\n                                    initialValue: this.state.data.id\n                                })(<Input/>)}\n                            </Form.Item>\n                            <Form.Item label=\"品牌名称：\">\n                                {form.getFieldDecorator('name', {\n                                    rules: [{required: true, validator: this.validateName }],\n                                    initialValue: this.state.data.name\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"头像：\">\n                                {form.getFieldDecorator('profile', {\n                                    rules: [{required: true}],\n                                    // initialValue: this.state.data.profile\n                                })(<Avatar img={this.state.data.profile} />)}\n                            </Form.Item>\n                            <Form.Item label=\"地址：\">\n                                {form.getFieldDecorator('address', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.address\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"桌数：\">\n                                {form.getFieldDecorator('seats', {\n                                    initialValue: this.state.data.seats\n                                })(<InputNumber />)}\n                            </Form.Item>\n                            <Form.Item label=\"电话：\">\n                                {form.getFieldDecorator('tel', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.tel\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"公告：\">\n                                {form.getFieldDecorator('notice', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.notice\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"营业时间：\">\n                                {form.getFieldDecorator('opentime', {\n                                    rules: [{required: true}],\n                                    initialValue: moment(this.state.data.opentime, 'HH:mm')\n                                })(<TimePicker format={'HH:mm'} />)}\n                            </Form.Item>\n                            <Form.Item label=\"打烊时间：\">\n                                {form.getFieldDecorator('closetime', {\n                                    rules: [{required: true}],\n                                    initialValue: moment(this.state.data.closetime, 'HH:mm')\n                                })(<TimePicker format={'HH:mm'} />)}\n                            </Form.Item>\n                            <Form.Item label=\"品牌故事：\">\n                                {form.getFieldDecorator('story', {\n                                    initialValue: this.state.data.story\n                                })(<Input.TextArea rows={10}/>)}\n                            </Form.Item>\n                            <Form.Item label=\"会员条款：\">\n                                {form.getFieldDecorator('treaty', {\n                                    initialValue: this.state.data.treaty\n                                })(<Input.TextArea rows={5}/>)}\n                            </Form.Item>\n                            <Form.Item>\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\n                            </Form.Item>\n                        </Form>\n                    </Card>\n                </div>\n            )\n        }\n    },\n);\n\nexport default EditHome;\n","import React from 'react';\r\nimport './index.less';\r\nimport {Spin} from 'antd';\r\n\r\nclass Loading extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <Spin size=\"large\" />\r\n                <span>Loading. . .</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport {Table, Divider, Switch, message, Input, Button, Modal, Icon} from 'antd';\r\nimport Loading from '../../components/loading';\r\nimport TopNav from '../../components/top-nav'\r\nimport {reqCategoryList, updateCategoryList, reqCategorySearch, reqCategoryDelete} from '../../api';\r\n\r\nclass Category extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqCategoryList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = (response) => {\r\n        this.setState({isLoading: true});\r\n        this.timerID = setTimeout(() => {\r\n            if(response.status===0){\r\n                let data = response.data.map((item, index) => {\r\n                    item.index = index;\r\n                    switch (item.level) {\r\n                        case 0: item.levelText = '一级'; break;\r\n                        case 1: item.levelText = '二级'; break;\r\n                        case 2: item.levelText = '三级'; break;\r\n                        case 3: item.levelText = '四级'; break;\r\n                        case 4: item.levelText = '五级'; break;\r\n                        case 5: item.levelText = '六级'; break;\r\n                        case 6: item.levelText = '七级'; break;\r\n                        case 7: item.levelText = '八级'; break;\r\n                        case 8: item.levelText = '九级'; break;\r\n                        case 9: item.levelText = '十级'; break;\r\n                        default: break\r\n                    }\r\n                    return item\r\n                });\r\n                this.setState({isLoading: false, data: data})\r\n            }else if(response.status===1){\r\n                message.error(response.msg);\r\n                this.setState({isLoading: false, data: null})\r\n            }\r\n        }, 300)\r\n    };\r\n    handleIsnavChange = async (record) =>{\r\n        const response = await updateCategoryList({id: record.id, isnav: 1-record.isnav});\r\n        let data = this.state.data;\r\n        if(response.status === 0){\r\n            data.forEach(item => item.isnav = item.id===record.id ? 1-item.isnav : item.isnav);\r\n            this.setState({\r\n                data: data\r\n            });\r\n        }else if(response.status === 1){\r\n            this.setState({\r\n                data: data\r\n            });\r\n            message.error(response.msg)\r\n        }\r\n    };\r\n    handleSearch = async (value) => {\r\n        const response = value===\"\" ? await reqCategoryList() : await reqCategorySearch(value);\r\n        this.refreshTable(response);\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除品类\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqCategoryDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleAdd = () => {this.props.history.push('/product/category/add')};\r\n    handleEdit = (record) => {\r\n        this.props.history.push({\r\n            pathname: '/product/category/edit',\r\n            state: {data: record}\r\n        })\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/product/category/view', state: {data: record}})\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '品类名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '排序',\r\n                dataIndex: 'levelText',\r\n                key: 'levelText',\r\n                sorter: (a, b) => a.level-b.level\r\n            },\r\n            {\r\n                title: '子项数量',\r\n                dataIndex: 'son',\r\n                key: 'son',\r\n                sorter: (a, b) => a.son-b.son\r\n            },\r\n            {\r\n                title: '是否显示',\r\n                dataIndex: 'isnav',\r\n                key: 'isnav',\r\n                render: (text, record) => <Switch\r\n                    size=\"small\"\r\n                    onClick={()=>this.handleIsnavChange(record)}\r\n                    defaultChecked={text === 1}/>,\r\n                filters: [{text: '已显示', value: 1}, {text: '未显示', value: 0}],\r\n                onFilter: (value, record) => value===record.isnav\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['商品管理', '商品分类']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\" style={{fontWeight: \"bold\"}} />新增品类</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询品类名称\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Switch, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { addCategoryList } from \"../../api\";\r\n\r\nconst AddCategory = Form.create({ name: 'category-add' })(\r\n    class extends React.Component {\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.level = Number(data.level);\r\n                    data.isnav = data.isnav ? 1 : 0;\r\n                    data.son = 0;\r\n                    const response = await addCategoryList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增成功,即将返回品类列表\", 2);\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/product/category')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['商品管理', '商品分类', '新增品类']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增商品品类</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product/category')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"名称：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"级别：\">\r\n                                {form.getFieldDecorator('level', {\r\n                                    rules: [{required: true}]\r\n                                })(\r\n                                    <Select>\r\n                                        <Select.Option key={0}>第一级</Select.Option>\r\n                                        <Select.Option key={1}>第二级</Select.Option>\r\n                                        <Select.Option key={2}>第三级</Select.Option>\r\n                                        <Select.Option key={3}>第四级</Select.Option>\r\n                                        <Select.Option key={4}>第五级</Select.Option>\r\n                                        <Select.Option key={5}>第六级</Select.Option>\r\n                                        <Select.Option key={6}>第七级</Select.Option>\r\n                                        <Select.Option key={7}>第八级</Select.Option>\r\n                                        <Select.Option key={9}>第九级</Select.Option>\r\n                                        <Select.Option key={10}>第十级</Select.Option>\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"是否显示\">\r\n                                {form.getFieldDecorator('isnav', {\r\n                                    rules: [{required: true}],\r\n                                    valuePropName: \"checked\",\r\n                                    initialValue: false\r\n                                })(<Switch />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddCategory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select, Switch} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { updateCategoryList } from \"../../api\";\r\n\r\nconst EditCategory = Form.create({ name: 'category-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = () => {\r\n            this.setState({\r\n                data: this.props.location.state.data\r\n            })\r\n        };\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data = this.props.location.state.data;\r\n                    data.name = values.name;\r\n                    data.level = values.level;\r\n                    data.isnav = values.isnav === true ? 1 : 0;\r\n                    data.note = values.note;\r\n                    delete data.index;\r\n                    delete data.levelText;\r\n                    const response = await updateCategoryList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"更新品类信息成功,即将返回品类列表页面\", 2);\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/product/category')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['商品管理', '商品分类', '编辑品类']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑商品品类</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product/category')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"名称：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                    initialValue: this.state.data.name\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"级别：\">\r\n                                {form.getFieldDecorator('level', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.level\r\n                                })(\r\n                                    <Select>\r\n                                        <Select.Option key={0} value={0}>一级</Select.Option>\r\n                                        <Select.Option key={1} value={1}>二级</Select.Option>\r\n                                        <Select.Option key={2} value={2}>三级</Select.Option>\r\n                                        <Select.Option key={3} value={3}>四级</Select.Option>\r\n                                        <Select.Option key={4} value={4}>五级</Select.Option>\r\n                                        <Select.Option key={5} value={5}>六级</Select.Option>\r\n                                        <Select.Option key={6} value={6}>七级</Select.Option>\r\n                                        <Select.Option key={7} value={7}>八级</Select.Option>\r\n                                        <Select.Option key={8} value={8}>九级</Select.Option>\r\n                                        <Select.Option key={9} value={9}>十级</Select.Option>\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"是否显示\">\r\n                                {form.getFieldDecorator('isnav', {\r\n                                    rules: [{required: true}],\r\n                                    valuePropName: \"checked\",\r\n                                    initialValue: this.state.data.isnav===1\r\n                                })(<Switch />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: this.state.data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditCategory;\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, Form} from \"antd\";\r\n\r\nclass ViewCategory extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        console.log(data);\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '商品分类', '品类详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看品类详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product/category')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"名称\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"级别\">\r\n                            <span className=\"ant-form-text\">{this.state.data.levelText}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"是否显示\">\r\n                            <span className=\"ant-form-text\">{this.state.data.isnav ? '是' : '否'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"子项数量\">\r\n                            <span className=\"ant-form-text\">{this.state.data.son}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCategory;\r\n\r\n\r\n","import React from 'react';\r\nimport './product.less';\r\nimport {Button, Divider, Switch, Table, Modal, Row, Col, Cascader, Tag, Select, Input, Icon} from 'antd';\r\nimport {reqCategoryList, reqProductList, reqProductDelete, updateProductList, reqProductSearch} from '../../api';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass Product extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isLoading: true,\r\n            data: [],\r\n            options1: [],\r\n            options2: [],\r\n            selectedRowKeys: [],\r\n            operation: \"\",\r\n            selectedCategory: [],\r\n            categoryFilters: [],\r\n            selectedType: ''\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqProductList();\r\n        if(response.status === 0) this.refreshTable(response.data)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID);\r\n    };\r\n    formRef = {};\r\n    rowSelection = {\r\n        onChange: (selectedRowKeys) => {\r\n            this.setState({selectedRowKeys: selectedRowKeys})\r\n        }\r\n    };\r\n    refreshTable = async (data) => {\r\n        const response = await reqCategoryList();\r\n        if(response.status===0){\r\n            let options1 = [\r\n                {\r\n                    value: 'onsale-1',\r\n                    label: '商品上架',\r\n                },\r\n                {\r\n                    value: 'onsale-0',\r\n                    label: '商品下架',\r\n                },\r\n                {\r\n                    value: 'recommend-1',\r\n                    label: '设为推荐',\r\n                },\r\n                {\r\n                    value: 'recommend-0',\r\n                    label: '取消推荐',\r\n                },\r\n                {\r\n                    value: 'isnew-1',\r\n                    label: '设为新品',\r\n                },\r\n                {\r\n                    value: 'isnew-0',\r\n                    label: '取消新品',\r\n                },\r\n                {\r\n                    value: 'delete',\r\n                    label: '删除商品',\r\n                }\r\n            ];\r\n            let options2 = [];\r\n            let categoryFilters = [];\r\n            response.data.forEach(item1 => {\r\n                options2.push({label: item1.name, value: item1.id});\r\n                data.map(item2 => {\r\n                    categoryFilters.indexOf(item1.name)===-1 ? categoryFilters.push(item1.name) : categoryFilters.push();\r\n                    if(item2.category === item1.id) item2.categoryName = item1.name;\r\n                    if(item2.category === 999) item2.categoryName = '未分类';\r\n                    return item2;\r\n                })\r\n            });\r\n            categoryFilters = categoryFilters.map(item => {\r\n                return {text: item, value: item}\r\n            });\r\n            categoryFilters.push({text: '未分类', value: '未分类'});\r\n            console.log(categoryFilters);\r\n            options1.push({\r\n                label: '移至',\r\n                value: 'move',\r\n                children: options2\r\n            });\r\n            this.setState({\r\n                isLoading: true,\r\n                options1: options1,\r\n                options2: options2,\r\n                categoryFilters: categoryFilters\r\n            });\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data\r\n                })\r\n            }, 300);\r\n        }\r\n    };\r\n    handleStateChange = async (record, string) =>{\r\n        let obj={id: record.id};\r\n        obj[string]=1-record[string];\r\n        const response = await updateProductList(obj);\r\n        let data = this.state.data;\r\n        if(response.status === 0){\r\n            data.forEach(item => item[string] = item.id===record.id ? 1-item[string] : item[string]);\r\n            this.setState({\r\n                data: data\r\n            });\r\n        }\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/product/add')\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/product/view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/product/edit', state: {data: record}})\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除商品\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                let data = [];\r\n                data.push(record.id);\r\n                const response = await reqProductDelete(data);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleSelectChange = (value) => {\r\n        this.setState({selectedType: value})\r\n    };\r\n    handleSearch = async (value) => {\r\n        let data = {\r\n            status: this.state.selectedType,\r\n            value: value\r\n        };\r\n        if(data.value===\"\" && data.status===\"\"){\r\n            const response = await reqProductList();\r\n            if(response.status === 0) this.refreshTable(response.data)\r\n        }else{\r\n            for(let key in data){\r\n                if(data.hasOwnProperty(key) && data[key].length !== 0){\r\n                    if(key === \"status\"){\r\n                        let arr = data.status.split('-');\r\n                        data[arr[0]] = Number(arr[1])\r\n                    }else{\r\n                        data[key] = typeof(data[key])===\"object\" ? data[key][0] : data[key]\r\n                    }\r\n                }\r\n            }\r\n            const response = await reqProductSearch(data);\r\n            if(response.status === 0) this.refreshTable(response.data)\r\n        }\r\n    };\r\n    handleCascaderChange = (value) => {\r\n        this.setState({operation: value})\r\n    };\r\n    handleOperate = async () => {\r\n        let operation = this.state.operation;\r\n        if(operation.length === 0){\r\n            this.setState({selectedRowKeys: []});\r\n            this.refreshTable(this.state.data)\r\n        }else if(operation.length === 1){\r\n            if(operation[0] === 'delete'){\r\n                const response1 = reqProductDelete(this.state.selectedRowKeys);\r\n                if(response1.status === 0){\r\n                    const response2 = await reqProductList();\r\n                    if(response2.status === 0){\r\n                        let data = response2.data;\r\n                        data.forEach(item1 => {\r\n                            this.state.options2.forEach(item2 => {\r\n                                if(item1.category === item2.value){\r\n                                    item1.categoryName = item2.label\r\n                                }\r\n                            })\r\n                        });\r\n                        this.timerID = setTimeout(() => {\r\n                            this.formRef1.props.form.resetFields();\r\n                            this.refreshTable(data)\r\n                        }, 500)\r\n                    }\r\n                }\r\n            }else if(operation[0] === 'move'){\r\n                this.formRef1.props.form.resetFields();\r\n                this.refreshTable(this.state.data)\r\n            }else{\r\n                let data = {};\r\n                let arr = operation[0].split('-');\r\n                data.id = this.state.selectedRowKeys;\r\n                data[arr[0]] = Number(arr[1]);\r\n                const response1 = await updateProductList(data);\r\n                if(response1.status === 0){\r\n                    const response2 = await reqProductList();\r\n                    if(response2.status === 0){\r\n                        let data = response2.data;\r\n                        data.forEach(item1 => {\r\n                            this.state.options2.forEach(item2 => {\r\n                                if(item1.category === item2.value){\r\n                                    item1.categoryName = item2.label\r\n                                }\r\n                            })\r\n                        });\r\n                        this.timerID = setTimeout(() => {\r\n                            this.refreshTable(data)\r\n                        }, 500)\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            let data = {};\r\n            data.id = this.state.selectedRowKeys;\r\n            data.category = operation[1];\r\n            const response1 = await updateProductList(data);\r\n            if(response1.status === 0){\r\n                const response2 = await reqProductList();\r\n                if(response2.status === 0){\r\n                    let data = response2.data;\r\n                    data.forEach(item1 => {\r\n                        this.state.options2.forEach(item2 => {\r\n                            if(item1.category === item2.value){\r\n                                item1.categoryName = item2.label\r\n                            }\r\n                        })\r\n                    });\r\n                    this.refreshTable(data)\r\n                }\r\n            }\r\n        }\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '货号',\r\n                key: 'number',\r\n                dataIndex: 'number'\r\n            },\r\n            {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleView(record)}>\r\n                        {text}\r\n                        {record.category === 999 ? <Tag size=\"small\" color=\"red\">未分类</Tag> : null}\r\n                    </Button>\r\n                )\r\n            },\r\n            {\r\n                title: '分类',\r\n                key: 'categoryName',\r\n                dataIndex: 'categoryName',\r\n                render: (text, record) => <span>{record.category === 999 ? \"未设置分类\" : text}</span>,\r\n                filters: this.state.categoryFilters,\r\n                onFilter: (value, record) => value===record.categoryName\r\n            },\r\n            {\r\n                title: '售价',\r\n                key: 'price',\r\n                dataIndex: 'price',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.price - b.price\r\n            },\r\n            {\r\n                title: '销量/周',\r\n                key: 'sales',\r\n                dataIndex: 'sales',\r\n                render: (text, record) => <span>{record.category === 999 ? '/' : text+record.unit}</span>,\r\n                sorter: (a, b) => a.sales - b.sales\r\n            },\r\n            {\r\n                title: '状态',\r\n                key: 'status',\r\n                render: (record) => record.category === 999 ? <span>/</span> : (\r\n                    <span>\r\n                        <span>上架：</span>\r\n                        <Switch size=\"small\"\r\n                                defaultChecked={record.onsale === 1}\r\n                                onClick={()=>this.handleStateChange(record, \"onsale\")}\r\n                        /><br/>\r\n                        <span>新品：</span>\r\n                        <Switch size=\"small\"\r\n                                style={{marginTop: \"5px\"}}\r\n                                defaultChecked={record.isnew === 1}\r\n                                onClick={()=>this.handleStateChange(record, \"isnew\")}\r\n                        /><br/>\r\n                        <span>推荐：</span>\r\n                        <Switch size=\"small\"\r\n                                style={{marginTop: \"5px\"}}\r\n                                defaultChecked={record.recommend === 1}\r\n                                onClick={()=>this.handleStateChange(record, \"recommend\")}\r\n                        />\r\n                    </span>\r\n                )\r\n            },\r\n            // {\r\n            //     title: '上架',\r\n            //     key: 'onsale',\r\n            //     dataIndex: 'onsale',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"onsale\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            // {\r\n            //     title: '新品',\r\n            //     key: 'isnew',\r\n            //     dataIndex: 'isnew',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"isnew\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            // {\r\n            //     title: '推荐',\r\n            //     key: 'recommend',\r\n            //     dataIndex: 'recommend',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"recommend\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                        <Button size=\"small\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\" />\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"product-container\">\r\n                <TopNav nav={['商品管理', '商品列表']}/>\r\n                <div className=\"product-header\">\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <Button type=\"primary\" onClick={()=>this.handleAdd()}><Icon type=\"plus\" style={{fontWeight: \"bold\"}} />新增商品</Button>\r\n                            \r\n                        </Col>\r\n                        <Col span={6} style={{marginTop: \"-1px\"}}>\r\n                            <Cascader style={{width: \"120px\", marginRight: \"15px\"}}\r\n                                      placeholder=\"批量操作\"\r\n                                      options={this.state.options1}\r\n                                      onChange={this.handleCascaderChange}/>\r\n                            <Button type=\"primary\" onClick={this.handleOperate}>确认</Button>\r\n                        </Col>\r\n                        <Col span={10} style={{textAlign:\"right\"}}>\r\n                            <Select\r\n                                style={{width: \"110px\", textAlign: \"left\"}}\r\n                                placeholder=\"选择状态\"\r\n                                onChange={this.handleSelectChange}\r\n                            >\r\n                                <Select.Option value=\"\">全部</Select.Option>\r\n                                <Select.Option value=\"onsale-1\">已上架</Select.Option>\r\n                                <Select.Option value=\"onsale-0\">未上架</Select.Option>\r\n                                <Select.Option value=\"isnew-1\">新品</Select.Option>\r\n                                <Select.Option value=\"isnew-0\">非新品</Select.Option>\r\n                                <Select.Option value=\"recommend-1\">已推荐</Select.Option>\r\n                                <Select.Option value=\"recommend-0\">未推荐</Select.Option>\r\n                            </Select>\r\n                            <Input.Search\r\n                                placeholder=\"搜索商品名称/货号\"\r\n                                style={{width: \"200px\", float: \"right\", margin: \"0 15px \"}}\r\n                                onSearch={(value) => this.handleSearch(value)}\r\n                                enterButton\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            rowSelection={this.rowSelection}\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Product;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Upload, Icon, Modal } from 'antd';\r\nimport { reqImgDelete } from '../../api/index';\r\n\r\nclass PicturesWall extends React.Component {\r\n    state = {\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        fileList: [],\r\n    };\r\n    UNSAFE_componentWillMount = () => {\r\n        if(this.props.hasOwnProperty(\"imgs\")){\r\n            let urlArr = this.props.imgs.split(',');\r\n            let fileList = [];\r\n            urlArr.forEach((item, index) => {\r\n                fileList.push({\r\n                    uid: -1-index,\r\n                    name: item,\r\n                    status: 'done',\r\n                    url: '/upload/'+item\r\n                })\r\n            });\r\n            this.setState({fileList: fileList})\r\n        }\r\n    };\r\n    getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await this.getBase64(file.originFileObj);\r\n        }\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n        });\r\n    };\r\n    handleChange = async ({ file, fileList }) => {\r\n        if(file.status === 'done'){\r\n            let response = file.response;\r\n            file = fileList[fileList.length-1];\r\n            file.name = response.data.name;\r\n            file.url = response.data.url;\r\n        } else if(file.status === 'removed'){\r\n            await reqImgDelete(file.name);\r\n        }\r\n        let urls = fileList.map(item => {\r\n            return typeof(item.url) === 'string' ? item.url.split('upload/')[1] : item.url\r\n        });\r\n        this.props.onChange(urls.join(','));\r\n        this.setState({ fileList })\r\n    };\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"clearfix\">\r\n                <Upload\r\n                    action=\"/file/upload\"\r\n                    accept=\"image/*\"\r\n                    name=\"image\"\r\n                    listType=\"picture-card\"\r\n                    fileList={this.state.fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {this.state.fileList.length >= 6 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal visible={this.state.previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={this.state.previewImage} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PicturesWall;","import React from 'react';\r\nimport { Form, Select, InputNumber, Button, Checkbox, Row, Col, Card, Input, message } from 'antd';\r\nimport TopNav from '../../components/top-nav';\r\nimport PictureWall from '../../components/picture-wall/picture-wall';\r\nimport { addProductList, reqCategoryList } from '../../api';\r\n\r\nclass AddProduct extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            category_options: [],\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqCategoryList();\r\n        if(response.status === 0){\r\n            let options = [];\r\n            response.data.forEach((item) => {\r\n                options.push({key: item.name, value: item.id})\r\n            });\r\n            this.setState({category_options: options})\r\n        }\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    validateNumber = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品货号\")\r\n        }else if(value.length<5 || value.length>10){\r\n            callback(\"请输入少于5个，且不多于10个字符\")\r\n        }else if((/^[0-9a-zA-Z]*$/g).test(value)){\r\n            callback(\"请输入字母、数字或其组合\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateName = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入名称\")\r\n        }else if(value.length<2 || value.length>10){\r\n            callback(\"请输入不少于2个，且不超过10个字符\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validatePrice = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品价格\")\r\n        }else if(value<0){\r\n            callback(\"请按正确格式输入商品价格\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUnit = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品单位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateNoteProduct = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入产品备注\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntegral = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品积分值\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceTitle = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页标题\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceContent =(rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页内容\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                values.category = Number(values.category);\r\n                values.price = Number(values.price);\r\n                values.integral = Number(values.integral);\r\n                values.onsale = values.state.indexOf('onsale')===-1 ? 0 : 1;\r\n                values.isnew = values.state.indexOf('isnew')===-1 ? 0 : 1;\r\n                values.recommend = values.state.indexOf('recommend')===-1 ? 0 : 1;\r\n                values.deleted = 0;\r\n                delete values.state;\r\n                const response = await addProductList(values);\r\n                if(response.status === 0){\r\n                    message.success(response.msg+\",即将返回商品列表\", 2);\r\n                    this.timerID = setTimeout(()=>{\r\n                        this.props.history.replace('/product')\r\n                    }, 2000);\r\n                }\r\n            }else{\r\n                console.log(err)\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        const {form} = this.props;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '添加商品']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product')}}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            { form.getFieldDecorator('number', {\r\n                                rules: [{required: true, message: \"请输入商品货号\", validate: this.validateNumber}]\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            { form.getFieldDecorator('name', {\r\n                                rules: [{required: true, message: \"请输入商品名称\", validate: this.validateName}]\r\n                            })(<Input placeholder=\"请输入商品名称\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            { form.getFieldDecorator('category', {\r\n                                rules: [{ required: true, message: '请选择所属分类' }],\r\n                            })(\r\n                                <Select onChange={this.handleChange} placeholder=\"请选择所属分类\">\r\n                                    { this.state.category_options.map((item) => {\r\n                                        return <Select.Option key={item.value}>{item.key}</Select.Option>\r\n                                    })}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\" hasFeedback>\r\n                            { form.getFieldDecorator('price', {\r\n                                rules: [{required: true, message: \"请输入商品售价\",validate: this.validatePrice}]\r\n                            })(<Input addonAfter=\"元 &nbsp;&nbsp;&nbsp;\" placeholder=\"请输入商品售价\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            { form.getFieldDecorator('unit', {\r\n                                rules: [{required: true, message: \"请输入商品计量单位\", validate: this.validateUnit}]\r\n                            })(<Input placeholder=\"请输入商品计量单位\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品状态\">\r\n                            {form.getFieldDecorator('state', {\r\n                                initialValue: ['isNew'],\r\n                            })(\r\n                                <Checkbox.Group style={{ width: '100%', margin: \"10px 0 0 20px\"}}>\r\n                                    <Row>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"onsale\">上架</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"isnew\">新品</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"recommend\">推荐</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Checkbox.Group>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            { form.getFieldDecorator('integral', {\r\n                                rules: [{required: true, message: \"请输入积分值\", validate: this.validateIntegral}]\r\n                            })(<Input placeholder=\"请输入积分值\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"简介\">\r\n                            { form.getFieldDecorator('introduce', {\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入商品简介\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠提示\">\r\n                            { form.getFieldDecorator('tip', {\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入优惠提示\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品描述\">\r\n                            { form.getFieldDecorator('description', {\r\n                                rule: [{validate: this.validateIntroduceContent}]\r\n                            })(<Input.TextArea rows={4} placeholder=\"请输入商品描述\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣：\">\r\n                            {form.getFieldDecorator('discount_gold', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"白金会员折扣\">\r\n                            {form.getFieldDecorator('discount_platinum', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"钻石会员折扣\">\r\n                            {form.getFieldDecorator('discount_diamond', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"上传图片\">\r\n                            {form.getFieldDecorator('pictures', {\r\n                                rules: [{required: true, message: \"请上传商品图片\"}]\r\n                            })(<PictureWall/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品备注\">\r\n                            { form.getFieldDecorator('note')(\r\n                                <Input.TextArea rows={4} />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button style={{margin: \"50px 0 0 450px\"}} type=\"primary\" htmlType=\"submit\">完成，提交商品</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n    \r\n            \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'add-product-form' })(AddProduct);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Form, Select, InputNumber, Button, Checkbox, Row, Col, Card, Input, message } from 'antd';\r\nimport TopNav from '../../components/top-nav';\r\nimport PictureWall from '../../components/picture-wall/picture-wall';\r\nimport { updateProductList, reqCategoryList } from '../../api';\r\n\r\nclass EditProduct extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            categoryOptions: [],\r\n            data: []\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        data.state = [];\r\n        data.onsale===1 ? data.state.push(\"onsale\") : data.state.push();\r\n        data.isnew===1 ? data.state.push(\"isnew\") : data.state.push();\r\n        data.recommend===1 ? data.state.push(\"recommend\") : data.state.push();\r\n        this.setState({data: data});\r\n        const response = await reqCategoryList();\r\n        if(response.status === 0){\r\n            let options = [];\r\n            response.data.forEach((item) => {\r\n                options.push({key: item.name, value: item.id})\r\n            });\r\n            this.setState({categoryOptions: options});\r\n            console.log(data);\r\n            console.log(options);\r\n        }\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    validateNumber = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品货号\")\r\n        }else if(value.length<5 || value.length>10){\r\n            callback(\"请输入少于5个，且不多于10个字符\")\r\n        }else if((/^[0-9a-zA-Z]*$/g).test(value)){\r\n            callback(\"请输入字母、数字或其组合\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateName = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入名称\")\r\n        }else if(value.length<2 || value.length>10){\r\n            callback(\"请输入不少于2个，且不超过10个字符\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validatePrice = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品价格\")\r\n        }else if(value<0){\r\n            callback(\"请按正确格式输入商品价格\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUnit = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品单位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateNoteProduct = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入产品备注\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntegral = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品积分值\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceTitle = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页标题\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceContent =(rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页内容\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                values.category = Number(values.category);\r\n                values.price = Number(values.price);\r\n                values.integral = Number(values.integral);\r\n                values.onsale = values.state.indexOf('onsale')===-1 ? 0 : 1;\r\n                values.isnew = values.state.indexOf('isnew')===-1 ? 0 : 1;\r\n                values.recommend = values.state.indexOf('recommend')===-1 ? 0 : 1;\r\n                delete values.state;\r\n                const response = await updateProductList(values);\r\n                if(response.status === 0){\r\n                    message.success(\"更新商品信息成功,即将返回商品列表页面\");\r\n                    this.timerID = setTimeout(()=>{\r\n                        this.props.history.replace('/product')\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        const {form} = this.props;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '商品列表', '编辑商品']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product')}}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"商品ID\" hasFeedback style={{display: \"none\"}}>\r\n                            { form.getFieldDecorator('id', {\r\n                                initialValue: this.state.data.id\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            { form.getFieldDecorator('number', {\r\n                                initialValue: this.state.data.number,\r\n                                rules: [{required: true, message: \"请输入商品货号\", validate: this.validateNumber}]\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            { form.getFieldDecorator('name', {\r\n                                initialValue: this.state.data.name,\r\n                                rules: [{required: true, message: \"请输入商品名称\", validate: this.validateName}]\r\n                            })(<Input placeholder=\"请输入商品名称\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            { form.getFieldDecorator('category', {\r\n                                initialValue: this.state.data.category,\r\n                                rules: [{ required: true, message: '请选择所属分类' }],\r\n                            })(\r\n                                <Select onChange={this.handleChange}>\r\n                                    { this.state.categoryOptions.map((item) => {\r\n                                        return <Select.Option key={item.value} value={item.value}>{item.key}</Select.Option>\r\n                                    })}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\" hasFeedback>\r\n                            { form.getFieldDecorator('price', {\r\n                                initialValue: this.state.data.price,\r\n                                rules: [{required: true, message: \"请输入商品售价\"}]\r\n                            })(<Input addonAfter=\"元 &nbsp;&nbsp;&nbsp;\" placeholder=\"请输入商品售价\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            { form.getFieldDecorator('unit', {\r\n                                initialValue: this.state.data.unit,\r\n                                rules: [{required: true, message: \"请输入商品计量单位\", validate: this.validateUnit}]\r\n                            })(<Input placeholder=\"请输入商品计量单位\"/>)}\r\n                        </Form.Item>\r\n                        {\r\n                            this.state.data.category === 999 ? null : (\r\n                                <Form.Item label=\"商品状态\">\r\n                                    {form.getFieldDecorator('state', {\r\n                                        initialValue: this.state.data.state,\r\n                                    })(\r\n                                        <Checkbox.Group style={{ width: '100%', margin: \"10px 0 0 20px\"}}>\r\n                                            <Row>\r\n                                                <Col span={8}>\r\n                                                    <Checkbox value=\"onsale\">上架</Checkbox>\r\n                                                </Col>\r\n                                                <Col span={8}>\r\n                                                    <Checkbox value=\"isnew\">新品</Checkbox>\r\n                                                </Col>\r\n                                                <Col span={8}>\r\n                                                    <Checkbox value=\"recommend\">推荐</Checkbox>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Checkbox.Group>,\r\n                                    )}\r\n                                </Form.Item>\r\n                            )\r\n                        }\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            { form.getFieldDecorator('integral', {\r\n                                initialValue: this.state.data.integral,\r\n                                rules: [{required: true, message: \"请输入积分值\"}]\r\n                            })(<Input placeholder=\"请输入积分值\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"简介\" hasFeedback>\r\n                            { form.getFieldDecorator('introduce', {\r\n                                initialValue: this.state.data.introduce,\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入简介\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠提示\" hasFeedback>\r\n                            { form.getFieldDecorator('tip', {\r\n                                initialValue: this.state.data.tip,\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入优惠提示\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品描述\" hasFeedback>\r\n                            { form.getFieldDecorator('description', {\r\n                                initialValue: this.state.data.description,\r\n                                rule: [{validate: this.validateIntroduceContent}]\r\n                            })(<Input.TextArea rows={4} placeholder=\"请输入商品描述\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣：\">\r\n                            {form.getFieldDecorator('discount_gold', {\r\n                                initialValue: this.state.data.discount_gold\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"白金会员折扣\">\r\n                            {form.getFieldDecorator('discount_platinum', {\r\n                                initialValue: this.state.data.discount_platinum\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"钻石会员折扣\">\r\n                            {form.getFieldDecorator('discount_diamond', {\r\n                                initialValue: this.state.data.discount_diamond\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"上传图片\">\r\n                            {form.getFieldDecorator('pictures', {\r\n                                initialValue: this.state.data.pictures\r\n                            })(<PictureWall imgs={this.state.data.pictures} />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品备注\" hasFeedback>\r\n                            { form.getFieldDecorator('note', {\r\n                                initialValue: this.state.data.note\r\n                            })(<Input.TextArea rows={4} />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button style={{margin: \"50px 0 0 450px\"}} type=\"primary\" htmlType=\"submit\">完成，提交商品</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'add-product-form' })(EditProduct);\r\n","import React from 'react';\r\nimport './product.less';\r\nimport {Form, Button, Card, Icon} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewProduct extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            data: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        console.log(data);\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        let stateYes = (string) => (<span><Icon type=\"check\" style={{color: \"#1DA57A\"}}/>{string}</span>);\r\n        let stateNo = (string) => (<span><Icon type=\"close\" style={{color: \"#1DA57A\"}}/>{string}</span>);\r\n        return (\r\n            <div className=\"product-view-container\">\r\n                <TopNav nav={['商品管理', '商品列表', '商品详情']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/product')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.number}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.category === 999 ? \"未设置分类\" : this.state.data.categoryName}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\">\r\n                            <span className=\"ant-form-text\">￥ {this.state.data.price.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.unit}</span>\r\n                        </Form.Item>\r\n                        {\r\n                            this.state.data.category === 999 ? null : (\r\n                                <Form.Item label=\"商品状态\">\r\n                            <span className=\"ant-form-text\" style={{marginLeft: \"-20px\"}}>\r\n                                {this.state.data.onsale ? stateYes(\"上架\") : stateNo(\"上架\")}\r\n                                {this.state.data.onsale ? stateYes(\"新品\") : stateNo(\"新品\")}\r\n                                {this.state.data.onsale ? stateYes(\"推荐\") : stateNo(\"推荐\")}\r\n                            </span>\r\n                                </Form.Item>\r\n                            )\r\n                        }\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"简介\">\r\n                            <span className=\"ant-form-text\">{this.state.data.introduce}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠提示\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tip}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品描述\">\r\n                            <span className=\"ant-form-text\">{this.state.data.description}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_gold===10 ? \"无\" : this.state.data.discount_gold+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_platinum===10 ? \"无\" : this.state.data.discount_platinum+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_diamond===10 ? \"无\" : this.state.data.discount_diamond+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品图片\">\r\n                            <span className=\"ant-form-pictures\">\r\n                                {\r\n                                    this.state.data.pictures===\"\" ? <span>无</span> :\r\n                                        this.state.data.pictures.split(\",\").map((item, index)=> {\r\n                                            return (<img key={index} src={'/upload/'+item} alt=\"商品图片\"/>)\r\n                                        })\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠信息备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({name:'product-add-form'})(ViewProduct);\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Input, Table, Button, Icon, Tag, Divider, Modal,  Select, DatePicker} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport {\r\n    reqOrderSearch,\r\n    reqProductList,\r\n    reqCustomerList,\r\n    reqOrderUpdate,\r\n    reqOrderList,\r\n    reqOrderRange\r\n} from '../../api/index';\r\nimport moment from \"moment\";\r\n\r\nclass Order extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            searching: false,\r\n            option: 0,\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqOrderList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentDidMount = () => {\r\n        this.timerID1 = setInterval(async () => {\r\n            if(!this.state.searching){\r\n                const response = await reqOrderList();\r\n                this.refreshTable(response)\r\n            }\r\n        }, 1000)\r\n    };\r\n    componentWillUnmount = () => {\r\n        this.setState = () => {};\r\n        clearInterval(this.timerID1);\r\n        clearTimeout(this.timerID2)\r\n    };\r\n    refreshTable = async (response1) => {\r\n        const response2 = await reqProductList();\r\n        const response3 = await reqCustomerList();\r\n        if(response1.status===0 && response2.status===0 && response3){\r\n            let data = response1.data.map(item1 => {\r\n                item1.commodity = JSON.parse(item1.commodity);\r\n                response3.data.forEach(item2 => {\r\n                    if(item1.customer === item2.id) item1.customer=item2\r\n                });\r\n                return item1\r\n            });\r\n            this.timerID2 = setTimeout(()=>{\r\n                this.setState({\r\n                    data: data.reverse(),\r\n                    isLoading: false\r\n                })\r\n            }, 100)\r\n            \r\n        }\r\n    };\r\n    handleSearch = async (id) => {\r\n        if(id){\r\n            const response = await reqOrderSearch(id);\r\n            this.setState({\r\n                searching: true,\r\n                isLoading: true\r\n            });\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({\r\n                searching: false,\r\n                isLoading: true\r\n            })\r\n        }\r\n    };\r\n    handleView = (record) => {\r\n        console.log(record);\r\n        this.props.history.push({pathname: '/order/view', state: {data : record}});\r\n    };\r\n    handleCustomerDetail = (record) => {\r\n        this.props.history.push({pathname: '/member/view', state: {data: record}})\r\n    };\r\n    handleCancel = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要取消订单(ID: \"+record.id+\")吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 3\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.map(item => {\r\n                        if(item.id === record.id) item.state = 3;\r\n                        return item\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleComplete = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要将订单(ID: \"+record.id+\")设置为完成状态吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 4\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.map(item => {\r\n                        if(item.id === record.id) item.state = 4;\r\n                        return item\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleSelectChange = (value) => {\r\n        this.setState({option: value});\r\n        if(value === 0){\r\n            this.setState({\r\n                searching: false,\r\n                isLoading: true\r\n            });\r\n            this.timerID2 = setTimeout(async () => {\r\n                const response = await reqOrderList();\r\n                this.refreshTable(response);\r\n                this.setState({isLoading: false})\r\n            }, 100)\r\n        }else{\r\n            this.setState({searching: true})\r\n        }\r\n    };\r\n    handleDatePickerChange = async (date, dateString) => {\r\n        if(dateString){\r\n            let start = new Date(dateString+\" 00:00:00\").getTime();\r\n            let end = new Date(dateString+\" 23:59:59\").getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    handleWeekPickerChange = async (week) => {\r\n        if(week){\r\n            let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n            let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n            start = new Date(start).getTime();\r\n            end = new Date(end).getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    handleMonthPickerChange = async (month) => {\r\n        if(month){\r\n            let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n            let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n            start = new Date(start).getTime();\r\n            end = new Date(end).getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    handleRangePickerChange = async (dates, dateStrings) => {\r\n        if(dateStrings[0] && dateStrings[1]){\r\n            let start = new Date(dateStrings[0]).getTime();\r\n            let end = new Date(dateStrings[1]).getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    render(){\r\n        const column = [\r\n            {\r\n                title: '订单ID',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text} [查看]</Button>\r\n            },\r\n            {\r\n                title: '顾客',\r\n                dataIndex: 'customer',\r\n                key: 'customer',\r\n                render: (text) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleCustomerDetail(text)}>\r\n                        {\r\n                            text.status===1 ? <span>{text.name} <Tag color=\"blue\">黄金</Tag></span> :\r\n                                text.status===2 ? <span>{text.name} <Tag color=\"green\">白金</Tag></span> :\r\n                                    text.status===3 ? <span>{text.name} <Tag color=\"red\">钻石</Tag></span> :\r\n                                        <span>{text.name}</span>\r\n                        }\r\n                    </Button>\r\n                ),\r\n                filters: [\r\n                    {text: \"黄金会员\", value: 1},\r\n                    {text: \"白金会员\", value: 2},\r\n                    {text: \"钻石会员\", value: 3},\r\n                    {text: \"普通顾客\", value: 0}\r\n                ],\r\n                onFilter: (value, record) => value === record.customer.status\r\n            },\r\n            {\r\n                title: '桌号',\r\n                dataIndex: 'seat',\r\n                key: 'seat',\r\n                render: (text) => <span>{text}号桌</span>,\r\n                sorter: (a, b) => a.seat - b.seat\r\n            },\r\n            {\r\n                title: '订单内容',\r\n                dataIndex: 'commodity',\r\n                key: 'commodity',\r\n                render: (text) => (\r\n                    <div>\r\n                        {\r\n                            text.map((item, index) => {\r\n                                return <div key={index}>{item.name}<Icon type=\"close\"/>{item.count}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n            {\r\n                title: '下单时间',\r\n                dataIndex: 'createtime',\r\n                key: 'createtime',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => a.createtime - b.createtime,\r\n                // filters: [\r\n                //     {text: \"今日\", value: 0},\r\n                //     {text: \"近一周\", value: 1},\r\n                //     {text: \"近一个月\", value: 2},\r\n                //     {text: \"近一季度\", value: 3}\r\n                // ],\r\n                // onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '支付金额',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                render: (text) => <span>￥{text}</span>,\r\n                sorter: (a, b) => a.amount - b.amount\r\n            },\r\n            {\r\n                title: '评价',\r\n                key: 'stars',\r\n                dataIndex: 'stars',\r\n                render: (text) => {\r\n                    if(text === 0){\r\n                        return <span>暂未评价</span>\r\n                    }else{\r\n                        let starArr=[];\r\n                        for(let i=0;i<text;i++){\r\n                            starArr.push(i)\r\n                        }\r\n                        return starArr.map((item) => {\r\n                            return <Icon key={item} type=\"star\" style={{color: \"yellow\"}} theme=\"filled\" />\r\n                        });\r\n                    }\r\n                },\r\n                sorter: (a, b) => a.stars - b.stars,\r\n                filters: [\r\n                    {text: \"未评价\", value: 0},\r\n                    {text: \"一星\", value: 1},\r\n                    {text: \"二星\", value: 2},\r\n                    {text: \"三星\", value: 3},\r\n                    {text: \"四星\", value: 4},\r\n                    {text: \"五星\", value: 5},\r\n                ],\r\n                onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (text, record) => text === 0 ? (\r\n                    <div>\r\n                        {\r\n                            record.urged === 0 ? '已付款' : <Tag color=\"red\">催单</Tag>\r\n                        }\r\n                    </div>\r\n                ) : text === 1 ? <Tag color=\"red\">请求取消</Tag> :\r\n                    text === 2 ? '已取消' :\r\n                        '已完成',\r\n                filters: [\r\n                    {text: \"已付款\", value: 0},\r\n                    {text: \"请求取消\", value: 1},\r\n                    {text: \"已取消\", value: 2},\r\n                    {text: \"已完成\", value: 3}\r\n                ],\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => record.state === 0 ? (\r\n                    <span>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleComplete(record)}>完成</Button>\r\n                    </span>\r\n                ) : record.state === 1 ? (\r\n                    <span>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleCancel(record)}>取消</Button>\r\n                    </span>\r\n                ) :  '/'\r\n            }\r\n        \r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['订单管理', '全部订单']} />\r\n                <div style={{margin: \"20px 22px 0 20px\", overflow: \"hidden\"}}>\r\n                    <div style={{display: \"inline-block\", width: \"70%\", textAlign: \"right\"}}>\r\n                        { this.state.option===0 ? null : this.getTimePicker()}\r\n                        <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                                style={{width: \"115px\", marginLeft: \"10px\"}}>\r\n                            <Select.Option value={0}>按顺序查看</Select.Option>\r\n                            <Select.Option value={1}>按日期查看</Select.Option>\r\n                            <Select.Option value={2}>按周次查看</Select.Option>\r\n                            <Select.Option value={3}>按月份查看</Select.Option>\r\n                            <Select.Option value={4}>自定义区间</Select.Option>\r\n                        </Select>\r\n                    </div>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"搜索订单ID\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={column}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n// import './order.less';\r\nimport {Form, Button, Card, Icon, Tag} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewOrder extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            data: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    getTime = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        return (\r\n            <div className=\"product-view-container\">\r\n                <TopNav nav={['订单管理', '订单详情']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看订单信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/order')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"订单ID\">\r\n                            <span className=\"ant-form-text\">{this.state.data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"顾客\">\r\n                            <span className=\"ant-form-text\">{this.state.data.customer.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"桌号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.seat}号</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"状态\">\r\n                            <span className=\"ant-form-text\" style={{textIndent: 0, marginLeft: \"20px\"}}>\r\n                                {\r\n                                    this.state.data.state === 0 ? (\r\n                                        <div>\r\n                                            {\r\n                                                this.state.data.urged === 0 ? <Tag color=\"blue\">已付款</Tag> : <Tag color=\"red\">催单</Tag>\r\n                                            }\r\n                                        </div>\r\n                                    ) : this.state.data.state === 1 ? <Tag color=\"red\">请求取消</Tag> :\r\n                                        this.state.data.state === 2 ? <Tag color=\"green\">已取消</Tag> :\r\n                                            <Tag color=\"green\">已完成</Tag>\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单列表\">\r\n                            <div className=\"ant-form-text\">\r\n                                {\r\n                                    this.state.data.commodity.map((item, index) => {\r\n                                        return <div key={index}>{item.name}<Icon type=\"close\"/> {item.count}</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"下单时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(this.state.data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单总金额\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.amount.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"实付金额\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.payment.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所获积分\">\r\n                            <span className=\"ant-form-text\">{this.state.data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"评价等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {\r\n                                    this.state.data.stars === 0 ? \"暂未评价\" : [1,2,3,4,5].map((item, index) => {\r\n                                        return (\r\n                                            <Icon key={index} type=\"star\" theme=\"filled\"\r\n                                                  style={{color: \"yellow\", marginLeft: \"5px\",\r\n                                                      display: item > this.state.data.stars ? \"none\" : \"inline\"}}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"评价文字\">\r\n                            <span className=\"ant-form-text\">\r\n                                {\r\n                                    this.state.data.stars === 0 ? \"暂未评价\" : this.state.data.evaluation\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({name:'product-add-form'})(ViewOrder);\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Input, Table, Button, Icon, Tag, Divider, Modal} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport {\r\n    reqOrderSearch,\r\n    reqProductList,\r\n    reqCustomerList,\r\n    reqOrderUpdate,\r\n    reqFrontdeskList\r\n} from '../../api/index';\r\n\r\nclass Stage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            searching: false\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqFrontdeskList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentDidMount = () => {\r\n        this.timerID1 = setInterval(async () => {\r\n            if(!this.state.searching){\r\n                const response = await reqFrontdeskList();\r\n                this.refreshTable(response)\r\n            }\r\n        }, 1000)\r\n    };\r\n    componentWillUnmount = () => {\r\n        this.setState = () => {};\r\n        clearInterval(this.timerID1);\r\n        clearTimeout(this.timerID2)\r\n    };\r\n    refreshTable = async (response1) => {\r\n        const response2 = await reqProductList();\r\n        const response3 = await reqCustomerList();\r\n        if(response1.status===0 && response2.status===0 && response3){\r\n            let data = response1.data.map(item1 => {\r\n                item1.commodity = JSON.parse(item1.commodity);\r\n                response3.data.forEach(item2 => {\r\n                    if(item1.customer === item2.id) item1.customer=item2\r\n                });\r\n                return item1\r\n            });\r\n            this.timerID2 = setTimeout(()=>{\r\n                this.setState({\r\n                    data: data.reverse(),\r\n                    isLoading: false\r\n                })\r\n            }, 100)\r\n            \r\n        }\r\n    };\r\n    handleSearch = async (id) => {\r\n        if(id){\r\n            const response = await reqOrderSearch(id);\r\n            this.setState({\r\n                searching: true,\r\n                isLoading: true\r\n            });\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({\r\n                searching: false,\r\n                isLoading: true\r\n            })\r\n        }\r\n    };\r\n    handleView = (record) => {\r\n        console.log(record);\r\n        this.props.history.push({pathname: '/order/stage/view', state: {data : record}});\r\n    };\r\n    handleCustomerDetail = (record) => {\r\n        this.props.history.push({pathname: '/member/view', state: {data: record}})\r\n    };\r\n    handleCancel = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要取消订单(ID: \"+record.id+\")吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 3\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.filter(item => {\r\n                        return item.id !== record.id\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleComplete = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要将订单(ID: \"+record.id+\")设置为完成状态吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 4\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.filter(item => {\r\n                        return item.id !== record.id\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    getTime = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const column = [\r\n            {\r\n                title: '订单ID',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text} [查看]</Button>\r\n            },\r\n            {\r\n                title: '顾客',\r\n                dataIndex: 'customer',\r\n                key: 'customer',\r\n                render: (text) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleCustomerDetail(text)}>\r\n                        {\r\n                            text.status===1 ? <span>{text.name} <Tag color=\"blue\">黄金</Tag></span> :\r\n                                text.status===2 ? <span>{text.name} <Tag color=\"green\">白金</Tag></span> :\r\n                                    text.status===3 ? <span>{text.name} <Tag color=\"red\">钻石</Tag></span> :\r\n                                        <span>{text.name}</span>\r\n                        }\r\n                    </Button>\r\n                ),\r\n                filters: [\r\n                    {text: \"黄金会员\", value: 1},\r\n                    {text: \"白金会员\", value: 2},\r\n                    {text: \"钻石会员\", value: 3},\r\n                    {text: \"普通顾客\", value: 0}\r\n                ],\r\n                onFilter: (value, record) => value === record.customer.status\r\n            },\r\n            {\r\n                title: '桌号',\r\n                dataIndex: 'seat',\r\n                key: 'seat',\r\n                render: (text) => <span>{text}号桌</span>,\r\n                sorter: (a, b) => a.seat - b.seat\r\n            },\r\n            {\r\n                title: '订单内容',\r\n                dataIndex: 'commodity',\r\n                key: 'commodity',\r\n                render: (text) => (\r\n                    <div>\r\n                        {\r\n                            text.map((item, index) => {\r\n                                return <div key={index}>{item.name}<Icon type=\"close\"/>{item.count}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n            {\r\n                title: '下单时间',\r\n                dataIndex: 'createtime',\r\n                key: 'createtime',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTime(text)}</span>,\r\n                sorter: (a, b) => a.createtime - b.createtime,\r\n                // filters: [\r\n                //     {text: \"今日\", value: 0},\r\n                //     {text: \"近一周\", value: 1},\r\n                //     {text: \"近一个月\", value: 2},\r\n                //     {text: \"近一季度\", value: 3}\r\n                // ],\r\n                // onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '支付金额',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                render: (text) => <span>￥{text}</span>,\r\n                sorter: (a, b) => a.amount - b.amount\r\n            },\r\n            {\r\n                title: '评价',\r\n                key: 'stars',\r\n                dataIndex: 'stars',\r\n                render: (text) => {\r\n                    if(text === 0){\r\n                        return <span>暂未评价</span>\r\n                    }else{\r\n                        let starArr=[];\r\n                        for(let i=0;i<text;i++){\r\n                            starArr.push(i)\r\n                        }\r\n                        return starArr.map((item) => {\r\n                            return <Icon key={item} type=\"star\" style={{color: \"yellow\"}} theme=\"filled\" />\r\n                        });\r\n                    }\r\n                },\r\n                sorter: (a, b) => a.stars - b.stars,\r\n                filters: [\r\n                    {text: \"未评价\", value: 0},\r\n                    {text: \"一星\", value: 1},\r\n                    {text: \"二星\", value: 2},\r\n                    {text: \"三星\", value: 3},\r\n                    {text: \"四星\", value: 4},\r\n                    {text: \"五星\", value: 5},\r\n                ],\r\n                onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (text, record) => text === 0 ? (\r\n                    <div>\r\n                        {\r\n                            record.urged === 0 ? <Tag color=\"blue\">已付款</Tag> : <Tag color=\"red\">催单</Tag>\r\n                        }\r\n                    </div>\r\n                ) : text === 1 ? <Tag color=\"red\">请求取消</Tag> :\r\n                    text === 2 ? <Tag color=\"green\">已取消</Tag> :\r\n                        <Tag color=\"green\">已完成</Tag>,\r\n                filters: [\r\n                    {text: \"已付款\", value: 0},\r\n                    {text: \"请求取消\", value: 1},\r\n                    {text: \"已取消\", value: 2},\r\n                    {text: \"已完成\", value: 3}\r\n                ],\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => record.state === 0 ? (\r\n                    <span>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleComplete(record)}>完成</Button>\r\n                    </span>\r\n                ) : record.state === 1 ? (\r\n                    <span>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleCancel(record)}>取消</Button>\r\n                    </span>\r\n                ) :  '/'\r\n            }\r\n        \r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['订单管理', '全部订单']} />\r\n                <div style={{margin: \"20px 22px 0 20px\", overflow: \"hidden\"}}>\r\n                    {/*<Button type=\"primary\" onClick={this.handleAdd}>新增订单</Button>*/}\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"搜索订单ID\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={column}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Button, Input, Table, Divider, Icon, Modal, Tag, message, Form} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport Loading from '../../components/loading/index';\r\nimport { reqMemberList, reqMemberSearch, reqMemberDelete, reqRuleUpdate } from '../../api/index';\r\n\r\nclass Member extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            visible: false,\r\n            rule: {}\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let response = await reqMemberList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = (response) => {\r\n        if(response.status === 0){\r\n            let data = response.data;\r\n            data = data.map(item => {\r\n                return item\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data,\r\n                })\r\n            }, 300)\r\n        }\r\n    };\r\n    handleSearch = async (value) => {\r\n        console.log(value);\r\n        const response = value===\"\" ? await reqMemberList() : await reqMemberSearch(value);\r\n        this.refreshTable(response)\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/member/add')\r\n    };\r\n    //会员设置\r\n    // handleSet = async () => {\r\n    //     const response = await reqRuleList();\r\n    //     if(response.status === 0){\r\n    //         this.setState({\r\n    //             visible: true,\r\n    //             rule: response.data[0]\r\n    //         })\r\n    //     }\r\n    // };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除会员\\\"\"+record.name+\"(ID:\"+record.id+\")\\\"吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                const response1 = await reqMemberDelete(record.id);\r\n                if(response1.status === 0){\r\n                    let data = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleDetail = (record) => {\r\n        this.props.history.push({pathname: '/member/view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/member/edit', state: { data: record}})\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if(!err){\r\n                const response = await reqRuleUpdate(values);\r\n                if(response.status === 0){\r\n                    this.setState({visible: false});\r\n                    this.timerID = setTimeout(()=>{\r\n                        message.success(\"设置成功\");\r\n                    }, 500)\r\n                }\r\n            }\r\n        })\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '会员ID',\r\n                key: 'id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '昵称/等级',\r\n                key: 'name',\r\n                dataIndex: 'name',\r\n                render: (text, record) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleDetail(record)}>\r\n                        {\r\n                            record.status===1 ? <span>{text} <Tag color=\"blue\">黄金</Tag></span> :\r\n                                record.status===2 ? <span>{text} <Tag color=\"green\">白金</Tag></span> :\r\n                                    record.status===3 ? <span>{text} <Tag color=\"red\">钻石</Tag></span> :\r\n                                        <span>{text}</span>\r\n                        }\r\n                    </Button>\r\n                ),\r\n                filters: [{text: '黄金会员', value: 1}, {text: '白金会员', value: 2}, {text: '钻石会员', value: 3}],\r\n                onFilter: (value, record) => value===record.status\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                key: 'createtime',\r\n                dataIndex: 'createtime',\r\n                render: (text) => <span>{this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => a.createtime-b.createtime,\r\n            },\r\n            {\r\n                title: '电话',\r\n                key: 'tel',\r\n                dataIndex: 'tel',\r\n                render: (text)=><span><Icon type=\"phone\" /> {text}</span>\r\n            },\r\n            {\r\n                title: '积分',\r\n                key: 'integral',\r\n                dataIndex: 'integral',\r\n                sorter: (a, b) => a.integral-b.integral\r\n            },\r\n            {\r\n                title: '订单数量',\r\n                key: 'orderSum',\r\n                render: (text, record) => <span>待完成</span>,\r\n                filters: [\r\n                    {\r\n                        text: '最近一周',\r\n                        value: '0',\r\n                    },\r\n                    {\r\n                        text: '最近一月',\r\n                        value: '1',\r\n                    },\r\n                    {\r\n                        text: '最近一年',\r\n                        value: '2'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '消费金额',\r\n                key: 'orderAmount',\r\n                render: (text, record) => <span>待完成</span>,\r\n                filters: [\r\n                    {\r\n                        text: '最近一周',\r\n                        value: '0',\r\n                    },\r\n                    {\r\n                        text: '最近一月',\r\n                        value: '1',\r\n                    },\r\n                    {\r\n                        text: '最近一年',\r\n                        value: '2'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={[\"会员管理\",\"会员列表\"]}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\" style={{fontWeight: \"bold\"}} />新增会员</Button>\r\n                    {/*会员设置*/}\r\n                    {/*<Button type=\"primary\" style={{marginLeft: \"40px\"}} onClick={this.handleSet}>会员设置</Button>*/}\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询会员ID/昵称\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey={record => record.id}\r\n                               bordered\r\n                        />\r\n                }\r\n                {/*<Modal*/}\r\n                {/*    visible={this.state.visible}*/}\r\n                {/*    title=\"会员设置\"*/}\r\n                {/*    onCancel={()=>{this.setState({visible: false})}}*/}\r\n                {/*    footer={null}*/}\r\n                {/*>*/}\r\n                {/*    <Form style={{overflow: \"hidden\"}} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }} onSubmit={this.handleSubmit}>*/}\r\n                {/*        <Form.Item label=\"ID\" style={{display: \"none\"}}>*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('id', {*/}\r\n                {/*                    initialValue: 1000*/}\r\n                {/*                })(<InputNumber/>)*/}\r\n                {/*            }*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        <Form.Item label=\"黄金会员\">*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('gold', {*/}\r\n                {/*                    initialValue: this.state.rule.gold || 0*/}\r\n                {/*                })(<InputNumber style={{width: \"150px\"}}/>)*/}\r\n                {/*            }*/}\r\n                {/*            <span style={{marginLeft: \"10px\"}}>积分</span>*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        <Form.Item label=\"白金会员\">*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('platinum', {*/}\r\n                {/*                    initialValue: this.state.rule.platinum || 0*/}\r\n                {/*                })(<InputNumber style={{width: \"150px\"}}/>)*/}\r\n                {/*            }*/}\r\n                {/*            <span style={{marginLeft: \"10px\"}}>积分</span>*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        <Form.Item label=\"钻石会员\">*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('diamond', {*/}\r\n                {/*                    initialValue: this.state.rule.diamond || 0*/}\r\n                {/*                })(<InputNumber style={{width: \"150px\"}}/>)*/}\r\n                {/*            }*/}\r\n                {/*            <span style={{marginLeft: \"10px\"}}>积分</span>*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        /!*<Button style={{float: \"right\", margin: \"20px 160px 0 30px\"}} type=\"primary\" htmlType=\"submit\">确定</Button>*!/*/}\r\n                {/*        <Popconfirm*/}\r\n                {/*            placement=\"topRight\"*/}\r\n                {/*            title=\"确定要更新会员设置吗？\"*/}\r\n                {/*            okType=\"danger\"*/}\r\n                {/*            onConfirm={this.handleSubmit}*/}\r\n                {/*            okText=\"确认\"*/}\r\n                {/*            cancelText=\"取消\"*/}\r\n                {/*        >*/}\r\n                {/*            <Button style={{float: \"right\", margin: \"20px 160px 0 30px\"}} type=\"primary\">设置</Button>*/}\r\n                {/*        </Popconfirm>*/}\r\n                {/*        <Button*/}\r\n                {/*            style={{float: \"right\", marginTop: \"20px\"}}*/}\r\n                {/*            type=\"primary\"*/}\r\n                {/*            onClick={()=>{this.setState({visible: false})}}*/}\r\n                {/*        >取消</Button>*/}\r\n                {/*    </Form>*/}\r\n                {/*</Modal>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(Member);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Card, Button, Input, message, Radio} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { reqMemberAdd } from '../../api/index'\r\n\r\nconst AddCustomer = Form.create({name: 'add-member-form'})(\r\n    class extends React.Component{\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields(async (err, values) => {\r\n                if(!err){\r\n                    let data = values;\r\n                    data.createtime = new Date().getTime();\r\n                    data.status = 1;\r\n                    data.integral = 0;\r\n                    data.orderid = '';\r\n                    data.deleted = 0;\r\n                    const response = await reqMemberAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增会员成功！即将返回会员列表页面\");\r\n                        this.timerID = setTimeout(() => {\r\n                            this.props.history.push('/member')\r\n                        }, 2000)\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['会员管理', '新增会员']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增会员信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/member')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"姓名\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('status', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: 1\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={1}>黄金会员</Radio.Button>\r\n                                            <Radio.Button value={2}>白金会员</Radio.Button>\r\n                                            <Radio.Button value={3}>钻石会员</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddCustomer;","import React from 'react';\r\nimport { Form, Card, Button, Input, message, InputNumber, Radio} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { updateMemberList } from '../../api/index'\r\n\r\nconst EditCustomer = Form.create({name: 'add-member-form'})(\r\n    class extends React.Component{\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields(async (err, values) => {\r\n                if(!err){\r\n                    let data = {};\r\n                    data.id = this.props.location.state.data.id;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key];\r\n                        }\r\n                    }\r\n                    const response = await updateMemberList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"编辑会员信息成功，即将返回会员列表页！\");\r\n                        this.timerID = setTimeout(() => {\r\n                            this.props.history.push('/member')\r\n                        }, 2000)\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const data = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['会员管理', '会员列表', '编辑会员']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑会员信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/member')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"姓名\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.name\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.tel\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('status', {\r\n                                        initialValue: data.status,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={1}>黄金</Radio.Button>\r\n                                            <Radio.Button value={2}>白金</Radio.Button>\r\n                                            <Radio.Button value={3}>钻石</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"积分\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('integral', {\r\n                                        initialValue: data.integral\r\n                                    })(<InputNumber style={{width: \"100px\"}} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: data.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditCustomer;","import React from 'react';\r\nimport './member.less';\r\nimport {Button, Card, Form, Tag} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewCustomer extends React.Component{\r\n    getTime = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        return <span>{time.getFullYear()+'-'+month+'-'+time.getDate()}&nbsp;&nbsp;{time.getHours()+':'+time.getMinutes()}</span>;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        let data = this.props.location.state.data;\r\n        return (\r\n            <div className=\"customer-view-container\">\r\n                <TopNav nav={['会员管理', '会员列表', '会员详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看会员详情</span>}\r\n                      extra={<Button onClick={()=>{this.props.history.push('/member')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"会员ID\">\r\n                            <span className=\"ant-form-text\">{data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"积分\">\r\n                            <span className=\"ant-form-text\">{data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span style={{marginLeft: \"20px\"}}>\r\n                                {\r\n                                    data.status===1 ? <Tag color=\"blue\">黄金</Tag> :\r\n                                        data.status===2 ? <Tag color=\"green\">白金</Tag> : <Tag color=\"red\">钻石</Tag>\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"创建时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{data.note ? data.note : '无'}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCustomer;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Divider, Icon, Input, Table, Tag, Modal} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport { reqEmployeeList, reqEmployeeDelete, reqEmployeeSearch } from '../../api/index';\r\n\r\nclass Employee extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            dutyFilter: [],\r\n            departmentFilter: []\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqEmployeeList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = (response) => {\r\n        if(response.status === 0){\r\n            let department = [], departmentFilter = [], duty = [], dutyFilter = [];\r\n            response.data.forEach(item => {\r\n                department.push(item.department);\r\n                duty.push(item.duty)\r\n            });\r\n            new Set(department).forEach(item => {\r\n                departmentFilter.push({text: item, value: item})\r\n            });\r\n            new Set(duty).forEach(item => {\r\n                dutyFilter.push({text: item, value: item})\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: response.data,\r\n                    departmentFilter: departmentFilter,\r\n                    dutyFilter: dutyFilter\r\n                })\r\n            })\r\n        }\r\n    };\r\n    handleSearch = async (value) => {\r\n        const response = value === \"\" ? await reqEmployeeList() : await reqEmployeeSearch(value);\r\n        this.refreshTable(response)\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除员工\\\"\"+record.name+\"(工号：\"+record.workid+\")\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqEmployeeDelete(record.workid);\r\n                if(response.status === 0){\r\n                    let data = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.workid===record.workid ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({data})\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        })\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push(\"/employee/add\")\r\n    };\r\n    handleView = (record) => {\r\n        console.log(record);\r\n        this.props.history.push({pathname: '/employee/view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/employee/edit', state: {data: record}})\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '工号',\r\n                key: 'workid',\r\n                dataIndex: 'workid',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '姓名',\r\n                key: 'name',\r\n                dataIndex: 'name'\r\n            },\r\n            {\r\n                title: '性别',\r\n                key: 'gender',\r\n                dataIndex: 'gender',\r\n                render: (text) => <span>{text === 0 ? '女' : '男'}</span>,\r\n                filters: [{text: '男', value: 1},{text: '女', value: 0}],\r\n                onFilter: (value, record) => value===record.gender\r\n            },\r\n            {\r\n                title: '年龄',\r\n                key: 'age',\r\n                dataIndex: 'age',\r\n                sorter: (a, b) => a.age-b.age\r\n            },\r\n            {\r\n                title: '电话',\r\n                key: 'tel',\r\n                dataIndex: 'tel',\r\n                render: (text)=><span><Icon type=\"phone\" /> {text}</span>\r\n            },\r\n            {\r\n                title: '工龄',\r\n                key: 'workage',\r\n                dataIndex: 'entrytime',\r\n                render: (text) => <span>{new Date().getFullYear()-new Date(text).getFullYear() || \"未满一年\"}</span>,\r\n                sorter: (a, b) => a.entrytime-b.entrytime\r\n            },\r\n            {\r\n                title: '部门',\r\n                key: 'department',\r\n                dataIndex: 'department',\r\n                filters: this.state.departmentFilter,\r\n                onFilter: (value, record) => value===record.department\r\n            },\r\n            {\r\n                title: '职责',\r\n                key: 'duty',\r\n                dataIndex: 'duty',\r\n                render: (text,record) => record.level===0 ? <span>{text} <Tag color=\"blue\">初级</Tag></span> :\r\n                    record.level===1 ? <span>{text} <Tag color=\"green\">中级</Tag></span> :\r\n                        <span>{text} <Tag color=\"red\">高级</Tag></span>,\r\n                filters: this.state.dutyFilter,\r\n                onFilter: (value, record) => value===record.duty\r\n            },\r\n            {\r\n                title: '月薪',\r\n                key: 'salary',\r\n                dataIndex: 'salary',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.salary-b.salary\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['人事管理', '员工列表']} />\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\" style={{fontWeight: \"bold\"}} />新增员工</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询工号/姓名\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading/> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey={record => record.workid}\r\n                               bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee;","import React from 'react';\r\nimport {Button, Card, Form, Input, Radio, InputNumber, Steps, DatePicker, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport Select from \"antd/es/select\";\r\nimport PicturesWall from \"../../components/picture-wall/picture-wall\";\r\nimport { addEmployeeList } from '../../api/index';\r\n\r\nconst AddEmployee = Form.create({name: 'add-employee-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                current: 0,\r\n                value1: {},\r\n                data: {},\r\n                key: 'tab1'\r\n            }\r\n        }\r\n        handleNext = () => {\r\n            let field = ['name','identity','gender','age','nation','birthday','origin','marriage','institution','degree','graduatetime'];\r\n            this.props.form.validateFields(field,(err,values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        current: current+1,\r\n                        data: data\r\n                    })\r\n                }\r\n            })\r\n        };\r\n        handlePrevious = () => {\r\n            let current = this.state.current;\r\n            this.setState({current: current-1})\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            let field = ['profile','workid','entrytime','department','duty','level','tel','address','salary','note'];\r\n            this.props.form.validateFields(field, async (err, values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    data.birthday = new Date(data.birthday).getTime();\r\n                    data.graduatetime = new Date(data.graduatetime).getTime();\r\n                    data.entrytime = new Date(data.entrytime).getTime();\r\n                    const response = await addEmployeeList(data);\r\n                    if(response.status === 0){\r\n                        this.setState({\r\n                            data: data,\r\n                            current: current+1\r\n                        });\r\n                        message.success(\"新增员工信息成功！\");\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        onTabChange = (key) => {\r\n            this.setState({ key: key });\r\n        };\r\n        getDateTime = (birthday) => {\r\n            let time = new Date(birthday);\r\n            let month = time.getMonth()+1;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            month = month>=10 ? month : \"0\"+month;\r\n            return time.getFullYear()+'-'+month+'-'+date;\r\n        };\r\n        getMonthTime = (date) => {\r\n            let time = new Date(date);\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            return time.getFullYear()+'-'+month;\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const contentList = {\r\n                tab1: (\r\n                    <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"身份证号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.identity}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"性别\">\r\n                            <span className=\"ant-form-text\">{this.state.data.gender===0 ? '女' : '男'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"年龄\">\r\n                            <span className=\"ant-form-text\">{this.state.data.age}岁</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"民族\">\r\n                            <span className=\"ant-form-text\">{this.state.data.nation}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"出生日期\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.birthday)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"籍贯\">\r\n                            <span className=\"ant-form-text\">{this.state.data.origin}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"婚姻状况\">\r\n                            <span className=\"ant-form-text\">{this.state.data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"学历\">\r\n                            <span className=\"ant-form-text\">{this.state.data.degree}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业院校\">\r\n                            <span className=\"ant-form-text\">{this.state.data.institution}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业时间\">\r\n                            <span className=\"ant-form-text\">{this.getMonthTime(this.state.data.graduatetime)}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                ),\r\n                tab2: (\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"工号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.workid}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"入职时间\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.entrytime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"部门\">\r\n                            <span className=\"ant-form-text\">{this.state.data.department}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"职责\">\r\n                            <span className=\"ant-form-text\">{this.state.data.duty}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.level===0 ? \"初级\" : this.state.data.level===1 ?  \"中级\" : \"高级\"}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"住址\">\r\n                            <span className=\"ant-form-text\">{this.state.data.address}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"月薪\">\r\n                            <span className=\"ant-form-text\">{this.state.data.salary} 元</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    !this.state.data.profile ? <span>无</span> :\r\n                                        <img src={'/upload/' + this.state.data.profile}\r\n                                             alt=\"员工照片\"\r\n                                             style={{\r\n                                                 width: \"100px\",\r\n                                                 height: \"100px\",\r\n                                                 padding: \"7px\",\r\n                                                 marginRight: \"10px\",\r\n                                                 borderRadius: \"5px\",\r\n                                                 border: \"1px solid lightgray\"}}\r\n                                        />\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n            };\r\n            const steps = [\r\n                {\r\n                    title: \"填写基本信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                            <Form.Item label=\"姓名\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"身份证号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('identity', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入身份证号码\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"性别\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('gender', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={1} style={{margin: \"0 20px\"}}>男</Radio>\r\n                                            <Radio value={0}>女</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"年龄\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('age', {\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber style={{width: \"150px\"}} />)\r\n                                }\r\n                                <span className=\"ant-form-text\">岁</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"民族\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('nation', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入民族\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"出生日期\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('birthday', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"籍贯\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('origin', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入籍贯\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            \r\n                            \r\n                            <Form.Item label=\"婚姻状况\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('marriage', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={0} style={{margin: \"0 20px\"}}>未婚</Radio>\r\n                                            <Radio value={1}>已婚</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"学历\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('degree', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select placeholder=\"请选择学历\" style={{width: \"187px\"}}>\r\n                                            <Select.Option value='博士'>博士</Select.Option>\r\n                                            <Select.Option value='硕士'>硕士</Select.Option>\r\n                                            <Select.Option value='本科'>本科</Select.Option>\r\n                                            <Select.Option value='高中'>高中</Select.Option>\r\n                                            <Select.Option value='初中'>初中</Select.Option>\r\n                                            <Select.Option value='小学'>小学</Select.Option>\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业院校\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('institution', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入毕业院校\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('graduatetime', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker.MonthPicker format='YYYY/MM' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\"\r\n                                        style={{margin: \"50px 0 0 450px\"}}\r\n                                        onClick={()=>this.handleNext(0)}>下一步</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"填写工作信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"工号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('workid', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入工号\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"入职时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('entrytime', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"部门\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('department', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input  placeholder=\"请输入工作部门\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"职责\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('duty', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入工作职责\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('level', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={0}>初 级</Radio.Button>\r\n                                            <Radio.Button value={1}>中 级</Radio.Button>\r\n                                            <Radio.Button value={2}>高 级</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"住址\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('address', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入住址\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"月薪\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('salary', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonAfter=\"元\" placeholder=\"请输入月薪\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"照片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('profile', {\r\n                                        rules: [{required: true}]\r\n                                    })(<PicturesWall />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input.Group style={{marginLeft: \"410px\"}}>\r\n                                    <Button type=\"primary\" style={{marginRight: \"50px\"}} onClick={()=>this.handlePrevious()}>上一步</Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">完成，确认提交</Button>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"提交成功\",\r\n                    content: (\r\n                        <Card\r\n                            style={{ width: \"80%\", margin: \"20px auto\"}}\r\n                            tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                            activeTabKey={this.state.key}\r\n                            onTabChange={key => {\r\n                                this.onTabChange(key);\r\n                            }}\r\n                        >\r\n                            {contentList[this.state.key]}\r\n                        </Card>\r\n                    )\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '员工列表', '新增员工']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增员工信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Steps current={this.state.current} style={{margin: \"40px auto\", width: \"550px\"}}>\r\n                            {\r\n                                steps.map((item, index) =>\r\n                                    <Steps.Step key={index} title={item.title}/>)\r\n                            }\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[this.state.current].content}</div>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddEmployee;","import React from \"react\";\r\nimport { Form, Card, Button } from \"antd\";\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewEmployee extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'tab1'\r\n        }\r\n    }\r\n    onTabChange = (key) => {\r\n        this.setState({key: key})\r\n    };\r\n    getDateTime = (birthday) => {\r\n        let time = new Date(birthday);\r\n        let month = time.getMonth()+1;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        month = month>=10 ? month : \"0\"+month;\r\n        return time.getFullYear()+'-'+month+'-'+date;\r\n    };\r\n    getMonthTime = (date) => {\r\n        let time = new Date(date);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        return time.getFullYear()+'-'+month;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        const data = this.props.location.state.data;\r\n        const contentList = {\r\n            tab1: (\r\n                <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                    <Form.Item label=\"姓名\">\r\n                        <span className=\"ant-form-text\">{data.name}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"身份证号\">\r\n                        <span className=\"ant-form-text\">{data.identity}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"性别\">\r\n                        <span className=\"ant-form-text\">{data.gender===0 ? '女' : '男'}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"年龄\">\r\n                        <span className=\"ant-form-text\">{data.age}岁</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"民族\">\r\n                        <span className=\"ant-form-text\">{data.nation}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"出生日期\">\r\n                        <span className=\"ant-form-text\">{this.getDateTime(data.birthday)}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"籍贯\">\r\n                        <span className=\"ant-form-text\">{data.origin}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"婚姻状况\">\r\n                        <span className=\"ant-form-text\">{data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"学历\">\r\n                        <span className=\"ant-form-text\">{data.degree}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"毕业院校\">\r\n                        <span className=\"ant-form-text\">{data.institution}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"毕业时间\">\r\n                        <span className=\"ant-form-text\">{this.getMonthTime(data.graduatetime)}</span>\r\n                    </Form.Item>\r\n                </Form>\r\n            ),\r\n            tab2: (\r\n                <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                    <Form.Item label=\"工号\">\r\n                        <span className=\"ant-form-text\">{data.workid}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"入职时间\">\r\n                        <span className=\"ant-form-text\">{this.getDateTime(data.entrytime)}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"部门\">\r\n                        <span className=\"ant-form-text\">{data.department}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"职责\">\r\n                        <span className=\"ant-form-text\">{data.duty}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"等级\">\r\n                        <span className=\"ant-form-text\">{data.level===0 ? \"初级\" : data.level===1 ?  \"中级\" : \"高级\"}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Tel\">\r\n                        <span className=\"ant-form-text\">{data.tel}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"住址\">\r\n                        <span className=\"ant-form-text\">{data.address}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"月薪\">\r\n                        <span className=\"ant-form-text\">{data.salary.toFixed(2)} 元</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"备注\">\r\n                        <span className=\"ant-form-text\">{ data.note ? data.note : '无'}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    data.profile===\"\" ? <span>无</span> :\r\n                                        data.profile.split(\",\").map((item, index)=> {\r\n                                            return (<img key={index}\r\n                                                         src={'/upload/'+item}\r\n                                                         alt=\"员工照片\"\r\n                                                         style={{width: \"100px\",\r\n                                                             height: \"100px\",\r\n                                                             padding: \"7px\",\r\n                                                             marginRight: \"10px\",\r\n                                                             borderRadius: \"5px\",\r\n                                                             border: \"1px solid lightgray\"}}\r\n                                                    />)\r\n                                        })\r\n                                }\r\n                            </span>\r\n                    </Form.Item>\r\n                </Form>\r\n            )\r\n        };\r\n        return (\r\n            <div className=\"employee-view-container\">\r\n                <TopNav nav={['人事管理', '员工列表', '员工详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看员工详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                      tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                      activeTabKey={this.state.key}\r\n                      onTabChange={key=>this.onTabChange(key)}\r\n                >\r\n                    {contentList[this.state.key]}\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEmployee;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, DatePicker, Form, Input, InputNumber, message, Radio, Steps} from \"antd\";\r\nimport { updateEmployeeList } from \"../../api\";\r\nimport Select from \"antd/es/select\";\r\nimport PicturesWall from \"../../components/picture-wall/picture-wall\";\r\nimport moment from 'moment';\r\n\r\nconst EditEmployee = Form.create({name: 'edit-employee-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                current: 0,\r\n                value1: {},\r\n                data: {},\r\n                key: 'tab1'\r\n            }\r\n        }\r\n        handleNext = () => {\r\n            let field = ['name','identity','gender','age','nation','birthday','origin','marriage','institution','degree','graduatetime'];\r\n            this.props.form.validateFields(field,(err,values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        current: current+1,\r\n                        data: data\r\n                    })\r\n                }\r\n            })\r\n        };\r\n        handlePrevious = () => {\r\n            let current = this.state.current;\r\n            this.setState({current: current-1})\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            let field = ['profile','workid','entrytime','department','duty','level','tel','address','salary','note'];\r\n            this.props.form.validateFields(field, async (err, values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    data.birthday = new Date(data.birthday).getTime();\r\n                    data.graduatetime = new Date(data.graduatetime).getTime();\r\n                    data.entrytime = new Date(data.entrytime).getTime();\r\n                    let updateData = {};\r\n                    updateData.workid = data.workid;\r\n                    for(let key in data){\r\n                        if(data.hasOwnProperty(key)){\r\n                            updateData[key] = data[key]\r\n                        }\r\n                    }\r\n                    const response = await updateEmployeeList(updateData);\r\n                    if(response.status === 0){\r\n                        this.setState({\r\n                            data: data,\r\n                            current: current+1\r\n                        });\r\n                        message.success(\"编辑员工信息成功！\");\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        onTabChange = (key) => {\r\n            this.setState({ key: key });\r\n        };\r\n        getDateTime = (birthday) => {\r\n            let time = new Date(birthday);\r\n            let month = time.getMonth()+1;\r\n            return time.getFullYear()+'-'+month+'-'+time.getDate();\r\n        };\r\n        getMonthTime = (date) => {\r\n            let time = new Date(date);\r\n            let month = time.getMonth()+1;\r\n            return time.getFullYear()+'-'+month;\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const data = this.props.location.state.data;\r\n            const contentList = {\r\n                tab1: (\r\n                    <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"身份证号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.identity}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"性别\">\r\n                            <span className=\"ant-form-text\">{this.state.data.gender===0 ? '女' : '男'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"年龄\">\r\n                            <span className=\"ant-form-text\">{this.state.data.age}岁</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"民族\">\r\n                            <span className=\"ant-form-text\">{this.state.data.nation}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"出生日期\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.birthday)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"籍贯\">\r\n                            <span className=\"ant-form-text\">{this.state.data.origin}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"婚姻状况\">\r\n                            <span className=\"ant-form-text\">{this.state.data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"学历\">\r\n                            <span className=\"ant-form-text\">{this.state.data.degree}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业院校\">\r\n                            <span className=\"ant-form-text\">{this.state.data.institution}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业时间\">\r\n                            <span className=\"ant-form-text\">{this.getMonthTime(this.state.data.graduatetime)}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                ),\r\n                tab2: (\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"工号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.workid}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"入职时间\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.entrytime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"部门\">\r\n                            <span className=\"ant-form-text\">{this.state.data.department}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"职责\">\r\n                            <span className=\"ant-form-text\">{this.state.data.duty}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.level===0 ? \"初级\" : this.state.data.level===1 ?  \"中级\" : \"高级\"}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"住址\">\r\n                            <span className=\"ant-form-text\">{this.state.data.address}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"月薪\">\r\n                            <span className=\"ant-form-text\">{this.state.data.salary} 元</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{ this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    !this.state.data.profile ? <span>无</span> :\r\n                                        <img src={'/upload/'+this.state.data.profile}\r\n                                             alt=\"员工照片\"\r\n                                             style={{\r\n                                                 width: \"100px\",\r\n                                                 height: \"100px\",\r\n                                                 padding: \"7px\",\r\n                                                 marginRight: \"10px\",\r\n                                                 borderRadius: \"5px\",\r\n                                                 border: \"1px solid lightgray\"}}\r\n                                        />\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n            };\r\n            const steps = [\r\n                {\r\n                    title: \"填写基本信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                            <Form.Item label=\"姓名\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.name\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"身份证号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('identity', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.identity\r\n                                    })(<Input placeholder=\"请输入身份证号码\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"性别\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('gender', {\r\n                                        initialValue: data.gender,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={1} style={{margin: \"0 20px\"}}>男</Radio>\r\n                                            <Radio value={0}>女</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"年龄\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('age', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.age\r\n                                    })(<InputNumber style={{width: \"150px\"}} />)\r\n                                }\r\n                                <span className=\"ant-form-text\">岁</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"民族\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('nation', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.nation\r\n                                    })(<Input placeholder=\"请输入民族\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"出生日期\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('birthday', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.birthday), \"YYYYMMDD\")\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"籍贯\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('origin', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.origin\r\n                                    })(<Input placeholder=\"请输入籍贯\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            \r\n                            \r\n                            <Form.Item label=\"婚姻状况\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('marriage', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.marriage\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={0} style={{margin: \"0 20px\"}}>未婚</Radio>\r\n                                            <Radio value={1}>已婚</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"学历\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('degree', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.degree\r\n                                    })(\r\n                                        <Select placeholder=\"请选择学历\" style={{width: \"187px\"}}>\r\n                                            <Select.Option value='博士'>博士</Select.Option>\r\n                                            <Select.Option value='硕士'>硕士</Select.Option>\r\n                                            <Select.Option value='本科'>本科</Select.Option>\r\n                                            <Select.Option value='高中'>高中</Select.Option>\r\n                                            <Select.Option value='初中'>初中</Select.Option>\r\n                                            <Select.Option value='小学'>小学</Select.Option>\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业院校\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('institution', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.institution\r\n                                    })(<Input placeholder=\"请输入毕业院校\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('graduatetime', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.graduatetime), \"YYYYMMDD\")\r\n                                    })(<DatePicker.MonthPicker format='YYYY/MM' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\"\r\n                                        style={{margin: \"50px 0 0 450px\"}}\r\n                                        onClick={()=>this.handleNext(0)}>下一步</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"填写工作信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"工号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('workid', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.workid\r\n                                    })(<Input placeholder=\"请输入工号\" disabled/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"入职时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('entrytime', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.entrytime), \"YYYY/MM/DD\")\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"部门\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('department', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.department\r\n                                    })(<Input  placeholder=\"请输入工作部门\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"职责\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('duty', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.duty\r\n                                    })(<Input placeholder=\"请输入工作职责\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('level', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.level\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={0}>初 级</Radio.Button>\r\n                                            <Radio.Button value={1}>中 级</Radio.Button>\r\n                                            <Radio.Button value={2}>高 级</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.tel\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"住址\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('address', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.address\r\n                                    })(<Input placeholder=\"请输入住址\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"月薪\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('salary', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.salary\r\n                                    })(<Input addonAfter=\"元\" placeholder=\"请输入月薪\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"照片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('profile', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.profile\r\n                                    })(<PicturesWall imgs={data.profile} />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: data.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input.Group style={{marginLeft: \"410px\"}}>\r\n                                    <Button type=\"primary\" style={{marginRight: \"50px\"}} onClick={()=>this.handlePrevious()}>上一步</Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">完成，确认提交</Button>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"提交成功\",\r\n                    content: (\r\n                        <Card\r\n                            style={{ width: \"80%\", margin: \"20px auto\"}}\r\n                            tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                            activeTabKey={this.state.key}\r\n                            onTabChange={key => {\r\n                                this.onTabChange(key);\r\n                            }}\r\n                        >\r\n                            {contentList[this.state.key]}\r\n                        </Card>\r\n                    )\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '员工列表', '编辑员工']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑员工信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Steps current={this.state.current} style={{margin: \"40px auto\", width: \"550px\"}}>\r\n                            {\r\n                                steps.map((item, index) =>\r\n                                    <Steps.Step key={index} title={item.title}/>)\r\n                            }\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[this.state.current].content}</div>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditEmployee;","import React from 'react';\r\nimport {Table, Divider, Button, Modal, Icon, Tag} from 'antd';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from '../../components/top-nav/index'\r\nimport {reqRoleList, reqUserList, reqRoleDelete} from '../../api/index';\r\n\r\nclass Role extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            viewVisible: false,\r\n            role: {},\r\n        }\r\n    };\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqRoleList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = async (response1) => {\r\n        const response2 = await reqUserList();\r\n        if(response1.status===0 && response2.status===0){\r\n            let data = response1.data.map((item1, index) => {\r\n                let roleUser = [];\r\n                item1.index = index;\r\n                response1.data.forEach(item3 => {\r\n                    if(item1.creater === item3.id) item1.createrRole = item3.name\r\n                });\r\n                response2.data.forEach(item2 => {\r\n                    if(item1.creater === item2.id) item1.createrName = item2.username;\r\n                    if(item1.id === item2.role) roleUser.push(item2.username)\r\n                });\r\n                item1.roleUser = roleUser;\r\n                let permission = [\r\n                    {\r\n                        title: \"订单管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"全部订单\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"前台管理\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"商品管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"商品分类\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"商品列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"添加商品\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"库存管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"库存信息\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"库存盘点\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"会员管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"会员列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"新增会员\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"人事管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"员工列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"用户列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"角色管理\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    }\r\n                ];\r\n                item1.permission.split('-').forEach(item3 => {\r\n                    switch (item3) {\r\n                        case '全部订单':\r\n                            permission[0].display = 1;\r\n                            permission[0].children[0].display = 1;\r\n                            break;\r\n                        case '前台管理':\r\n                            permission[0].display = 1;\r\n                            permission[0].children[1].display = 1;\r\n                            break;\r\n                        case '商品分类':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[0].display = 1;\r\n                            break;\r\n                        case '商品列表':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[1].display = 1;\r\n                            break;\r\n                        case '添加商品':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[2].display = 1;\r\n                            break;\r\n                        case '库存信息':\r\n                            permission[2].display = 1;\r\n                            permission[2].children[0].display = 1;\r\n                            break;\r\n                        case '库存盘点':\r\n                            permission[2].display = 1;\r\n                            permission[2].children[1].display = 1;\r\n                            break;\r\n                        case '会员列表':\r\n                            permission[3].display = 1;\r\n                            permission[3].children[0].display = 1;\r\n                            break;\r\n                        case '新增会员':\r\n                            permission[3].display = 1;\r\n                            permission[3].children[1].display = 1;\r\n                            break;\r\n                        case '员工列表':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[0].display = 1;\r\n                            break;\r\n                        case '用户列表':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[1].display = 1;\r\n                            break;\r\n                        case '角色管理':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[2].display = 1;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                });\r\n                item1.permission = permission;\r\n                return item1\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({isLoading: false, data: data})\r\n            }, 300)\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除角色\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqRoleDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleView = (record) => {\r\n        this.setState({\r\n            viewVisible: true,\r\n            role: record\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/employee/role/add')\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/employee/role/edit', state: {data: record}})\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                key: 'son',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => b.createtime - a.createtime\r\n            },\r\n            {\r\n                title: '创建人',\r\n                dataIndex: 'createrName',\r\n                key: 'createrName',\r\n                render: (text, record) => <span>{text} <Tag color=\"green\">{record.createrRole}</Tag></span>\r\n            },\r\n            {\r\n                title: '角色用户',\r\n                dataIndex: 'roleUser',\r\n                key: 'roleUser',\r\n                render: (text) => (\r\n                    <span>\r\n                        {\r\n                            text.length !== 0 ? text.map((item, index) => {\r\n                                return <div  key={index}><span>{item}</span></div>\r\n                            }) : '/'\r\n                        }\r\n                    </span>\r\n                )\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'note',\r\n                key: 'note',\r\n                render: (text) => <span>{text ? text : '/'}</span>\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['人事管理','角色管理']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\" style={{fontWeight: \"bold\"}} />新增角色</Button>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n                {/*查看角色详情*/}\r\n                <Modal\r\n                    title={<span>角色权限-{this.state.role.name}</span>}\r\n                    visible={this.state.viewVisible}\r\n                    onCancel={()=>{this.setState({viewVisible: false})}}\r\n                    footer={\r\n                        [<Button type=\"primary\" key=\"view-ok\" onClick={()=>this.setState({viewVisible: false})}>确认</Button>]\r\n                    }\r\n                >\r\n                    <div style={{marginLeft: \"100px\"}}>\r\n                        {\r\n                            this.state.role.permission ? this.state.role.permission.map((item1, index) => {\r\n                                return (\r\n                                    <div key={index}>\r\n                                        <div><Icon type=\"caret-down\" style={{color: \"#1DA57A\"}}/>{item1.title}</div>\r\n                                        {\r\n                                            item1.children.map((item2, index) => {\r\n                                                return item2.display===1 ? (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"check\" style={{color: \"#1DA57A\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                ) :  (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"close\" style={{color: \"#fa7f3e\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Role;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, Checkbox, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\nimport { reqRoleAdd } from '../../api/index';\r\n\r\nconst AddRole = Form.create({ name: 'role-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: [\r\n                    {\r\n                        title: \"全部订单\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"前台管理\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"商品分类\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"商品列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"添加商品\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"库存信息\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"库存盘点\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"会员列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"新增会员\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"员工列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"用户列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"角色管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入角色名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let arr = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.display===1 ? arr.push(item.title) : arr.push();\r\n                    });\r\n                    let data=values;\r\n                    data.createtime = new Date(data.createtime).getTime();\r\n                    data.creater = memoryUtils.user.id;\r\n                    data.permission = arr.join('-');\r\n                    data.deleted = 0;\r\n                    const response = await reqRoleAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增角色成功, 即将返回角色管理列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/role')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        handleChange = (e, temp) => {\r\n            let data = this.state.data;\r\n            if(typeof(temp)===\"object\"){\r\n                if(e.target.checked){\r\n                    temp.forEach(item => {\r\n                        data[item].display = 1\r\n                    })\r\n                }else{\r\n                    temp.forEach(item => {\r\n                        data[item].display = 0\r\n                    })\r\n                }\r\n            }else{\r\n                data[temp].display = 1 - data[temp].display\r\n            }\r\n            this.setState({data: data})\r\n        };\r\n        getTimeForm = () => {\r\n            let time = new Date();\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '角色管理', '新增角色']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增角色信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee/role')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"创建时间：\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTimeForm()\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建人：\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: memoryUtils.user.username\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色名：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"权限：\">\r\n                                {form.getFieldDecorator('permission', {\r\n                                    initialValue: \"perimission\",\r\n                                    rules: [{required: true}]\r\n                                })(<Input style={{display: \"none\"}} />)}\r\n                            </Form.Item>\r\n                            <div style={{margin: \"-53px 0 40px 340px\"}}>\r\n                                {/*订单管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [0, 1])}>订单管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 0)}\r\n                                        checked={this.state.data[0].display===1}\r\n                                    >全部订单</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 1)}\r\n                                        checked={this.state.data[1].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >前台订单</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [2, 3, 4])}>商品管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 2)}\r\n                                        checked={this.state.data[2].display===1}\r\n                                    >商品分类</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 3)}\r\n                                        checked={this.state.data[3].display===1}\r\n                                    >商品列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 4)}\r\n                                        checked={this.state.data[4].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >添加商品</Checkbox><br/>\r\n                                </div>\r\n                                {/*库存管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [5, 6])}>库存管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 5)}\r\n                                        checked={this.state.data[5].display===1}\r\n                                    >库存信息</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 6)}\r\n                                        checked={this.state.data[6].display===1}\r\n                                    >库存盘点</Checkbox><br/>\r\n                                </div>\r\n                                {/*会员管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [7, 8])}>会员管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 7)}\r\n                                        checked={this.state.data[7].display===1}\r\n                                    >会员列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 8)}\r\n                                        checked={this.state.data[8].display===1}\r\n                                    >新增会员</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [9, 10, 11])}>人事管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 9)}\r\n                                        checked={this.state.data[9].display===1}\r\n                                    >员工列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 10)}\r\n                                        checked={this.state.data[10].display===1}\r\n                                    >用户列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 11)}\r\n                                        checked={this.state.data[11].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >角色管理</Checkbox><br/>\r\n                                </div>\r\n                            </div>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddRole;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, Checkbox, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { reqRoleUpdate } from '../../api/index';\r\n\r\nconst EditRole = Form.create({ name: 'role-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = () => {\r\n            let data = this.props.location.state.data;\r\n            let permission = [];\r\n            data.permission.forEach(item => {\r\n                permission = permission.concat(item.children)\r\n            });\r\n            data.permission = permission;\r\n            this.setState({data: data.permission});\r\n        };\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let arr = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.display===1 ? arr.push(item.title) : arr.push();\r\n                    });\r\n                    let data=values;\r\n                    data.permission = arr.join('-');\r\n                    data.creater = this.props.location.state.data.creater;\r\n                    data.createtime = new Date(data.createtime).getTime();\r\n                    const response = await reqRoleUpdate(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"编辑角色成功, 即将返回角色管理页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/role')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        handleChange = (e, temp) => {\r\n            let data = this.state.data;\r\n            if(typeof(temp)===\"object\"){\r\n                if(e.target.checked){\r\n                    temp.forEach(item => {\r\n                        data[item].display = 1\r\n                    })\r\n                }else{\r\n                    temp.forEach(item => {\r\n                        data[item].display = 0\r\n                    })\r\n                }\r\n            }else{\r\n                data[temp].display = 1 - data[temp].display\r\n            }\r\n            this.setState({data: data})\r\n        };\r\n        getTimeForm = (time) => {\r\n            time = new Date(time);\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        getFatherChecked = (arr) => {\r\n            let checked = true;\r\n            arr.forEach(item => {\r\n                if(this.state.data[item].display === 0) checked = false\r\n            });\r\n            return checked\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            let data = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '角色管理', '编辑角色']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑角色信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee/role')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\r\n                                {form.getFieldDecorator('id', {\r\n                                    initialValue: data.id\r\n                                })(<Input/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建时间：\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTimeForm(data.createtime)\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建人：\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: data.createrName\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色名：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                    initialValue: data.name\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"权限：\">\r\n                                {form.getFieldDecorator('permission', {\r\n                                    initialValue: \"perimission\",\r\n                                    rules: [{required: true}]\r\n                                })(<Input style={{display: \"none\"}} />)}\r\n                            </Form.Item>\r\n                            <div style={{margin: \"-53px 0 40px 340px\"}}>\r\n                                {/*订单管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [0, 1])}\r\n                                    defaultChecked={this.getFatherChecked([0, 1])}\r\n                                >订单管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 0)}\r\n                                        checked={this.state.data[0].display===1}\r\n                                    >全部订单</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 1)}\r\n                                        checked={this.state.data[1].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >前台订单</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [2, 3, 4])}\r\n                                    defaultChecked={this.getFatherChecked([2, 3, 4])}\r\n                                >商品管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 2)}\r\n                                        checked={this.state.data[2].display===1}\r\n                                    >商品分类</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 3)}\r\n                                        checked={this.state.data[3].display===1}\r\n                                    >商品列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 4)}\r\n                                        checked={this.state.data[4].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >添加商品</Checkbox><br/>\r\n                                </div>\r\n                                {/*库存管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [5, 6])}\r\n                                    defaultChecked={this.getFatherChecked([5, 6])}\r\n                                >库存管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 5)}\r\n                                        checked={this.state.data[5].display===1}\r\n                                    >库存信息</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 6)}\r\n                                        checked={this.state.data[6].display===1}\r\n                                    >库存盘点</Checkbox><br/>\r\n                                </div>\r\n                                {/*会员管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [7, 8])}\r\n                                    defaultChecked={this.getFatherChecked([7, 8])}\r\n                                >会员管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 7)}\r\n                                        checked={this.state.data[7].display===1}\r\n                                    >会员列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 8)}\r\n                                        checked={this.state.data[8].display===1}\r\n                                    >新增会员</Checkbox><br/>\r\n                                </div>\r\n                                {/*人事管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [9, 10, 11])}\r\n                                    defaultChecked={this.getFatherChecked([9, 10, 11])}\r\n                                >人事管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 9)}\r\n                                        checked={this.state.data[9].display===1}\r\n                                    >员工列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 10)}\r\n                                        checked={this.state.data[10].display===1}\r\n                                    >用户列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 11)}\r\n                                        checked={this.state.data[11].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >角色管理</Checkbox><br/>\r\n                                </div>\r\n                            </div>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditRole;","import React from 'react';\r\nimport {Table, Divider, Button, Modal, Icon} from 'antd';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from '../../components/top-nav/index'\r\nimport {reqUserList, reqUserDelete, reqRoleList} from '../../api/index';\r\n\r\nclass User extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            visible: false,\r\n            role: {}\r\n        }\r\n    };\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqUserList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = async (response1) => {\r\n        const response2 = await reqRoleList();\r\n        if(response1.status===0 && response2.status===0){\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                let data = response1.data.map((item1, index) => {\r\n                    item1.index = index;\r\n                    response2.data.forEach(item2 => {\r\n                        if(item1.role === item2.id){\r\n                            item1.role = item2;\r\n                            let permission = [\r\n                                {\r\n                                    title: \"订单管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"全部订单\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"前台管理\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"商品管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"商品分类\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"商品列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"添加商品\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"库存管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"库存信息\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"库存盘点\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"会员管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"会员列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"新增会员\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"人事管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"员工列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"用户列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"角色管理\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ];\r\n                            item1.role.permission.split('-').forEach(item3 => {\r\n                                switch (item3) {\r\n                                    case '全部订单':\r\n                                        permission[0].display = 1;\r\n                                        permission[0].children[0].display = 1;\r\n                                        break;\r\n                                    case '前台管理':\r\n                                        permission[0].display = 1;\r\n                                        permission[0].children[1].display = 1;\r\n                                        break;\r\n                                    case '商品分类':\r\n                                        permission[1].display = 1;\r\n                                        permission[1].children[0].display = 1;\r\n                                        break;\r\n                                    case '商品列表':\r\n                                        permission[1].display = 1;\r\n                                        permission[1].children[1].display = 1;\r\n                                        break;\r\n                                    case '添加商品':\r\n                                        permission[1].display = 1;\r\n                                        permission[1].children[2].display = 1;\r\n                                        break;\r\n                                    case '库存信息':\r\n                                        permission[2].display = 1;\r\n                                        permission[2].children[0].display = 1;\r\n                                        break;\r\n                                    case '库存盘点':\r\n                                        permission[2].display = 1;\r\n                                        permission[2].children[1].display = 1;\r\n                                        break;\r\n                                    case '会员列表':\r\n                                        permission[3].display = 1;\r\n                                        permission[3].children[0].display = 1;\r\n                                        break;\r\n                                    case '新增会员':\r\n                                        permission[3].display = 1;\r\n                                        permission[3].children[1].display = 1;\r\n                                        break;\r\n                                    case '员工列表':\r\n                                        permission[4].display = 1;\r\n                                        permission[4].children[0].display = 1;\r\n                                        break;\r\n                                    case '用户列表':\r\n                                        permission[4].display = 1;\r\n                                        permission[4].children[1].display = 1;\r\n                                        break;\r\n                                    case '角色管理':\r\n                                        permission[4].display = 1;\r\n                                        permission[4].children[2].display = 1;\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            });\r\n                            item1.role.permission = permission\r\n                        }\r\n                    });\r\n                    return item1\r\n                });\r\n                this.setState({isLoading: false, data: data})\r\n            }, 300)\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除用户\\\"\"+record.username+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqUserDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleAdd = () => {this.props.history.push('/employee/user/add')};\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/employee/user/edit', state: {data: record}})\r\n    };\r\n    handleRoleView = (role) => {\r\n        console.log(role);\r\n        this.setState({\r\n            visible: true,\r\n            role: role\r\n        });\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '用户名称',\r\n                dataIndex: 'username',\r\n                key: 'username',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                key: 'son',\r\n                render: (text) => <span><Icon type=\"clock-circle\" /> {this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => b.createtime - a.createtime\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role',\r\n                key: 'role',\r\n                render: (text) => <Button type=\"link\" onClick={()=>this.handleRoleView(text)}>{text.name}</Button>\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'tel',\r\n                key: 'tel',\r\n                render: (text) => <span><Icon type=\"phone\" />+86 {text}</span>\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n                key: 'email'\r\n            },\r\n            {\r\n                title: '密码',\r\n                dataIndex: 'password',\r\n                key: 'password'\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'note',\r\n                key: 'note',\r\n                render: (text) => text ? text : '/'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>设置</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['人事管理','用户列表']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\" style={{fontWeight: \"bold\"}} />创建用户</Button>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n                <Modal\r\n                    title={<span>角色权限-{this.state.role.name}</span>}\r\n                    visible={this.state.visible}\r\n                    onCancel={()=>{this.setState({visible: false})}}\r\n                    footer={\r\n                        [<Button type=\"primary\" key=\"view-ok\" onClick={()=>this.setState({visible: false})}>确认</Button>]\r\n                    }\r\n                >\r\n                    <div style={{marginLeft: \"100px\"}}>\r\n                        {\r\n                            this.state.role.permission ? this.state.role.permission.map((item1, index) => {\r\n                                return (\r\n                                    <div key={index}>\r\n                                        <div><Icon type=\"caret-down\" style={{color: \"#1DA57A\"}}/>{item1.title}</div>\r\n                                        {\r\n                                            item1.children.map((item2, index) => {\r\n                                                return item2.display===1 ? (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"check\" style={{color: \"#1DA57A\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                ) :  (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"close\" style={{color: \"#fa7f3e\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqRoleList, reqUserAdd} from \"../../api\";\r\n\r\nconst AddUser = Form.create({ name: 'user-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                options: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqRoleList();\r\n            if(response.status === 0){\r\n                let options = [];\r\n                response.data.forEach(item => {\r\n                    options.push({key: item.id, value: item.name})\r\n                });\r\n                this.setState({options: options});\r\n            }\r\n        };\r\n        \r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.createtime = new Date().getTime();\r\n                    data.deleted = 0;\r\n                    console.log(values);\r\n                    const response = await reqUserAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增用户成功,即将返回用户列表页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/user')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理','用户列表','创建用户']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增用户信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee/user')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"用户名：\">\r\n                                {form.getFieldDecorator('username', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户名\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码：\">\r\n                                {form.getFieldDecorator('password', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户密码\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色：\">\r\n                                {form.getFieldDecorator('role', {\r\n                                    rules: [{required: true}]\r\n                                })(\r\n                                    <Select placeholder=\"请选择角色\">\r\n                                        {\r\n                                            this.state.options.map((item) => {\r\n                                                return <Select.Option key={item.key}>{item.value}</Select.Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel：\">\r\n                                {form.getFieldDecorator('tel', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入电话号码\" addonBefore=\"+86\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"邮箱：\">\r\n                                {form.getFieldDecorator('email', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户邮箱\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqRoleList, reqUserUpdate} from \"../../api\";\r\n\r\nconst EditUser = Form.create({ name: 'user-edit' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: {},\r\n                options: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqRoleList();\r\n            if(response.status === 0){\r\n                let options = [];\r\n                let data = this.props.location.state.data;\r\n                response.data.forEach(item => {\r\n                    options.push({key: item.id, value: item.name});\r\n                    if(data.role === item.id){\r\n                        data.rolename = item.name\r\n                    }\r\n                });\r\n                this.setState({\r\n                    options: options,\r\n                    data: data\r\n                });\r\n            }\r\n        };\r\n        componentWillUnmount = () => {\r\n            clearTimeout(this.timerID)\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.createtime = new Date().getTime();\r\n                    this.state.options.forEach(item => {\r\n                        if(item.value === data.role) data.role = item.key;\r\n                    });\r\n                    const response = await reqUserUpdate(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"更新成功,即将返回用户列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/user')\r\n                        }, 1500);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理','用户列表','编辑用户']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑用户信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/user')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\r\n                                {form.getFieldDecorator('id', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.id\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"用户名：\">\r\n                                {form.getFieldDecorator('username', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.username\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码：\">\r\n                                {form.getFieldDecorator('password', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.password\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色：\">\r\n                                {form.getFieldDecorator('role', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.rolename,\r\n                                })(\r\n                                    <Select>\r\n                                        {\r\n                                            this.state.options.map((item) => {\r\n                                                return <Select.Option key={item.key}>{item.value}</Select.Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel：\">\r\n                                {form.getFieldDecorator('tel', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.tel\r\n                                })(<Input addonBefore=\"+86\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"邮箱：\">\r\n                                {form.getFieldDecorator('email', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.email\r\n                                })(<Input placeholder=\"请输入用户邮箱\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: this.state.data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './stock.less';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport Loading from '../../components/loading/index';\r\nimport {Button, Table, Divider, Tag, Modal, Input, Icon} from 'antd';\r\nimport {\r\n    reqStockList,\r\n    reqStockCategory,\r\n    reqStockDelete,\r\n    reqStockSearch,\r\n    reqStocklogList,\r\n    addStocklogList\r\n} from '../../api/index';\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nclass Stock extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            isLoading: true,\r\n            data: [],\r\n            category: [],\r\n            options: []\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqStockList();\r\n        this.refreshTable(response, 0);\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = async (response1, type) => {\r\n        const response2 = await reqStocklogList();\r\n        const response3 = await reqStockCategory();\r\n        if(response1.status === 0 && response2.status === 0 && response3.status === 0){\r\n            let data = response1.data.map(item1 => {\r\n                item1.state = item1.amount>item1.excess ? 2 : item1.amount<item1.warning ? 0 : 1;\r\n                item1.log = [];\r\n                response2.data.forEach(item2 => {\r\n                    if(item2.stockid === item1.id){\r\n                        item1.log.push(item2)\r\n                    }\r\n                });\r\n                item1.manager = item1.log[item1.log.length-1].manager;\r\n                let time = item1.log[item1.log.length-1].time;\r\n                item1.latestTime = new Date(time);\r\n                item1.pictures = item1.pictures.split(',');\r\n                return item1\r\n            });\r\n            let category = [];\r\n            let options = [];\r\n            response3.data.forEach(item => {\r\n                category.push({text: item.category, value: item.category});\r\n                options.push({label: item.category, value: item.category})\r\n            });\r\n            if(type === 0){\r\n                this.setState({\r\n                    category: category,\r\n                    options: options,\r\n                    isLoading: true\r\n                });\r\n                this.timerID = setTimeout(() => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        data: data\r\n                    })}, 300)\r\n            }else{\r\n                this.setState({\r\n                    category: category,\r\n                    options: options,\r\n                    data: data\r\n                })\r\n            }\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除库存记录\\\"\"+record.name+\"\\\"吗\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqStockDelete(record.id);\r\n                if(response.status === 0){\r\n                    let log = {...record};\r\n                    log.stockid = log.id;\r\n                    log.stockname =log.name;\r\n                    log.manager = memoryUtils.user.username;\r\n                    log.time = new Date().getTime();\r\n                    log.operation = \"删除\";\r\n                    log.pictures = log.pictures.join(',');\r\n                    delete log.state;\r\n                    delete log.log;\r\n                    delete log.name;\r\n                    delete log.id;\r\n                    delete log.latestTime;\r\n                    let response2 = await addStocklogList(log);\r\n                    if(response2.status === 0){\r\n                        const response3 = await reqStockList();\r\n                        this.refreshTable(response3, 1)\r\n                    }\r\n                }\r\n            },\r\n            cancelText: \"取消\",\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/stock/edit', state: {data: record}} )\r\n    };\r\n    handleSearch = async (name) => {\r\n        const response = name===\"\" ? await reqStockList() : await reqStockSearch(name);\r\n        this.refreshTable(response, 0);\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/stock/view', state: {data: record}});\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const state = [{text: \"正常\", value: 0},{text: \"告罄\", value: 1},{text: \"过剩\", value: 2}];\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record, index) => <span>{index+1}</span>\r\n            },\r\n            {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button type=\"link\" onClick={()=>this.handleView(record)}>\r\n                            {text}\r\n                            {record.amount<record.warning ? <Tag size=\"small\" color=\"red\">告罄</Tag> : null}\r\n                            {record.amount>record.excess ? <Tag size=\"small\" color=\"green\">过剩</Tag> : null}\r\n                        </Button>\r\n                    </span>\r\n                )\r\n            },\r\n            {\r\n                title: '类型',\r\n                dataIndex: 'category',\r\n                key: 'category',\r\n                filters: this.state.category,\r\n                onFilter: (value, record) => value===record.category\r\n            },\r\n            {\r\n                title: '单价',\r\n                dataIndex: 'price',\r\n                key: 'price',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.price-b.price\r\n            },\r\n            {\r\n                title: '库存量',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                sorter: (a, b) => a.amount - b.amount,\r\n                filters: state,\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '单位',\r\n                dataIndex: 'unit',\r\n                key: 'unit',\r\n            },\r\n            {\r\n                title: '最近更新',\r\n                dataIndex: 'latestTime',\r\n                key: 'latestTime',\r\n                render: (text) => <span><Icon type=\"clock-circle\" /> {this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => a.latestTime - b.latestTime\r\n            },\r\n            {\r\n                title: '操作人',\r\n                dataIndex: 'manager',\r\n                key: 'manager'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>{this.handleEdit(record)}}>编辑</Button>\r\n                        <Divider type=\"vertical\" />\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>{this.handleDelete(record)}}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"stock-container\">\r\n                <TopNav nav={['库存管理', '库存信息']}/>\r\n                <div className=\"stock-header\">\r\n                    <Button type=\"primary\"\r\n                            style={{marginRight: \"40px\"}}\r\n                            onClick={()=>{this.props.history.push('/stock/add')}}><Icon type=\"plus\" style={{fontWeight: \"bold\"}} />新增库存</Button>\r\n                    <Button type=\"primary\" onClick={()=>this.props.history.push('/stock/log')}>仓库日志</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询库存名称\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey = {record => record.id}\r\n                               bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stock\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Card, Input, Button, Select, InputNumber, Modal, message} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport PictureWall from \"../../components/picture-wall/picture-wall\";\r\nimport {reqStockCategory, addStocklogList, addStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst AddStock = Form.create({name: 'add-stock-form'})(\r\n    class extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                category: [],\r\n                categoryAdd: \"\",\r\n                visible: false\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockCategory();\r\n            if(response.status === 0){\r\n                let category = [];\r\n                response.data.forEach(item => {\r\n                    category.push(item.category)\r\n                });\r\n                this.setState({category: category})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data = values;\r\n                    let response1 = await addStockList(data);\r\n                    if(response1.status===0){\r\n                        let log = {...data};\r\n                        log.stockname = log.name;\r\n                        log.manager = memoryUtils.user.username;\r\n                        log.operation = \"新增\";\r\n                        log.time = new Date().getTime();\r\n                        log.stockid = response1.data.insertId;\r\n                        delete log.name;\r\n                        let response2 = await addStocklogList(log);\r\n                        if(response2.status === 0){\r\n                            message.success(\"新增库存信息成功，即将返回库存列表页面\", 2);\r\n                            this.timerID = setTimeout(()=>{\r\n                                this.props.history.push('/stock')\r\n                            }, 2000);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        handleAddClick = () => {\r\n            this.setState({visible: true})\r\n        };\r\n        handleNameChange = (e) => {\r\n            this.setState({categoryAdd: e.target.value})\r\n        };\r\n        onOk = () => {\r\n            let category = this.state.category;\r\n            category.push(this.state.categoryAdd);\r\n            this.setState({\r\n                category: category,\r\n                visible: false\r\n            })\r\n        };\r\n        onCancel = () => {\r\n            this.setState({visible: false})\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存信息', '新增库存']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增库存记录</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"货物名称\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物名称\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"货物种类\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('category', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select style={{width: \"75%\"}} placeholder=\"请选择货物品类\">\r\n                                            {this.state.category.map(item => (\r\n                                                <Select.Option key={item}>{item}</Select.Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    <div style={{display: \"inline-block\", float: \"right\"}}>\r\n                                        <Button type=\"primary\"\r\n                                                onClick={this.handleAddClick}>新增品类</Button>\r\n                                        <Modal\r\n                                            title=\"新增品类\"\r\n                                            visible={this.state.visible}\r\n                                            okText=\"确认\"\r\n                                            onOk={this.onOk}\r\n                                            cancelText=\"取消\"\r\n                                            onCancel={this.onCancel}\r\n                                        >\r\n                                            <Input placeholder=\"请输入品类名称\" onChange={this.handleNameChange}/>\r\n                                        </Modal>\r\n                                    </div>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单价\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('price', {\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber />)\r\n                                }\r\n                                <span style={{marginLeft: \"10px\"}}>元</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存数量\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('amount', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入库存数量\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单位\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('unit', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物单位\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存监控\">\r\n                                <Input.Group compact>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('warning', {\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"下限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                    <span style={{margin: \"8px 20px 0 20px\"}}>~</span>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('excess', {\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"上限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"图片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('pictures', {\r\n                                        rules: [{required: true, message: \"请上传商品图片\"}]\r\n                                    })(<PictureWall />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入库存备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddStock;","import React from 'react';\r\nimport {Form, Tag, Modal, Row, Col, Card} from 'antd';\r\n\r\nclass StocklogView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'tab1'\r\n        }\r\n    }\r\n    onTabChange = (key) => {\r\n        this.setState({key: key})\r\n    };\r\n    content = (header) => header ? (\r\n        <div>\r\n            <Row>\r\n                <Col span={7} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>名称：</Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item>{header.stockname}</Form.Item>\r\n                </Col>\r\n                <Col span={4} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>种类：</Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item>{header.category}</Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={7} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>数量：</Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item>{header.amount}</Form.Item>\r\n                </Col>\r\n                <Col span={4} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>单位：</Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item>{header.unit}</Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={7} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>状态：</Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item>\r\n                        {header.amout > header.excess ? <Tag size=\"small\" color=\"blue\">过剩</Tag> :\r\n                            header.state < header.warning ? <Tag size=\"small\" color=\"red\">告罄</Tag> :\r\n                                <Tag size=\"small\" color=\"green\">正常</Tag>}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>监控：</Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item>\r\n                        下限:{header.warning}&nbsp;&nbsp;\r\n                        上限:{header.excess}\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={7}>\r\n                    <Form.Item style={{textAlign: \"right\"}}>图片：</Form.Item>\r\n                </Col>\r\n                <Col span={17}>\r\n                    {\r\n                        String(header.pictures).split(',').map((item, index) => {\r\n                            return item===\"\" ? null : <img\r\n                                key={index} src={'http://localhost:3001/upload/'+item} alt=\"货物图片\"\r\n                                style={{\r\n                                    width: \"80px\",\r\n                                    height: \"80px\",\r\n                                    padding: \"5px\",\r\n                                    marginRight: \"10px\",\r\n                                    borderRadius: \"5px\",\r\n                                    border: \"1px solid lightgray\"\r\n                                }}\r\n                            />\r\n                        })\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: '10px'}}>\r\n                <Col span={7}>\r\n                    <Form.Item style={{textAlign: \"right\"}}>备注：</Form.Item>\r\n                </Col>\r\n                <Col span={17}>\r\n                    <Form.Item>{header.note ? header.note : '无'}</Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    ) : null;\r\n    render() {\r\n        const contentList = {\r\n            tab1: this.content(this.props.info.before),\r\n            tab2: this.content(this.props.info),\r\n        };\r\n        return (\r\n            <Modal\r\n                visible={this.props.visible}\r\n                // title={<span style={{color: \"#1DA57A\"}}>日志详情-{this.props.info.operation || \"修改\"}</span>}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onOk={this.props.onOk}\r\n                onCancel={this.props.onCancel}\r\n                footer={null}\r\n            >\r\n                {\r\n                    Object.getOwnPropertyNames(this.props.info).length === 0 ? null :\r\n                        this.props.info.hasOwnProperty('before') ? (\r\n                            <Card\r\n                                style={{width: \"100%\", border: \"none\"}}\r\n                                tabList={[{key: 'tab1', tab: '修改前'}, {key: 'tab2', tab: '修改后'}]}\r\n                                activeTabKey={this.state.key}\r\n                                onTabChange={key=>this.onTabChange(key)}\r\n                            >\r\n                                {contentList[this.state.key]}\r\n                            </Card>\r\n                        ) : (\r\n                            <Card\r\n                                style={{width: \"100%\", border: \"none\"}}\r\n                                title={<span style={{ color: \"#1DA57A\", marginLeft: \"10px\"}}>{this.props.info.operation}记录</span>}\r\n                            >\r\n                                {this.content(this.props.info)}\r\n                            </Card>\r\n                        )\r\n                }\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StocklogView;\r\n\r\n","import React from 'react';\r\nimport {Button, Card, DatePicker, List,  Select} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport StocklogView from './stock-log-view';\r\nimport moment from \"moment\";\r\nimport { reqStocklogList } from \"../../api\";\r\n\r\nclass StockLog extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            data: [],\r\n            log: [],\r\n            option: 0,\r\n            visible: false,\r\n            logInfo: {},\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let response = await reqStocklogList();\r\n        if(response.status === 0){\r\n            let data1 = response.data.reverse();\r\n            data1 = data1.map(item1 => {\r\n                if(item1.operation === \"修改\"){\r\n                    let data2 = data1.filter(item2 => {\r\n                        return item1.time > item2.time && item1.stockid === item2.stockid && item1.operation === \"修改\"\r\n                    });\r\n                    if(data2.length === 0){\r\n                        item1.before = data1.find(item3 => {\r\n                            return item3.stockid === item1.stockid && item3.operation === \"新增\"\r\n                        });\r\n                    }else{\r\n                        data2 = data2.sort((a, b) => a.time - b.time);\r\n                        item1.before = data2.pop();\r\n                    }\r\n                }\r\n                return item1\r\n            });\r\n            this.setState({\r\n                data: data1,\r\n                log: data1\r\n            })\r\n        }\r\n    };\r\n    handleSelectChange = (value) => {\r\n        if(value === 0){\r\n            this.setState({log: this.state.data})\r\n        }\r\n        this.setState({option: value})\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleDatePickerChange = (date, dateString) => {\r\n        let start = new Date(dateString+\" 00:00:00\").getTime();\r\n        let end = new Date(dateString+\" 23:59:59\").getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleWeekPickerChange = (week) => {\r\n        let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n        let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleMonthPickerChange = (month) => {\r\n        let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleRangePickerChange = (dates, dateStrings) => {\r\n        let start = new Date(dateStrings[0]).getTime();\r\n        let end = new Date(dateStrings[1]).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    handleDetail = async (data) => {\r\n        console.log(data);\r\n        this.setState({\r\n            visible: true,\r\n            logInfo: data\r\n        });\r\n    };\r\n    onOk = () =>{\r\n        this.setState({\r\n            visible: false,\r\n            logInfo: {}\r\n        })\r\n    };\r\n    render(){\r\n        let header = (\r\n            <div style={{textAlign: \"right\"}}>\r\n                { this.state.option===0 ? null : this.getTimePicker()}\r\n                <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                        style={{width: \"115px\", margin: \"0 20px 0 10px\"}}>\r\n                    <Select.Option value={0}>按顺序查看</Select.Option>\r\n                    <Select.Option value={1}>按日期查看</Select.Option>\r\n                    <Select.Option value={2}>按周次查看</Select.Option>\r\n                    <Select.Option value={3}>按月份查看</Select.Option>\r\n                    <Select.Option value={4}>自定义区间</Select.Option>\r\n                </Select>\r\n            </div>\r\n        );\r\n        return (\r\n            <div>\r\n                <TopNav nav={['库存管理','库存信息','库存日志']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看库存日志</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/stock')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <List style={{margin: \"20px 170px\"}}\r\n                          size=\"small\"\r\n                          header={header}\r\n                          dataSource={this.state.log}\r\n                          pagination={{pageSize: 10}}\r\n                          renderItem={item =>\r\n                              <List.Item>\r\n                                  <span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>{this.getTimeForm(item.time)}</span>\r\n                                  <span style={{color: \"#1DA57A\", marginLeft: \"20px\", width: \"60px\"}}>{item.manager}</span>\r\n                                  <span>对</span>\r\n                                  <span style={{margin: \"0 20px\", width: \"80px\"}}>\r\n                                      “<span style={{color: \"#1DA57A\"}}>{item.before ? item.before.stockname : item.stockname}</span>”\r\n                                  </span>\r\n                                  <span>的库存信息进行了</span>\r\n                                  <span style={item.operation === '删除' ? {color: 'red'} : {color: '#1DA57A'}}>{item.operation}</span>\r\n                                  <Button\r\n                                      type='primary'\r\n                                      size='small'\r\n                                      style={{marginLeft: \"30px\"}}\r\n                                      onClick={()=>this.handleDetail(item)}\r\n                                  >详情</Button>\r\n                              </List.Item>\r\n                          }\r\n                          bordered\r\n                    />\r\n                    <StocklogView\r\n                        visible={this.state.visible}\r\n                        info={this.state.logInfo}\r\n                        onCancel={this.onOk}\r\n                        onOk={this.onOk}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StockLog;","import React from 'react';\r\nimport { Form, Card, Button, Tag, List, Select, DatePicker } from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport StocklogView from './stock-log-view';\r\nimport moment from \"moment\";\r\n\r\nclass ViewStock extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            data: [],\r\n            log: [],\r\n            option: 0,\r\n            visible: false,\r\n            logInfo: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = () => {\r\n        // const data = this.props.location.state.data;\r\n        // this.setState({\r\n        //     data: data,\r\n        //     log: data.log.reverse()\r\n        // });\r\n    \r\n        const data = this.props.location.state.data;\r\n        let data1 = data.log.reverse();\r\n        data1 = data1.map(item1 => {\r\n            if(item1.operation === \"修改\"){\r\n                let data2 = data1.filter(item2 => {\r\n                    return item1.time > item2.time && item1.stockid === item2.stockid && item1.operation === \"修改\"\r\n                });\r\n                if(data2.length === 0){\r\n                    item1.before = data1.find(item3 => {\r\n                        return item3.stockid === item1.stockid && item3.operation === \"新增\"\r\n                    });\r\n                }else{\r\n                    data2 = data2.sort((a, b) => a.time - b.time);\r\n                    item1.before = data2.pop();\r\n                }\r\n            }\r\n            return item1\r\n        });\r\n        this.setState({\r\n            data: data,\r\n            log: data1\r\n        });\r\n    };\r\n    handleSelectChange = (value) => {\r\n        if(value === 0){\r\n            this.setState({log: this.state.data.log})\r\n        }\r\n        this.setState({option: value})\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleDatePickerChange = (date, dateString) => {\r\n        let start = new Date(dateString+\" 00:00:00\").getTime();\r\n        let end = new Date(dateString+\" 23:59:59\").getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleWeekPickerChange = (week) => {\r\n        let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n        let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleMonthPickerChange = (month) => {\r\n        let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleRangePickerChange = (dates, dateStrings) => {\r\n        let start = new Date(dateStrings[0]).getTime();\r\n        let end = new Date(dateStrings[1]).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    handleDetail = (data) => {\r\n        this.setState({\r\n            visible: true,\r\n            logInfo: data\r\n        })\r\n    };\r\n    onOk = () =>{\r\n        this.setState({visible: false})\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        let header = (\r\n            <div style={{textAlign: \"right\"}}>\r\n                { this.state.option===0 ? null : this.getTimePicker()}\r\n                <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                        style={{width: \"115px\", margin: \"0 20px 0 10px\"}}>\r\n                    <Select.Option value={0}>按顺序查看</Select.Option>\r\n                    <Select.Option value={1}>按日期查看</Select.Option>\r\n                    <Select.Option value={2}>按周次查看</Select.Option>\r\n                    <Select.Option value={3}>按月份查看</Select.Option>\r\n                    <Select.Option value={4}>自定义区间</Select.Option>\r\n                </Select>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"stock-view-container\">\r\n                <TopNav nav={['库存管理', '库存信息', '货物详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看货物详情</span>}\r\n                      extra={<Button type='primary' onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"货物名称\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"货物种类\">\r\n                            <span className=\"ant-form-text\">{this.state.data.category}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"单价\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.price.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存数量\">\r\n                            <span className=\"ant-form-text\">{this.state.data.amount}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存单位\">\r\n                            <span className=\"ant-form-text\">{this.state.data.unit}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存状态\">\r\n                            <span style={{marginLeft: \"20px\"}}>\r\n                                {this.state.data.state===0 ? <Tag size=\"small\" color=\"blue\">正常</Tag> :\r\n                                    this.state.data.state===1 ? <Tag size=\"small\" color=\"red\">告罄</Tag> :\r\n                                        <Tag size=\"small\" color=\"green\">过剩</Tag>}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存监控\">\r\n                            <span className=\"ant-form-text\">\r\n                                上限：{this.state.data.excess}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                下限：{this.state.data.warning}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"图片\">\r\n                                <span className=\"ant-form-pictures\">\r\n                                    {\r\n                                        this.state.data.pictures.map((item, index) => {\r\n                                            return item===\"\" ? null\r\n                                                : <img key={index} src={'/upload/'+item} alt=\"货物图片\"/>\r\n                                        })\r\n                                    }\r\n                                </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{ this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <List style={{margin: \"50px 170px\"}}\r\n                          size=\"small\"\r\n                          header={header}\r\n                          dataSource={this.state.log}\r\n                          pagination={{pageSize: 10}}\r\n                          renderItem={item =>\r\n                              <List.Item>\r\n                                  {/*<span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>{this.getTimeForm(item.time)}</span>*/}\r\n                                  {/*<span style={{color: \"#1DA57A\", marginLeft: \"20px\", width: \"50px\"}}>{item.manager}</span>*/}\r\n                                  {/*<span>对“{item.stockname}”的库存信息进行了{item.operation}</span>*/}\r\n                                  {/*<Button type=\"link\"*/}\r\n                                  {/*        style={{marginLeft: \"30px\"}}*/}\r\n                                  {/*        onClick={()=>this.handleDetail(item)}*/}\r\n                                  {/*>详情</Button>*/}\r\n                                  <span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>\r\n                                      {this.getTimeForm(item.time)}\r\n                                  </span>\r\n                                  <span style={{color: \"#1DA57A\", marginLeft: \"20px\", width: \"60px\"}}>\r\n                                      {item.manager}\r\n                                  </span>\r\n                                  <span>对</span>\r\n                                  <span style={{margin: \"0 20px\", width: \"80px\"}}>“<span style={{color: \"#1DA57A\"}}>{item.stockname}</span>”</span>\r\n                                  <span>的库存信息进行了</span>\r\n                                  <span style={{color: '#1DA57A'}}>{item.operation}</span>\r\n                                  <Button\r\n                                      type=\"primary\"\r\n                                      size=\"small\"\r\n                                      style={{marginLeft: \"30px\"}}\r\n                                      onClick={()=>this.handleDetail(item)}\r\n                                  >详情</Button>\r\n                              </List.Item>\r\n                          }\r\n                          bordered\r\n                    />\r\n                    <StocklogView\r\n                        visible={this.state.visible}\r\n                        info={this.state.logInfo}\r\n                        onCancel={this.onOk}\r\n                        onOk={this.onOk}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ViewStock;","import React from 'react';\r\nimport {Form, Card, Input, Button, Select, InputNumber, Modal, message} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport PictureWall from \"../../components/picture-wall/picture-wall\";\r\nimport {reqStockCategory, addStocklogList, updateStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst EditStock = Form.create({name: 'edit-stock-form'})(\r\n    class extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                category: [],\r\n                categoryAdd: \"\",\r\n                visible: false\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockCategory();\r\n            if(response.status === 0){\r\n                let category = [];\r\n                response.data.forEach(item => {\r\n                    category.push(item.category)\r\n                });\r\n                this.setState({category: category})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data = {};\r\n                    data.id = this.props.location.state.data.id;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    let log = {...data};\r\n                    log.stockid = log.id;\r\n                    log.stockname = log.name;\r\n                    log.time = new Date().getTime();\r\n                    log.operation = \"修改\";\r\n                    log.manager = memoryUtils.user.username;\r\n                    delete log.id;\r\n                    delete log.name;\r\n                    let response1 = await updateStockList(data);\r\n                    let response2 = await addStocklogList(log);\r\n                    if(response1.status===0 && response2.status===0){\r\n                        message.success(\"更新库存信息成功,即将返回库存列表页面\", 2);\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/stock')\r\n                        }, 2000);\r\n                    }\r\n                    \r\n                }\r\n            })\r\n        };\r\n        handleAddClick = () => {\r\n            this.setState({visible: true})\r\n        };\r\n        handleNameChange = (e) => {\r\n            this.setState({categoryAdd: e.target.value})\r\n        };\r\n        onOk = () => {\r\n            let category = this.state.category;\r\n            category.push(this.state.categoryAdd);\r\n            this.setState({\r\n                category: category,\r\n                visible: false\r\n            })\r\n        };\r\n        onCancel = () => {\r\n            this.setState({visible: false})\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            let initialData = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存信息', '编辑库存']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑库存记录</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"货物名称\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        initialValue: initialData.name,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物名称\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"货物种类\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('category', {\r\n                                        initialValue: initialData.category,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select style={{width: \"75%\"}} placeholder=\"请选择货物品类\">\r\n                                            {this.state.category.map(item => (\r\n                                                <Select.Option key={item}>{item}</Select.Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    <div style={{display: \"inline-block\", float: \"right\"}}>\r\n                                        <Button type=\"primary\"\r\n                                                onClick={this.handleAddClick}>新增品类</Button>\r\n                                        <Modal\r\n                                            title=\"新增品类\"\r\n                                            visible={this.state.visible}\r\n                                            okText=\"确认\"\r\n                                            onOk={this.onOk}\r\n                                            cancelText=\"取消\"\r\n                                            onCancel={this.onCancel}\r\n                                        >\r\n                                            <Input placeholder=\"请输入品类名称\" onChange={this.handleNameChange}/>\r\n                                        </Modal>\r\n                                    </div>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存单价\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('price', {\r\n                                        initialValue: initialData.price,\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber />)\r\n                                }\r\n                                <span style={{marginLeft: \"10px\"}}>元</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存数量\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('amount', {\r\n                                        initialValue: initialData.amount,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入库存数量\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单位\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('unit', {\r\n                                        initialValue: initialData.unit,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物单位\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存监控\">\r\n                                <Input.Group compact>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('warning', {\r\n                                                initialValue: initialData.warning,\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"下限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                    <span style={{margin: \"8px 20px 0 20px\"}}>~</span>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('excess', {\r\n                                                initialValue: initialData.excess,\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"上限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"图片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('pictures', {\r\n                                        initialValue: initialData.pictures.join(',')\r\n                                    })(<PictureWall imgs={initialData.pictures.join(\",\")} />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: initialData.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入库存备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditStock;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Input, Form, DatePicker, Table, Tag, Icon, Divider, Modal} from \"antd\";\r\nimport Loading from '../../components/loading';\r\nimport {reqInventoryList, reqStockList, reqUserList, reqInventoryUpdate, reqInventoryDelete} from '../../api';\r\n\r\nconst Inventory = Form.create({name: 'search-inventory-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                isLoading: true,\r\n                data: [],\r\n                tableData: [],\r\n                createrFilters: [],\r\n                dateRange: [],\r\n                searchValue : ''\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqInventoryList();\r\n            this.refreshTable(response);\r\n        };\r\n        componentWillUnmount = () => {\r\n            clearTimeout(this.timerID)\r\n        };\r\n        refreshTable = async (response1) => {\r\n            const response2 = await reqUserList();\r\n            const response3 = await reqStockList();\r\n            if(response1.status===0 && response2.status===0 && response3.status===0){\r\n                let creater = [];\r\n                let data = response1.data.map(item1 => {\r\n                    response2.data.forEach(item2 => {\r\n                        if(item1.creater === item2.id){\r\n                            item1.creater = item2.username;\r\n                            creater.push(item1.creater)\r\n                        }\r\n                    });\r\n                    return item1\r\n                });\r\n                creater = new Set(creater);\r\n                let createrFilters = [];\r\n                creater.forEach(item => {\r\n                    createrFilters.push({text: item, value: item})\r\n                });\r\n                this.setState({isLoading: true});\r\n                this.timerID = setTimeout(() => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        data: data.reverse(),\r\n                        tableData: data,\r\n                        createrFilters: createrFilters,\r\n                        dateRange: [NaN, NaN]\r\n                    })\r\n                }, 300)\r\n            }\r\n        };\r\n        handleDeal = (record) => {\r\n            let data = {id: record.id, state : 1-record.state};\r\n            Modal.confirm({\r\n                title: \"警告\",\r\n                content: \"确定要将单号\\\"PD\"+record.id+\"\\\"设置为已处理吗\",\r\n                okText: \"确认\",\r\n                onOk: async ()=>{\r\n                    const response = await reqInventoryUpdate(data);\r\n                    if(response.status===0){\r\n                        let data = this.state.data.map(item => {\r\n                            item.state = item.id===record.id ? 1-item.state : item.state;\r\n                            return item;\r\n                        });\r\n                        this.setState({data: data})\r\n                    }\r\n                },\r\n                cancelText: \"取消\",\r\n                onCancel: () => {}\r\n            })\r\n        };\r\n        handleDelete = async (record) => {\r\n            Modal.confirm({\r\n                title: '警告',\r\n                content:  \"确定要删除该库存记录\\\"\"+record.id+\"\\\"吗？\",\r\n                okText: '确认',\r\n                onOk: async () => {\r\n                    const response = await reqInventoryDelete(record.id);\r\n                    if(response.status === 0){\r\n                        let tableData=[];\r\n                        this.state.data.forEach(item => {\r\n                            if(item.id !== record.id)  tableData.push(item)\r\n                        });\r\n                        this.setState({\r\n                            tableData: tableData\r\n                        })\r\n                    }\r\n                },\r\n                cancelText: '取消',\r\n                onCancel: () => {}\r\n            });\r\n        };\r\n        handleView = (record) => {\r\n            this.props.history.push({pathname: '/stock/inventory/view', state: {data: record}})\r\n        };\r\n        handleRangePickerChange = (dates, dateStrings) => {\r\n            let start = new Date(dateStrings[0]).getTime();\r\n            let end = new Date(dateStrings[1]).getTime();\r\n            let dateRange = [];\r\n            dateRange.push(start);\r\n            dateRange.push(end);\r\n            let tableData = isNaN(start) || isNaN(end) ? this.state.data : this.state.data.filter(item => {\r\n                return item.createtime >= start && item.createtime <= end\r\n            });\r\n            if(!!this.state.searchValue){\r\n                tableData = tableData.filter(item => {\r\n                    return String(item.id) === this.state.searchValue\r\n                });\r\n            }\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(()=>{\r\n                this.setState({\r\n                    isLoading: false,\r\n                    tableData: tableData,\r\n                    dateRange: dateRange\r\n                })\r\n            },300)\r\n        };\r\n        handleSearch = async (value) => {\r\n            console.log(this.state.dateRange);\r\n            console.log(isNaN(this.state.dateRange[0]));\r\n            console.log(isNaN(this.state.dateRange[1]));\r\n            if(isNaN(this.state.dateRange[0] && isNaN(this.state.dateRange[1]))){\r\n                if(!value){\r\n                    const response = await reqInventoryList();\r\n                    this.refreshTable(response)\r\n                }else{\r\n                    let tableData = this.state.data.filter(item => {\r\n                        return String(item.id) === value\r\n                    });\r\n                    this.setState({isLoading: true});\r\n                    this.timerID = setTimeout(() => {\r\n                        this.setState({\r\n                            isLoading: false,\r\n                            tableData: tableData,\r\n                            searchValue: value\r\n                        })\r\n                    }, 300)\r\n                }\r\n            }else{\r\n                let tableData = this.state.data.filter(item => {\r\n                    return !value ?\r\n                        item.createtime >= this.state.dateRange[0] && item.createtime <= this.state.dateRange[1] :\r\n                        value === String(item.id) && item.createtime >= this.state.dateRange[0] && item.createtime <= this.state.dateRange[1]\r\n                });\r\n                this.setState({isLoading: true});\r\n                this.timerID = setTimeout(() => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        tableData: tableData,\r\n                        searchValue: value\r\n                    })\r\n                }, 300)\r\n            }\r\n        };\r\n        getTimeForm = (time) => {\r\n            time = new Date(time);\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        getVariance = (amount, expect) => {\r\n            const ret = (amount-expect).toFixed(2);\r\n            return ret>0 ? <span>+{ret}</span> : <span>{ret}</span>\r\n        };\r\n        render(){\r\n            const columns = [\r\n                {\r\n                    title: '盘点单号',\r\n                    dataIndex: 'id',\r\n                    key: 'id',\r\n                    render: (text, record) => <Button type=\"link\" onClick={()=>{this.handleView(record)}}>{text}</Button>\r\n                },\r\n                {\r\n                    title: '盘点时间',\r\n                    dataIndex: 'createtime',\r\n                    key: 'time',\r\n                    render: (text) => <span><Icon type=\"clock-circle\" />  {this.getTimeForm(text)}</span>,\r\n                    sorter: (a, b) => a.time-b.time\r\n                },\r\n                {\r\n                    title: '盘点人',\r\n                    dataIndex: 'creater',\r\n                    key: 'creater',\r\n                    filters: this.state.createrFilters,\r\n                    onFilter: (value, record) => value===record.creatername\r\n                },\r\n                {\r\n                    title: '预期金额',\r\n                    key: 'expect',\r\n                    dataIndex: 'expect',\r\n                    render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                    sorter: (a, b) => a.expect-b.expect\r\n                },\r\n                {\r\n                    title: '盘点金额',\r\n                    key: 'amount',\r\n                    dataIndex: 'amount',\r\n                    render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                    sorter: (a, b) => a.amount-b.amount\r\n                },\r\n                {\r\n                    title: '差异金额',\r\n                    key: 'variance',\r\n                    render: (text, record) => this.getVariance(record.amount, record.expect),\r\n                    sorter: (a, b) => a.amount-b.amount\r\n                },\r\n                {\r\n                    title: '状态',\r\n                    key: 'state',\r\n                    dataIndex: 'state',\r\n                    render: (text) => text===1 ? <Tag color='green'>已处理</Tag> : <Tag color='red'>未处理</Tag>,\r\n                    filters: [{text: '已处理', value: 0}, {text: '未处理', value: 1}],\r\n                    onFilter: (value, record) => value===record.state\r\n                },\r\n                {\r\n                    title: '操作',\r\n                    key: 'operate',\r\n                    render: (text, record) => record.state===1 ?\r\n                        <div>\r\n                            <Button size=\"small\" disabled>处理</Button>\r\n                            <Divider type=\"vertical\" />\r\n                            <Button size=\"small\" type=\"danger\" disabled>删除</Button>\r\n                        </div> : <div>\r\n                            <Button size=\"small\" onClick={()=>this.handleDeal(record)}>处理</Button>\r\n                            <Divider type=\"vertical\" />\r\n                            <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                        </div>\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存盘点']} />\r\n                    <div className=\"stock-header\" style={{margin: \"20px\"}}>\r\n                        <Button type=\"primary\"\r\n                                style={{marginRight: \"40px\"}}\r\n                                onClick={()=>{this.props.history.push('/stock/inventory/add')}}>\r\n                            <Icon type=\"plus\" style={{fontWeight: \"bold\"}} />新建盘点单\r\n                        </Button>\r\n                        <Input.Search\r\n                            placeholder=\"搜索盘点单号\"\r\n                            style={{width: \"160px\", float: \"right\", marginLeft: \"15px\"}}\r\n                            onSearch={(value) => this.handleSearch(value)}\r\n                            enterButton\r\n                        />\r\n                        <DatePicker.RangePicker\r\n                            style={{width: \"250px\", float: \"right\"}}\r\n                            onChange={this.handleRangePickerChange}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.isLoading ? <Loading /> :\r\n                            <Table\r\n                                size=\"small\"\r\n                                style={{margin: '20px'}}\r\n                                columns={columns}\r\n                                dataSource={this.state.tableData}\r\n                                rowKey={record => record.id}\r\n                                bordered\r\n                            />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default Inventory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, Form, Tag} from \"antd\";\r\n\r\nclass ViewInventory extends React.Component{\r\n    getTime = (time) => {\r\n        time = new Date();\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    getVariance = (amount, expect) => {\r\n        const ret = (amount-expect).toFixed(2);\r\n        return ret>0 ? <span>+{ret}</span> : <span>{ret}</span>\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        const data = this.props.location.state.data;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['库存管理', '库存盘点', '盘点详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看盘点详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock/inventory')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"盘点单号\">\r\n                            <span className=\"ant-form-text\">{data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点人\">\r\n                            <span className=\"ant-form-text\">{data.creater}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"预期金额\">\r\n                            <span className=\"ant-form-text\">￥{data.expect.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点金额\">\r\n                            <span className=\"ant-form-text\">￥{data.amount.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"差异金额\">\r\n                            <span className=\"ant-form-text\">{this.getVariance(data.amount, data.expect)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"状态\">\r\n                            <span className=\"ant-form-text\" style={{marginLeft: \"20px\", textIndent: 0}}>\r\n                                {data.state===0 ? <Tag color='green'>未处理</Tag> : <Tag color='red'>已处理</Tag>}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{ data.note ? data.note : '无'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"详情\">\r\n                            <span className=\"ant-form-text\">{data.detail}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewInventory;\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, InputNumber, Card, Button, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqInventoryAdd, reqStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst AddInventory = Form.create({ name: 'inventory-add-form' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                expect: 0\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockList();\r\n            if(response.status === 0){\r\n                let expect = 0;\r\n                response.data.forEach(item => {\r\n                    expect = expect + item.amount * item.price;\r\n                });\r\n                this.setState({expect: expect.toFixed(2)})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data = values;\r\n                    data.createtime = new Date(data.createtime).getTime();\r\n                    data.state = 0;\r\n                    data.creater = memoryUtils.user.id;\r\n                    data.amount = data.amount.toFixed(2);\r\n                    const response = await reqInventoryAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增盘点记录成功,即将返回盘点列表页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/stock/inventory')\r\n                        }, 1500);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        getTime = () => {\r\n            let time = new Date();\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存盘点', '新建盘点单']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新建盘点单</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock/inventory')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"盘点日期\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTime(),\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"盘点人\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: memoryUtils.user.username\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"预期金额\">\r\n                                {form.getFieldDecorator('expect', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.expect\r\n                                })(<Input addonBefore=\"￥\" disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"盘点金额\">\r\n                                {form.getFieldDecorator('amount', {\r\n                                    rules: [{required: true}]\r\n                                })(<InputNumber style={{width: \"100%\"}} placeholder=\"请输入盘点金额\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"详情\">\r\n                                {form.getFieldDecorator('detail', {\r\n                                    rules: [{required: true}]\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={2}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddInventory;","import React from 'react';\r\nimport {Switch, Redirect, Route} from 'react-router-dom';\r\nimport memoryUtils from '../../util/memoryUtils';\r\nimport {Layout} from 'antd';\r\nimport Header from '../../components/header';\r\nimport LeftNav from '../../components/left-nav';\r\nimport Home from '../../pages/home/home';\r\nimport EditHome from '../../pages/home/home-edit';\r\nimport Category from '../product/category';\r\nimport AddCategory from '../product/category-add';\r\nimport EditCategory from '../product/category-edit';\r\nimport ViewCategory from '../product/category-view';\r\nimport Product from '../../pages/product/product';\r\nimport AddProduct from '../product/product-add';\r\nimport EditProduct from '../product/product-edit';\r\nimport ViewProduct from '../product/product-view';\r\nimport Order from '../../pages/order/order';\r\nimport ViewOrder from '../../pages/order/order-view';\r\nimport Stage from '../order/stage';\r\nimport Member from '../member/member';\r\nimport AddMember from '../member/member-add';\r\nimport EditMember from '../member/member-edit';\r\nimport ViewMember from '../member/member-view';\r\nimport Employee from '../../pages/employee/employee';\r\nimport AddEmployee from '../../pages/employee/employee-add';\r\nimport ViewEmployee from '../../pages/employee/employee-view';\r\nimport EditEmployee from '../../pages/employee/employee-edit';\r\nimport Role from '../../pages/employee/role';\r\nimport AddRole from '../../pages/employee/role-add';\r\nimport EditRole from '../../pages/employee/role-edit';\r\nimport User from '../../pages/employee/user';\r\nimport AddUser from '../../pages/employee/user-add';\r\nimport EditUser from '../../pages/employee/user-edit';\r\nimport Stock from '../../pages/stock/stock';\r\nimport AddStock from '../../pages/stock/stock-add';\r\nimport StockLog from '../../pages/stock/stock-log';\r\nimport ViewStock from '../../pages/stock/stock-view';\r\nimport EditStock from '../../pages/stock/stock-edit';\r\nimport Inventory from '../stock/inventory';\r\nimport ViewInventory from \"../stock/inventory-view\";\r\nimport AddInventory from '../stock/inventory-add';\r\n\r\n\r\nconst {Sider,Content,Footer}=Layout;\r\n\r\nclass Admin extends React.Component{\r\n    render(){\r\n        const user=memoryUtils.user;\r\n        if(JSON.stringify(user)==='{}'){\r\n            return <Redirect to='/login' />\r\n        }else{\r\n            return (\r\n                <Layout>\r\n                    <Sider style={{height: \"100vh\", position: \"fixed\"}}>\r\n                        <LeftNav />\r\n                    </Sider>\r\n                    <Layout id=\"right\" style={{marginLeft: \"200px\"}}>\r\n                        <Header />\r\n                        <Content style={{margin: \"0 20px\", paddingBottom: \"100px\", backgroundColor: \"white\", minHeight: \"500px\"}}>\r\n                            <Switch>\r\n                                {/*首页*/}\r\n                                <Route exact path='/home' component={Home} />\r\n                                <Route path='/home/edit' component={EditHome} />\r\n                                \r\n                                {/*订单管理*/}\r\n                                <Route exact path='/order' component={Order} />\r\n                                <Route path='/order/view' component={ViewOrder} />\r\n                                <Route exact path='/order/stage' component={Stage} />\r\n                                <Route path='/order/stage/view' component={ViewOrder} />\r\n                                \r\n                                {/*商品管理*/}\r\n                                <Route exact path='/product' component={Product} />\r\n                                <Route path='/product/add' component={AddProduct} />\r\n                                <Route path='/product/edit' component={EditProduct} />\r\n                                <Route path='/product/view' component={ViewProduct} />\r\n                                <Route exact path='/product/category' component={Category} />\r\n                                <Route path='/product/category/add' component={AddCategory} />\r\n                                <Route path='/product/category/edit' component={EditCategory} />\r\n                                <Route path='/product/category/view' component={ViewCategory} />\r\n                                \r\n                                {/*库存管理*/}\r\n                                <Route exact path='/stock' component={Stock} />\r\n                                <Route path='/stock/add' component={AddStock} />\r\n                                <Route path='/stock/view' component={ViewStock} />\r\n                                <Route path='/stock/log' component={StockLog} />\r\n                                <Route path='/stock/edit' component={EditStock} />\r\n                                <Route exact path='/stock/inventory' component={Inventory} />\r\n                                <Route path='/stock/inventory/view' component={ViewInventory} />\r\n                                <Route path='/stock/inventory/add' component={AddInventory} />\r\n                                \r\n                                {/*会员管理*/}\r\n                                <Route exact path='/member' component={Member} />\r\n                                <Route path='/member/add' component={AddMember} />\r\n                                <Route path='/member/edit' component={EditMember} />\r\n                                <Route path='/member/view' component={ViewMember} />\r\n                                \r\n                                {/*人事管理*/}\r\n                                <Route exact path='/employee' component={Employee} />\r\n                                <Route path='/employee/add' component={AddEmployee} />\r\n                                <Route path='/employee/view' component={ViewEmployee} />\r\n                                <Route path='/employee/edit' component={EditEmployee} />\r\n                                <Route exact path='/employee/user' component={User} />\r\n                                <Route path='/employee/user/add' component={AddUser} />\r\n                                <Route path='/employee/user/edit' component={EditUser} />\r\n                                <Route exact path='/employee/role' component={Role} />\r\n                                <Route path='/employee/role/add' component={AddRole} />\r\n                                <Route path='/employee/role/edit' component={EditRole} />\r\n                                \r\n                                {/*重定向*/}\r\n                                <Redirect to='/home' />\r\n                            </Switch>\r\n                        </Content>\r\n                        <Footer>推荐使用Chrome浏览器，可获得更佳的页面操作体验。</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin","import React from 'react';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Login from './pages/login/login';\nimport Admin from './pages/admin/admin';\n\nclass App extends React.Component{\n    render(){\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/login\" component={Login}/>\n                    <Route path=\"/\" component={Admin}/>\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport storageUtil from './util/storageUtils';\nimport memoryUtils from './util/memoryUtils';\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nmoment.locale('zh-cn');\n\nconst user=storageUtil.getUser();\nmemoryUtils.user=user;\n\nReactDOM.render(<ConfigProvider locale={zh_CN}><App /></ConfigProvider>, document.getElementById('root'));\n\n"],"sourceRoot":""}