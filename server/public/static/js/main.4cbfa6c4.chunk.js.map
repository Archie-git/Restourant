{"version":3,"sources":["api/ajax.js","api/index.js","util/memoryUtils.js","util/storageUtils.js","pages/login/login.jsx","components/header/index.jsx","components/left-nav/index.jsx","components/top-nav/index.jsx","pages/home/home.jsx","pages/home/home-edit.jsx","pages/home/home-view.jsx","components/loading/index.jsx","pages/product/category.jsx","pages/product/category-add.jsx","pages/product/category-edit.jsx","pages/product/category-view.jsx","pages/product/product.jsx","components/picture-wall/picture-wall.jsx","pages/product/product-add.jsx","pages/product/product-edit.jsx","pages/product/product-view.jsx","pages/order/order.jsx","pages/order/order-view.jsx","pages/order/stage.jsx","pages/member/member.jsx","pages/member/member-add.jsx","pages/member/member-edit.jsx","pages/member/member-view.jsx","pages/employee/employee.jsx","pages/employee/employee-add.jsx","pages/employee/employee-view.jsx","pages/employee/employee-edit.jsx","pages/employee/role.jsx","pages/employee/role-add.jsx","pages/employee/role-edit.jsx","pages/employee/user.jsx","pages/employee/user-add.jsx","pages/employee/user-edit.jsx","pages/stock/stock.jsx","pages/stock/stock-add.jsx","pages/stock/stock-log-view.jsx","pages/stock/stock-log.jsx","pages/stock/stock-view.jsx","pages/stock/stock-edit.jsx","pages/stock/inventory.jsx","pages/stock/inventory-view.jsx","pages/stock/inventory-add.jsx","pages/admin/admin.jsx","App.js","index.js","assets/images/logo.png"],"names":["ajax","url","data","type","Promise","resolve","axios","get","params","post","then","response","catch","err","message","error","reqLogin","username","password","reqShopInfo","updateShopInfo","reqCategoryList","updateCategoryList","addCategoryList","reqProductList","reqProductDelete","updateProductList","reqProductSearch","reqImgDelete","name","reqStockList","reqStockCategory","reqStockSearch","addStockList","reqStocklogList","addStocklogList","reqCustomerList","reqMemberList","reqMemberSearch","value","reqMemberAdd","updateMemberList","reqEmployeeList","reqEmployeeSearch","addEmployeeList","updateEmployeeList","reqInventoryList","reqInventoryAdd","reqInventoryUpdate","reqUserList","reqUserAdd","reqUserUpdate","reqOrderList","reqFrontdeskList","reqOrderSearch","id","reqOrderRange","start","end","reqOrderUpdate","reqRoleList","reqRoleAdd","reqRoleUpdate","user","others","store","require","set","remove","Login","handleSubmit","e","preventDefault","props","form","validateFields","values","a","response1","response2","status","success","permission","forEach","item","role","split","memoryUtils","storageUtils","history","replace","console","log","this","validatePwd","rule","callback","length","test","validateUser","JSON","stringify","to","className","src","logo","alt","onSubmit","Item","getFieldDecorator","rules","validator","prefix","style","color","placeholder","htmlType","React","Component","create","Header","UNSAFE_componentWillMount","intervalId","setInterval","time","Date","month","getMonth","setState","memoryUtil","location","weather_txt","weather_code","date","getFullYear","getDate","logout","loading","setTimeout","storageUtil","state","clearInterval","marginRight","placement","title","okType","onConfirm","okText","cancelText","withRouter","SubMenu","LeftNav","menu","key","icon","display","children","selectedKeys","getSelectedKeys","pathname","openKeys","getOpenKeys","rootSubmenuKeys","onOpenChange","latestOpenKey","find","indexOf","closeSubmenuAll","selectedKey","openKey","Logo","mode","theme","map","TopNav","nav","index","fontWeight","cursor","margin","Home","week","day","getDay","arr","splice","concat","weekData","handleDetail","push","getOption","text","tooltip","trigger","legend","selectedMode","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","series","stack","quantity","amount","getPercentForm","num","toFixed","quantityPercent","amountPercent","textAlign","onClick","verticalAlign","width","border","borderBottom","padding","quantityToday","fontSize","amountToday","option","EditHome","opentime","businesshour","closetime","fileList","uid","profile","validateName","handleBack","moment","_i","timerID","getBase64","file","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleCancel","previewVisible","handlePreview","preview","originFileObj","previewImage","handleChange","uploadButton","extra","labelCol","span","wrapperCol","marginTop","label","initialValue","required","action","accept","listType","onPreview","onChange","visible","footer","onCancel","address","seats","tel","notice","format","story","TextArea","rows","treaty","ViewHome","handleEdit","BtnGroup","paddingLeft","height","borderRadius","Loading","size","Category","refreshTable","isLoading","level","levelText","msg","handleIsnavChange","record","isnav","handleSearch","handleDelete","confirm","content","onOk","handleAdd","handleView","columns","render","dataIndex","sorter","b","son","defaultChecked","filters","onFilter","Search","float","onSearch","enterButton","dataSource","rowKey","bordered","AddCategory","Number","Option","valuePropName","EditCategory","note","ViewCategory","textIndent","Product","componentWillUnmount","clearTimeout","formRef","rowSelection","selectedRowKeys","options1","options2","categoryFilters","item1","item2","category","categoryName","handleStateChange","string","obj","handleSelectChange","selectedType","hasOwnProperty","handleCascaderChange","operation","handleOperate","formRef1","resetFields","selectedCategory","price","integral","onsale","isnew","recommend","options","PicturesWall","urlArr","imgs","urls","join","AddProduct","category_options","validateNumber","validatePrice","validateUnit","validateNoteProduct","validateIntegral","validateIntroduceTitle","validateIntroduceContent","deleted","hasFeedback","validate","addonAfter","Group","min","max","step","EditProduct","categoryOptions","number","unit","introduce","tip","description","discount_gold","discount_platinum","discount_diamond","pictures","ViewProduct","stateYes","stateNo","marginLeft","Order","componentDidMount","timerID1","searching","timerID2","response3","commodity","parse","customer","reverse","handleCustomerDetail","handleComplete","getTimeForm","hour","getHours","minute","getMinutes","second","getSeconds","getTimePicker","handleDatePickerChange","WeekPicker","handleWeekPickerChange","MonthPicker","handleMonthPickerChange","RangePicker","handleRangePickerChange","dateString","getTime","startOf","endOf","dates","dateStrings","column","seat","count","createtime","starArr","i","stars","urged","overflow","defaultValue","ViewOrder","payment","evaluation","Stage","filter","Member","AddCustomer","orderid","addonBefore","buttonStyle","Button","EditCustomer","ViewCustomer","Employee","department","departmentFilter","duty","dutyFilter","Set","workid","gender","age","entrytime","salary","AddEmployee","handleNext","current","handlePrevious","birthday","graduatetime","onTabChange","getDateTime","getMonthTime","value1","formItemLayout","contentList","tab1","identity","nation","origin","marriage","degree","institution","tab2","steps","tabList","tab","activeTabKey","Step","ViewEmployee","EditEmployee","updateData","disabled","Role","roleUser","item3","creater","createrRole","createrName","viewVisible","AddRole","temp","target","checked","marginBottom","EditRole","getFatherChecked","User","handleRoleView","AddUser","EditUser","rolename","email","Stock","excess","warning","stockid","manager","latestTime","stockname","AddStock","insertId","handleAddClick","handleNameChange","categoryAdd","compact","StocklogView","header","amout","String","info","before","Object","getOwnPropertyNames","StockLog","data1","data2","sort","pop","logInfo","pagination","pageSize","renderItem","ViewStock","EditStock","tag","initialData","Inventory","createrFilters","tableData","dateRange","NaN","handleDeal","isNaN","searchValue","getVariance","expect","ret","creatername","ViewInventory","detail","AddInventory","Sider","Content","Footer","Admin","position","paddingBottom","backgroundColor","minHeight","exact","path","component","AddMember","EditMember","ViewMember","App","locale","ReactDOM","zh_CN","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4cbfa6c4.chunk.js","sourcesContent":["/*能发送异步ajax的函数模块，\r\n*封装Axios库，\r\n* 返回的是一个promise对象*/\r\n\r\nimport axios from 'axios';\r\nimport {message} from 'antd';\r\n\r\nexport default function ajax(url,data={},type='GET') {\r\n    return new Promise(resolve => {\r\n        let promise = null;\r\n        if(type === 'GET'){\r\n            promise = axios.get(url, {\r\n                params: data\r\n            });\r\n        } else {\r\n            promise = axios.post(url, data)\r\n        }\r\n        promise.then(response=>{\r\n            resolve(response.data)\r\n        }).catch((err)=>{\r\n            message.error(\"请求失败 \"+err.message)\r\n        })\r\n    })\r\n}","/*该模块包含应用中所有接口请求函数\r\n*每个函数的返回值都是promise\r\n */\r\nimport ajax from './ajax';\r\nimport jsonp from './jsonp'\r\n\r\n\r\nconst WEATHER_URL=\"https://free-api.heweather.net/s6/weather/now\";\r\nconst WEATHER_KEY=\"0894aab8b0394389a7ac887e32db9c30\";\r\nconst LOCATION_URL=\"https://apis.map.qq.com/ws/location/v1/ip\";\r\nconst LOCATION_KEY=\"LOABZ-ONL6F-CLXJZ-N4A2L-AB74O-ITFWZ\";\r\n\r\n//header;\r\nexport const reqWeather = (location, key=WEATHER_KEY) => ajax(WEATHER_URL,{location: location, key: key},'GET');\r\nexport const reqCity = (key=LOCATION_KEY) => jsonp(LOCATION_URL, {key});\r\n\r\n//basic requests;\r\nexport const reqLogin = (username,password) => ajax('/login',{username: username, password: password},'POST');\r\n\r\n//home\r\nexport const reqShopInfo = () => ajax('/shop/info', null, 'GET');\r\nexport const updateShopInfo = (data) => ajax('/shop/update', data, 'POST');\r\n\r\n//category;\r\nexport const reqCategoryList = () => ajax('/category/list',null ,'GET');\r\nexport const updateCategoryList = (data) => ajax('/category/update', data, 'POST');\r\nexport const reqCategorySearch = (name) => ajax('/category/search', {name}, 'GET');\r\nexport const reqCategoryDelete = (id) => ajax('/category/delete', {id}, 'GET');\r\nexport const addCategoryList = (data) => ajax('/category/add', data, 'POST');\r\n\r\n//product\r\nexport const reqProductList = () => ajax('/product/list', null, 'GET');\r\nexport const reqProductDelete = (data) => ajax('/product/delete', data, 'POST');\r\nexport const updateProductList = (data) => ajax('/product/update', data, 'POST');\r\nexport const addProductList = (data) => ajax('/product/add', data, 'POST');\r\nexport const reqProductSearch = (data) => ajax('/product/search', data, 'POST');\r\n\r\n//file\r\nexport const reqImgDelete = (name) => ajax('/file/delete', {name}, 'GET');\r\n\r\n//stock\r\nexport const reqStockList = () => ajax('/stock/list', null, 'GET');\r\nexport const reqStockCategory = () => ajax('/stock/category', null, 'GET');\r\nexport const reqStockDelete = (id) => ajax('/stock/delete', {id}, 'GET');\r\nexport const reqStockSearch = (name) => ajax('/stock/search', {name}, 'GET');\r\nexport const addStockList = (data) => ajax('/stock/add', data, 'POST');\r\nexport const updateStockList = (data) => ajax('/stock/update', data, 'POST');\r\n\r\n//stocklog\r\nexport const reqStocklogList = (data) => ajax('/stock/stocklog-list', data, 'GET');\r\nexport const addStocklogList = (data) => ajax('/stock/stocklog-add', data, 'POST');\r\n\r\n//customer\r\nexport const reqCustomerList = () => ajax('/customer/list', null, 'GET');\r\nexport const reqMemberList = () => ajax('/customer/member-list', null, 'GET');\r\nexport const reqMemberSearch = (value) => ajax('/customer/member-search', {value}, 'GET');\r\nexport const reqMemberDelete = (id) => ajax('/customer/delete', {id}, 'GET');\r\nexport const reqMemberAdd = (data) => ajax('/customer/add', data, 'POST');\r\nexport const updateMemberList = (data) => ajax('/customer/update', data, 'POST');\r\n\r\n//employee\r\nexport const reqEmployeeList = () => ajax('/employee/list', null, 'GET');\r\nexport const reqEmployeeDelete = (id) => ajax('/employee/delete', {id}, 'GET');\r\nexport const reqEmployeeSearch = (value) => ajax('/employee/search', {value}, 'GET');\r\nexport const addEmployeeList = (data) => ajax('/employee/add', data, 'POST');\r\nexport const updateEmployeeList = (data) => ajax('/employee/update', data, 'POST');\r\n\r\n//inventory\r\nexport const reqInventoryList = () => ajax('/inventory/list', null, 'GET');\r\nexport const reqInventoryAdd = (data) => ajax('/inventory/add', data, 'POST');\r\nexport const reqInventoryUpdate = (data) => ajax('/inventory/update', data, 'POST');\r\nexport const reqInventoryDelete = (id) => ajax('/inventory/delete', {id}, 'GET');\r\n\r\n\r\n//user\r\nexport const reqUserList = () => ajax('/user/list', null, 'GET');\r\nexport const reqUserDelete = (id) => ajax('/user/delete', {id}, 'GET');\r\nexport const reqUserAdd = (data) => ajax('/user/add', data, 'POST');\r\nexport const reqUserUpdate = (data) => ajax('/user/update', data, 'POST');\r\n\r\n//order\r\nexport const reqOrderList = () => ajax('/order/list', null, 'GET');\r\nexport const reqWeekOrder = () => ajax('/order/week-list', null, 'GET');\r\nexport const reqFrontdeskList = () => ajax('/order/frontdesk-list', null, 'GET');\r\nexport const reqOrderSearch = (id) => ajax('/order/search', {id}, 'GET');\r\nexport const reqOrderRange = (start,end) => ajax('/order/range', {start, end}, 'GET');\r\nexport const reqOrderUpdate = (data) => ajax('/order/update', data, 'POST');\r\n\r\n//Role\r\nexport const reqRoleList = () => ajax('/role/list', null, 'GET');\r\nexport const reqRoleDelete = (id) => ajax('/role/delete', {id}, 'GET');\r\nexport const reqRoleAdd = (data) => ajax('/role/add', data, 'POST');\r\nexport const reqRoleUpdate = (data) => ajax('/role/update', data, 'POST');\r\n\r\n//Rule\r\nexport const reqRuleList = () => ajax('/rule/list', null, 'GET');\r\nexport const reqRuleUpdate = (data) => ajax('/rule/update', data, 'POST');\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default {\r\n    user : {},\r\n    others: {}\r\n}","let store=require('store');\r\nconst USER_KEY='user_key';\r\nexport default{\r\n    saveUser(user){\r\n        // localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n        store.set(USER_KEY,user)\r\n    },\r\n    getUser(){\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n        return store.get(USER_KEY) || {}\r\n    },\r\n    removeUser(){\r\n        // localStorage.removeItem(USER_KEY)R_KEY\r\n        store.remove(USER_KEY)\r\n    }\r\n}","import React from 'react';\r\nimport {Form,Input,Icon,Button,message} from 'antd';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './login.less';\r\nimport logo from '../../assets/images/logo.png';\r\nimport {reqLogin, reqRoleList} from '../../api';\r\nimport memoryUtils from '../../util/memoryUtils';\r\nimport storageUtils from '../../util/storageUtils';\r\n//登录的路由组件\r\nclass Login extends React.Component{\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err,values)=>{\r\n            if(!err){\r\n                const {username,password}=values;\r\n                const response1 = await reqLogin(username,password);\r\n                const response2 = await reqRoleList();\r\n                if(response1.status===0 && response2.status===0){\r\n                    message.success('登录成功');\r\n                    let data = response1.data;\r\n                    let permission = [];\r\n                    response2.data.forEach(item => {\r\n                        if(response1.data.role===item.id) permission = item.permission.split(\"-\")\r\n                    });\r\n                    data.permission = permission;\r\n                    memoryUtils.user = response1.data;\r\n                    storageUtils.saveUser(response1.data);\r\n                    this.props.history.replace('/')\r\n                }\r\n            }else{\r\n                console.log(\"校验失败\")\r\n            }\r\n        })\r\n    };\r\n    validatePwd=(rule,value,callback)=>{\r\n        if(!value){\r\n            callback(\"请输入密码\")\r\n        }else if(value.length<4){\r\n            callback(\"密码长度不能小于4位\")\r\n        }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n            callback(\"密码必须由字母、数字或字符串组成\")\r\n        }else if(value.length>12){\r\n            callback(\"密码长度不能大于12位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUser=(rule,value,callback)=>{\r\n        if(!value){\r\n            callback(\"请输入用户名\")\r\n        }else if(value.length<4){\r\n            callback(\"用户名长度不能小于4位\")\r\n        }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n            callback(\"用户名必须由字母、数字或字符串组成\")\r\n        }else if(value.length>12){\r\n            callback(\"用户名长度不能大于12位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    render(){\r\n        const user=memoryUtils.user;\r\n        if(JSON.stringify(user)!=='{}'){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        const form=this.props.form;\r\n        return (\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <h3>餐饮后台管理系统</h3>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <h2>用户登录</h2>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {\r\n                                form.getFieldDecorator('username',{\r\n                                    rules:[\r\n                                        {validator:this.validateUser}\r\n                                    ]\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"请输入用户名\"\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item>\r\n                            {\r\n                                form.getFieldDecorator('password',{\r\n                                    rules:[\r\n                                        {validator:this.validatePwd}\r\n                                    ]\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"请输入密码\"\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default Form.create()(Login);\r\n\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Popconfirm} from 'antd';\r\nimport './index.less';\r\n// import {reqWeather, reqCity} from '../../api/index';\r\nimport memoryUtil from '../../util/memoryUtils';\r\nimport storageUtil from '../../util/storageUtils';\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username: \"-\",\r\n            location: \"-\",\r\n            weather_txt: \"-\",\r\n            weather_code: \"100\",\r\n            date: \"-\",\r\n            loading:false\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        // const response1=await reqCity();\r\n        // response1.status===0 ? memoryUtil.others.location=response1.result.ad_info.district : console.log(\"请求位置信息失败  \"+response1.message);\r\n        // const response2=await reqWeather(memoryUtil.others.location);\r\n        // if(response2.HeWeather6[0].status===\"ok\"){\r\n        //     memoryUtil.others.weather_txt=response2.HeWeather6[0].now.cond_txt;\r\n        //     memoryUtil.others.weather_code=response2.HeWeather6[0].now.cond_code;\r\n        // }else{\r\n        //     console.log(\"请求天气信息失败  \"+response2.HeWeather6[0].status)\r\n        // }\r\n        this.intervalId=setInterval(() => {\r\n            let time=new Date();\r\n            let month=time.getMonth()+1;\r\n            this.setState({\r\n                username: memoryUtil.user.username,\r\n                location: memoryUtil.others.location,\r\n                weather_txt: memoryUtil.others.weather_txt,\r\n                weather_code: memoryUtil.others.weather_code,\r\n                date: time.getFullYear()+\"-\"+month+\"-\"+time.getDate()\r\n            })\r\n        }, 1000)\r\n    };\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId)\r\n    };\r\n    logout= () => {\r\n        this.setState({ loading: true });\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                memoryUtil.user={};\r\n                memoryUtil.others={};\r\n                storageUtil.removeUser();\r\n                this.props.history.replace('/login');\r\n                resolve()\r\n            }, 1000);\r\n        }).catch(() => console.log('登出失败'));\r\n    };\r\n    render(){\r\n        return (\r\n            <div className=\"header\">\r\n                <span>{this.state.date}</span>\r\n                <span>{this.state.location}</span>\r\n                {/*<img src={\"https://cdn.heweather.com/cond_icon/\"+this.state.weather_code+\".png\"} alt=\"weather\" />*/}\r\n                {/*<span style={{marginRight: \"100px\"}}>{this.state.weather_txt}</span>*/}\r\n                <span style={{marginRight: \"20px\"}}>欢迎! {this.state.username}</span>\r\n                <Popconfirm\r\n                    placement=\"bottomRight\"\r\n                    title=\"确定要退出系统吗？\"\r\n                    okType=\"danger\"\r\n                    onConfirm={this.logout}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <Button style={{marginRight: \"50px\"}} type=\"primary\" loading={this.state.loading}>退出</Button>\r\n                </Popconfirm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  withRouter(Header);","import React from 'react';\r\nimport './index.less';\r\nimport Logo from '../../assets/images/logo.png';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {Menu,Icon} from 'antd';\r\n// import menuList from '../../config/menuConfig';\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst {SubMenu}=Menu;\r\n\r\nclass LeftNav extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            menu: [],\r\n            selectedKeys: [],\r\n            openKeys: []\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = () => {\r\n        let menu = [\r\n            {\r\n                key: \"/home\",\r\n                title: \"首页\",\r\n                icon: \"home\",\r\n                display: 1\r\n            },\r\n            {\r\n                key: \"/order\",\r\n                title: \"订单管理\",\r\n                icon: \"account-book\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/order\",\r\n                        title: \"全部订单\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/order/stage\",\r\n                        title: \"前台管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/product\",\r\n                title: \"商品管理\",\r\n                icon: \"shopping\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/product/category\",\r\n                        title: \"商品分类\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/product\",\r\n                        title: \"商品列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/product/add\",\r\n                        title: \"添加商品\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/stock\",\r\n                title: \"库存管理\",\r\n                icon: \"appstore\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/stock\",\r\n                        title: \"库存信息\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/stock/inventory\",\r\n                        title: \"库存盘点\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/member\",\r\n                title: \"会员管理\",\r\n                icon: \"crown\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/member\",\r\n                        title: \"会员列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/member/add\",\r\n                        title: \"新增会员\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/employee\",\r\n                title: \"人事管理\",\r\n                icon: \"team\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/employee\",\r\n                        title: \"员工列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/employee/user\",\r\n                        title: \"用户列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/employee/role\",\r\n                        title: \"角色管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        memoryUtils.user.permission.forEach(item => {\r\n            switch (item) {\r\n                case '全部订单':\r\n                    menu[1].display = 1;\r\n                    menu[1].children[0].display = 1;\r\n                    break;\r\n                case '前台管理':\r\n                    menu[1].display = 1;\r\n                    menu[1].children[1].display = 1;\r\n                    break;\r\n                case '商品分类':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[0].display = 1;\r\n                    break;\r\n                case '商品列表':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[1].display = 1;\r\n                    break;\r\n                case '添加商品':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[2].display = 1;\r\n                    break;\r\n                case '库存信息':\r\n                    menu[3].display = 1;\r\n                    menu[3].children[0].display = 1;\r\n                    break;\r\n                case '库存盘点':\r\n                    menu[3].display = 1;\r\n                    menu[3].children[1].display = 1;\r\n                    break;\r\n                case '会员列表':\r\n                    menu[4].display = 1;\r\n                    menu[4].children[0].display = 1;\r\n                    break;\r\n                case '新增会员':\r\n                    menu[4].display = 1;\r\n                    menu[4].children[1].display = 1;\r\n                    break;\r\n                case '员工列表':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[0].display = 1;\r\n                    break;\r\n                case '用户列表':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[1].display = 1;\r\n                    break;\r\n                case '角色管理':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[2].display = 1;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        this.setState({\r\n            menu: menu,\r\n            selectedKeys: this.getSelectedKeys(this.props.location.pathname),\r\n            openKeys: this.getOpenKeys(this.props.location.pathname)\r\n        })\r\n    };\r\n    rootSubmenuKeys = ['/home', '/order', '/product','/category','/stock', '/member','/employee'];\r\n    onOpenChange = openKeys => {\r\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\r\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            this.setState({ openKeys });\r\n        } else {\r\n            this.setState({\r\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\r\n            });\r\n        }\r\n    };\r\n    closeSubmenuAll = () =>{\r\n        this.setState({openKeys:[]});\r\n    };\r\n    getSelectedKeys = (pathname) => {\r\n        // let selectedKey = '';\r\n        // switch(pathname){\r\n        //     case '/order/stage': selectedKey = '/order/stage'; break;\r\n        //     case '/product/category': selectedKey = '/product/category'; break;\r\n        //     case '/product/add': selectedKey = '/product/add'; break;\r\n        //     case '/stock/inventory': selectedKey = '/stock/inventory'; break;\r\n        //     case '/member/add': selectedKey = '/member/add'; break;\r\n        //     case '/employee/user': selectedKey = '/employee/user'; break;\r\n        //     case '/employee/role': selectedKey = '/employee/role'; break;\r\n        //     default: selectedKey = '/'+pathname.split('/')[1];\r\n        // }\r\n        // return [selectedKey];\r\n        \r\n        let selectedKey = '';\r\n        switch (pathname) {\r\n            // 首页\r\n            case '/home':\r\n            case '/home/view':\r\n            case '/home/edit': selectedKey = '/home'; break;\r\n            // 订单管理\r\n            case '/order':\r\n            case '/order/view': selectedKey = '/order'; break;\r\n            case '/order/stage':\r\n            case '/order/stage/view': selectedKey = '/order/stage'; break;\r\n            // 商品管理\r\n            case '/product':\r\n            case '/product/view':\r\n            case '/product/edit': selectedKey = '/product'; break;\r\n            case '/product/add': selectedKey = '/product/add'; break;\r\n            case '/product/category':\r\n            case '/product/category/view':\r\n            case '/product/category/add':\r\n            case '/product/category/edit': selectedKey = '/product/category'; break;\r\n            //库存管理\r\n            case '/stock':\r\n            case '/stock/view':\r\n            case '/stock/add':\r\n            case '/stock/edit':\r\n            case '/stock/log': selectedKey = '/stock'; break;\r\n            case '/stock/inventory':\r\n            case '/stock/inventory/view':\r\n            case '/stock/inventory/add': selectedKey = '/stock/inventory'; break;\r\n            //会员管理\r\n            case '/member':\r\n            case '/member/view':\r\n            case '/member/edit': selectedKey = '/member'; break;\r\n            case '/member/add': selectedKey = '/member/add'; break;\r\n            //人事管理\r\n            case '/employee':\r\n            case '/employee/view':\r\n            case '/employee/add':\r\n            case '/employee/edit': selectedKey = '/employee'; break;\r\n            case '/employee/user':\r\n            case '/employee/user/add':\r\n            case '/employee/user/edit': selectedKey = '/employee/user'; break;\r\n            case '/employee/role':\r\n            case '/employee/role/add':\r\n            case '/employee/role/edit': selectedKey = '/employee/role'; break;\r\n            default: break;\r\n        }\r\n        return [selectedKey]\r\n    };\r\n    getOpenKeys = (pathname) => {\r\n        let openKey = '';\r\n        switch(pathname){\r\n            case '/product/category': openKey = '/product'; break;\r\n            case '/stock/inventory': openKey = '/stock'; break;\r\n            case '/employee/role': openKey = '/employee'; break;\r\n            case '/employee/user': openKey = '/employee'; break;\r\n            default: openKey = '/'+pathname.split('/')[1];\r\n        }\r\n        return [openKey];\r\n    };\r\n    render(){\r\n        return (\r\n            <div className=\"left-nav\">\r\n                <Link to=\"/\">\r\n                    <div className=\"left-nav-header\">\r\n                        <img src={Logo} alt=\"logo\"/>\r\n                        <h1>餐厅后台</h1>\r\n                    </div>\r\n                </Link>\r\n                <Menu\r\n                    selectedKeys={this.getSelectedKeys(this.props.location.pathname)}\r\n                    mode=\"inline\"\r\n                    openKeys={this.state.openKeys}\r\n                    onOpenChange={this.onOpenChange}\r\n                    // style={{backgroundColor:\"#0354d9\"}}\r\n                    theme=\"dark\"\r\n                >\r\n                    {\r\n                        this.state.menu.map((item) => {\r\n                            if(!item.children){\r\n                                return (\r\n                                    <Menu.Item\r\n                                        key={item.key}\r\n                                        style={{display: item.display===0 ? \"none\" : \"block\"}}\r\n                                    >\r\n                                        <Link to={item.key}><Icon type={item.icon}/>{item.title}</Link>\r\n                                    </Menu.Item>\r\n                                )\r\n                            }else{\r\n                                return  (\r\n                                    <SubMenu\r\n                                        key={item.key}\r\n                                        title={(<span><Icon type={item.icon}/>{item.title}</span>)}\r\n                                        style={{display: item.display===0 ? \"none\" : \"block\"}}\r\n                                    >\r\n                                        {\r\n                                            item.children.map(item => {\r\n                                                return (\r\n                                                    <Menu.Item\r\n                                                        key={item.key}\r\n                                                        style={{display: item.display===0 ? \"none\" : \"block\"}}\r\n                                                    >\r\n                                                        <Link to={item.key}>{item.title}</Link>\r\n                                                    </Menu.Item>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </SubMenu>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(LeftNav);","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './index.less';\r\n\r\nclass TopNav extends React.Component{\r\n    // handleNavClick = (item) => {\r\n    //     let nav = \"\";\r\n    //     switch(item){\r\n    //         case \"首页\": nav=\"/home\";break;\r\n    //         // 订单管理\r\n    //         case \"全部订单\": nav=\"/order\";break;\r\n    //         case \"订单详情\": nav=\"/order-view\";break;\r\n    //         case \"前台管理\": nav=\"/order-stage\";break;\r\n    //         // 商品管理\r\n    //         case \"商品分类\": nav=\"/category\";break;\r\n    //         case \"新增品类\": nav=\"/category-add\";break;\r\n    //         case \"编辑品类\": nav=\"/category-edit\";break;\r\n    //         case \"品类详情\": nav=\"/category-view\";break;\r\n    //         case \"商品列表\": nav=\"/product\";break;\r\n    //         case \"添加商品\": nav=\"/product-add\";break;\r\n    //         case \"编辑商品\": nav=\"/product-edit\";break;\r\n    //         case \"商品详情\": nav=\"/product-view\";break;\r\n    //         // 库存管理\r\n    //         case \"库存信息\": nav=\"/stock\";break;\r\n    //         case \"新增库存\": nav=\"/stock-add\";break;\r\n    //         case \"编辑库存\": nav=\"/stock-add\";break;\r\n    //         case \"货物详情\": nav=\"/stock-view\";break;\r\n    //         case \"库存日志\": nav=\"/stock-log\";break;\r\n    //         case \"库存盘点\": nav=\"/inventory\";break;\r\n    //         case \"新建盘点单\": nav=\"/inventory-add\";break;\r\n    //         case \"盘点详情\": nav=\"/inventory-view\";break;\r\n    //         //会员管理\r\n    //         case \"会员列表\": nav=\"/member\";break;\r\n    //         case \"编辑会员\": nav=\"/member-edit\";break;\r\n    //         case \"新增会员\": nav=\"/member-add\";break;\r\n    //         case \"会员详情\": nav=\"/member-view\";break;\r\n    //         //人事管理\r\n    //         case \"员工列表\": nav=\"/employee\";break;\r\n    //         case \"新增员工\": nav=\"/employee-add\";break;\r\n    //         case \"编辑员工\": nav=\"/employee-edit\";break;\r\n    //         case \"员工详情\": nav=\"/employee-view\";break;\r\n    //         case \"用户列表\": nav=\"/user\";break;\r\n    //         case \"创建用户\": nav=\"/user-add\";break;\r\n    //         case \"角色管理\": nav=\"/role\";break;\r\n    //         case \"新增角色\": nav=\"/role-add\";break;\r\n    //         case \"编辑角色\": nav=\"/role-edit\";break;\r\n    //         //财务管理（待完善）\r\n    //         default : nav=\"home\";break;\r\n    //     }\r\n    //     this.props.history.replace(nav)\r\n    // };\r\n    render(){\r\n        return (\r\n            <div className=\"top-nav-container\">\r\n                {\r\n                    this.props.nav.map((item,index) => {\r\n                        // return index===0 ? (\r\n                        //     <span key={index}>\r\n                        //         <span style={{fontWeight: \"bold\", cursor: \"pointer\"}}>{item}</span>\r\n                        //         <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                        //     </span>\r\n                        // ) : index+1===this.props.nav.length ? (\r\n                        //     <span key={index}\r\n                        //           style={{cursor: \"pointer\", color: \"#98a9c4\"}}\r\n                        //           onClick={()=>this.handleNavClick(item)}\r\n                        //     >{item}</span>\r\n                        // ) : (\r\n                        //     <span key={index}>\r\n                        //         <span key={index}\r\n                        //               style={{fontWeight: \"bold\", cursor: \"pointer\"}}\r\n                        //               onClick={()=>this.handleNavClick(item)}>{item}</span>\r\n                        //         <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                        //     </span>\r\n                        // )\r\n                        return index===0 && index===this.props.nav.length ? (\r\n                            <span key={index}>\r\n                                <span style={{fontWeight: \"bold\", cursor: \"default\"}}>{item}</span>\r\n                                <span style={{\r\n                                    margin: \"0 10px\",\r\n                                    color: \"#98a9c4\",\r\n                                }}>/</span>\r\n                            </span>\r\n                        ) : index+1===this.props.nav.length ? (\r\n                            <span key={index} style={{color: \"#98a9c4\",  cursor: \"default\"}}>{item}</span>\r\n                        ) : (\r\n                            <span key={index}>\r\n                                <span key={index} style={{fontWeight: \"bold\",  cursor: \"default\"}}>{item}</span>\r\n                                <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TopNav);","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Icon} from \"antd\";\r\nimport {reqShopInfo, reqWeekOrder} from \"../../api\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            weekData: {\r\n                amount: [],\r\n                quantity: [],\r\n                date: [],\r\n                quantityPercent: 0.00,\r\n                amountPercent: 0.00\r\n            }\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response1 = await reqShopInfo();\r\n        const response2 = await reqWeekOrder();\r\n        if(response1.status === 0 && response2.status === 0){\r\n            // 获取周次和周数据\r\n            let week = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\r\n            let day = new　Date().getDay();\r\n            let arr = week.splice(day+1, 7-day-1);\r\n            week = arr.concat(week);\r\n            week = week.map(item => {\r\n                if(week.indexOf(item) < week.indexOf(\"周日\")) item = '上' + item;\r\n                if(week.indexOf(item) === week.length-1) item = '今天';\r\n                return item;\r\n            });\r\n            let weekData = response2.data;\r\n            weekData.date = week;\r\n            //获取月份和月数据\r\n            this.setState({\r\n                weekData: weekData,\r\n                data: response1.data\r\n            });\r\n            console.log(weekData)\r\n        }\r\n    };\r\n    handleDetail = () => {\r\n        this.props.history.push({pathname: '/home/view', state: {data: this.state.data}})\r\n    };\r\n    getOption = () => {\r\n        return {\r\n            title: {\r\n                text: ''\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['数量', '总额'],\r\n                selectedMode: 'single'\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: true,\r\n                data: this.state.weekData.date\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [\r\n                {\r\n                    name: '数量',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    data: this.state.weekData.quantity\r\n                },\r\n                {\r\n                    name: '总额',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    data: this.state.weekData.amount\r\n                }\r\n            ]\r\n        }\r\n    };\r\n    getPercentForm = (num) => {\r\n        if(num > 1){\r\n            num = (num-1)*100\r\n        }else{\r\n            num = (1-num)*100\r\n        }\r\n        return num.toFixed(0)\r\n    };\r\n    render() {\r\n        return (\r\n            <div className='home-container'>\r\n                <TopNav nav={['首页']} />\r\n                <div style={{margin: \"20px 22px 0 40px\", textAlign: \"right\"}}>\r\n                    {/*<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"23px\", position: \"relative\", top: \"-10px\"}}>*/}\r\n                    {/*    {this.state.data.name}*/}\r\n                    {/*</span>*/}\r\n                    <Button type=\"primary\" onClick={this.handleDetail}>门店详情</Button>\r\n                </div>\r\n                {/*每周销售图*/}\r\n                <div style={{margin: \"20px\"}}>\r\n                    <div\r\n                        style={{\r\n                            display: \"inline-block\",\r\n                            verticalAlign: \"top\",\r\n                            width: \"19%\",\r\n                            margin: \"30px 2% 0 4%\",\r\n                            border: \"1px solid lightgray\"\r\n                        }}\r\n                    >\r\n                        <div style={{borderBottom: \"1px solid lightgray\", padding: \"20px\", fontWeight: \"bold\"}}>今日营收情况</div>\r\n                        <div style={{padding: \"20px 20px 5px\"}}>\r\n                            <div style={{fontWeight: \"bolder\"}}>订单数量：{this.state.weekData.quantityToday} 单</div>\r\n                            <div style={{fontSize: \"12px\", display: this.state.weekData.quantityPercent === \"Infinity\" || this.state.weekData.quantityPercent === \"NaN\" ? \"none\" : \"block\"}}>\r\n                                <span>日同比 {this.getPercentForm(this.state.weekData.quantityPercent)}%</span>\r\n                                {\r\n                                    this.state.weekData.quantityPercent > 1 ? (\r\n                                        <Icon type=\"arrow-up\" style={{color: \"green\"}}/>\r\n                                    ) : (\r\n                                        <Icon type=\"arrow-down\" style={{color: \"red\"}}/>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div style={{padding: \"10px 20px 20px\"}}>\r\n                            <div style={{fontWeight: \"bolder\"}}>营收总额：{this.state.weekData.amountToday} 元</div>\r\n                            <div style={{fontSize: \"12px\", display: this.state.weekData.amountPercent === \"Infinity\" || this.state.weekData.amountPercent === \"NaN\" ? \"none\" : \"block\"}}>\r\n                                <span>日同比 {this.getPercentForm(this.state.weekData.amountPercent)}%</span>\r\n                                {\r\n                                    this.state.weekData.amountPercent > 1 ? (\r\n                                        <Icon type=\"arrow-up\" style={{color: \"green\"}}/>\r\n                                    ) : (\r\n                                        <Icon type=\"arrow-down\" style={{color: \"red\"}}/>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: \"inline-block\", width: \"65%\", margin: \"0 5%\", verticalAlign: \"top\"}}>\r\n                        <ReactEcharts option={this.getOption()} />\r\n                    </div>\r\n                </div>\r\n                {/*每月销售图*/}\r\n                {/*<div style={{margin: \"100px 20px 20px\"}}>*/}\r\n                {/*    <ReactEcharts option={this.getOption()} />*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport {Form, Input, Card, Button, message, InputNumber, Upload, Modal, Icon} from 'antd';\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\nimport TopNav from \"../../components/top-nav\";\nimport {reqImgDelete, reqShopInfo, updateShopInfo} from \"../../api\";\n\nconst EditHome = Form.create({ name: 'category-add' })(\n    class extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                data: [],\n                fileList: [],\n                previewVisible: false,\n                previewImage: '',\n            }\n        }\n        UNSAFE_componentWillMount = async () => {\n            const response = await reqShopInfo();\n            if(response.status === 0){\n                let data = response.data;\n                data.opentime = data.businesshour.split(' ~ ')[0];\n                data.closetime = data.businesshour.split(' ~ ')[1];\n                let fileList = [{\n                    uid: 0,\n                    name: data.profile,\n                    status: 'done',\n                    url: '/upload/'+data.profile\n                }];\n                this.setState({\n                    data: data,\n                    fileList: fileList\n                });\n            }\n        };\n        validateName = (rule, value, callback) =>{\n            if(!value){\n                callback(\"请输入品类名称\")\n            }else if(value.length>10){\n                callback(\"请输入少于10个字符\")\n            }else{\n                callback()\n            }\n        };\n        handleBack = () => {\n            this.props.history.push({pathname: '/home/view', state: {data: this.state.data}})\n        };\n        handleSubmit = (e) => {\n            e.preventDefault();\n            this.props.form.validateFields( async (err, values) => {\n                if(!err){\n                    let data = values;\n                    data.profile = this.state.fileList[0].url.split('/upload/')[1];\n                    data.businesshour = moment(data.opentime, 'HH:mm')._i + ' ~ ' + moment(data.closetime, 'HH:mm')._i;\n                    delete data.opentime;\n                    delete data.closetime;\n                    const response = await updateShopInfo(data);\n                    if(response.status === 0){\n                        message.success(\"设置成功，即将返回门店信息页面\");\n                        this.timerID = setTimeout(()=>{\n                            this.props.history.push({pathname: '/home/view', state: {data: data}})\n                        }, 2000);\n                    }\n                }\n            });\n        };\n        getBase64 = (file) => {\n            return new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = () => resolve(reader.result);\n                reader.onerror = error => reject(error);\n            });\n        };\n        handleCancel = () => this.setState({ previewVisible: false });\n        handlePreview = async file => {\n            if (!file.url && !file.preview) {\n                file.preview = await this.getBase64(file.originFileObj);\n            }\n            this.setState({\n                previewImage: file.url || file.preview,\n                previewVisible: true,\n            });\n        };\n        handleChange = async ({ file, fileList }) => {\n            if(file.status === 'done'){\n                let response = file.response;\n                file = fileList[fileList.length-1];\n                file.name = response.data.name;\n                file.url = response.data.url;\n            } else if(file.status === 'removed'){\n                await reqImgDelete(file.name);\n            }\n            this.setState({ fileList })\n        };\n        render() {\n            const formItemLayout = {\n                labelCol: {span: 8},\n                wrapperCol: {span: 10}\n            };\n            const form = this.props.form;\n            const uploadButton = (\n                <div>\n                    <Icon type=\"plus\" />\n                    <div className=\"ant-upload-text\">Upload</div>\n                </div>\n            );\n            return (\n                <div>\n                    <TopNav nav={['首页', '门店详情', '编辑']} />\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑门店信息</span>}\n                          extra={<Button type=\"primary\" onClick={this.handleBack}>返回</Button>}\n                          style={{width: \"100%\", border: \"none\"}}\n                    >\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\n                                {form.getFieldDecorator('id', {\n                                    initialValue: this.state.data.id\n                                })(<Input/>)}\n                            </Form.Item>\n                            <Form.Item label=\"品牌名称：\">\n                                {form.getFieldDecorator('name', {\n                                    rules: [{required: true, validator: this.validateName }],\n                                    initialValue: this.state.data.name\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"头像：\">\n                                {form.getFieldDecorator('profile', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.profile\n                                })(\n                                    <div className=\"clearfix\">\n                                        <Upload\n                                            action=\"/file/upload\"\n                                            accept=\"image/*\"\n                                            name=\"image\"\n                                            listType=\"picture-card\"\n                                            fileList={this.state.fileList}\n                                            onPreview={this.handlePreview}\n                                            onChange={this.handleChange}\n                                        >\n                                            {this.state.fileList.length >= 1 ? null : uploadButton}\n                                        </Upload>\n                                        <Modal visible={this.state.previewVisible} footer={null} onCancel={this.handleCancel}>\n                                            <img alt=\"example\" style={{ width: '100%' }} src={this.state.previewImage} />\n                                        </Modal>\n                                    </div>\n                                )}\n                            </Form.Item>\n                            <Form.Item label=\"地址：\">\n                                {form.getFieldDecorator('address', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.address\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"桌数：\">\n                                {form.getFieldDecorator('seats', {\n                                    initialValue: this.state.data.seats\n                                })(<InputNumber />)}\n                            </Form.Item>\n                            <Form.Item label=\"电话：\">\n                                {form.getFieldDecorator('tel', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.tel\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"公告：\">\n                                {form.getFieldDecorator('notice', {\n                                    rules: [{required: true}],\n                                    initialValue: this.state.data.notice\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"营业时间：\">\n                                {form.getFieldDecorator('opentime', {\n                                    rules: [{required: true}],\n                                    initialValue: moment(this.state.data.opentime, 'HH:mm')\n                                })(<TimePicker format={'HH:mm'} />)}\n                            </Form.Item>\n                            <Form.Item label=\"打烊时间：\">\n                                {form.getFieldDecorator('closetime', {\n                                    rules: [{required: true}],\n                                    initialValue: moment(this.state.data.closetime, 'HH:mm')\n                                })(<TimePicker format={'HH:mm'} />)}\n                            </Form.Item>\n                            <Form.Item label=\"品牌故事：\">\n                                {form.getFieldDecorator('story', {\n                                    initialValue: this.state.data.story\n                                })(<Input.TextArea rows={10}/>)}\n                            </Form.Item>\n                            <Form.Item label=\"会员条款：\">\n                                {form.getFieldDecorator('treaty', {\n                                    initialValue: this.state.data.treaty\n                                })(<Input.TextArea rows={5}/>)}\n                            </Form.Item>\n                            <Form.Item>\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\n                            </Form.Item>\n                        </Form>\n                    </Card>\n                </div>\n            )\n        }\n    },\n);\n\nexport default EditHome;\n","import React from 'react';\nimport {Form, Card, Button} from 'antd';\nimport TopNav from \"../../components/top-nav\";\n\nconst ViewHome = Form.create({ name: 'category-add' })(\n    class extends React.Component {\n        handleEdit = () => {\n            this.props.history.push('/home/edit');\n        };\n        render() {\n            const formItemLayout = {\n                labelCol: {span: 8},\n                wrapperCol: {span: 10}\n            };\n            let data = this.props.location.state.data;\n            const BtnGroup = (\n                <div>\n                    <Button type=\"primary\" style={{marginRight: \"20px\"}} onClick={this.handleEdit}>编辑</Button>\n                    <Button type=\"primary\" onClick={() => this.props.history.push('/home')}>返回</Button>\n                </div>\n            );\n            return (\n                <div>\n                    <TopNav nav={['首页', '门店详情']} />\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>门店信息</span>}\n                          extra={BtnGroup}\n                          style={{width: \"100%\", border: \"none\"}}\n                    >\n                        <Form {...formItemLayout} style={{marginTop: \"20px\"}} onSubmit={this.handleSubmit}>\n                            <Form.Item label=\"店名\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.name}</span>\n                            </Form.Item>\n                            <Form.Item label=\"头像\">\n                                <span style={{paddingLeft:\"20px\"}}>\n                                    <img\n                                        src={'/upload/'+data.profile}\n                                        style={{\n                                            width: \"80px\",\n                                            height: \"80px\",\n                                            borderRadius: \"5px\",\n                                            padding: \"5px\",\n                                            border: \"1px solid lightgray\"\n                                        }}\n                                        alt=\"头像\"/>\n                                </span>\n                            </Form.Item>\n                            <Form.Item label=\"地址\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.address}</span>\n                            </Form.Item>\n                            <Form.Item label=\"桌数\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.seats}</span>\n                            </Form.Item>\n                            <Form.Item label=\"电话\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.tel}</span>\n                            </Form.Item>\n                            <Form.Item label=\"公告\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.notice}</span>\n                            </Form.Item>\n                            <Form.Item label=\"营业时间\">\n                                <span style={{paddingLeft:\"20px\"}}>{data.businesshour}</span>\n                            </Form.Item>\n                        </Form>\n                    </Card>\n                </div>\n            )\n        }\n    },\n);\n\nexport default ViewHome;\n","import React from 'react';\r\nimport './index.less';\r\nimport {Spin} from 'antd';\r\n\r\nclass Loading extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <Spin size=\"large\" />\r\n                <span>Loading. . .</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport {Table, Divider, Switch, message, Input, Button, Modal, Icon} from 'antd';\r\nimport Loading from '../../components/loading';\r\nimport TopNav from '../../components/top-nav'\r\nimport {reqCategoryList, updateCategoryList, reqCategorySearch, reqCategoryDelete} from '../../api';\r\n\r\nclass Category extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqCategoryList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = (response) => {\r\n        this.setState({isLoading: true});\r\n        this.timerID = setTimeout(() => {\r\n            if(response.status===0){\r\n                let data = response.data.map((item, index) => {\r\n                    item.index = index;\r\n                    switch (item.level) {\r\n                        case 0: item.levelText = '一级'; break;\r\n                        case 1: item.levelText = '二级'; break;\r\n                        case 2: item.levelText = '三级'; break;\r\n                        case 3: item.levelText = '四级'; break;\r\n                        case 4: item.levelText = '五级'; break;\r\n                        case 5: item.levelText = '六级'; break;\r\n                        case 6: item.levelText = '七级'; break;\r\n                        case 7: item.levelText = '八级'; break;\r\n                        case 8: item.levelText = '九级'; break;\r\n                        case 9: item.levelText = '十级'; break;\r\n                        default: break\r\n                    }\r\n                    return item\r\n                });\r\n                this.setState({isLoading: false, data: data})\r\n            }else if(response.status===1){\r\n                message.error(response.msg);\r\n                this.setState({isLoading: false, data: null})\r\n            }\r\n        }, 300)\r\n    };\r\n    handleIsnavChange = async (record) =>{\r\n        const response = await updateCategoryList({id: record.id, isnav: 1-record.isnav});\r\n        let data = this.state.data;\r\n        if(response.status === 0){\r\n            data.forEach(item => item.isnav = item.id===record.id ? 1-item.isnav : item.isnav);\r\n            this.setState({\r\n                data: data\r\n            });\r\n        }else if(response.status === 1){\r\n            this.setState({\r\n                data: data\r\n            });\r\n            message.error(response.msg)\r\n        }\r\n    };\r\n    handleSearch = async (value) => {\r\n        const response = value===\"\" ? await reqCategoryList() : await reqCategorySearch(value);\r\n        this.refreshTable(response);\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除品类\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqCategoryDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleAdd = () => {this.props.history.push('/product/category/add')};\r\n    handleEdit = (record) => {\r\n        this.props.history.push({\r\n            pathname: '/product/category/edit',\r\n            state: {data: record}\r\n        })\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/product/category/view', state: {data: record}})\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '品类名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '排序',\r\n                dataIndex: 'levelText',\r\n                key: 'levelText',\r\n                sorter: (a, b) => a.level-b.level\r\n            },\r\n            {\r\n                title: '子项数量',\r\n                dataIndex: 'son',\r\n                key: 'son',\r\n                sorter: (a, b) => a.son-b.son\r\n            },\r\n            {\r\n                title: '是否显示',\r\n                dataIndex: 'isnav',\r\n                key: 'isnav',\r\n                render: (text, record) => <Switch\r\n                    size=\"small\"\r\n                    onClick={()=>this.handleIsnavChange(record)}\r\n                    defaultChecked={text === 1}/>,\r\n                filters: [{text: '已显示', value: 1}, {text: '未显示', value: 0}],\r\n                onFilter: (value, record) => value===record.isnav\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['商品管理', '商品分类']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\"/>新增品类</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询品类名称\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Switch, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { addCategoryList } from \"../../api\";\r\n\r\nconst AddCategory = Form.create({ name: 'category-add' })(\r\n    class extends React.Component {\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.level = Number(data.level);\r\n                    data.isnav = data.isnav ? 1 : 0;\r\n                    data.son = 0;\r\n                    const response = await addCategoryList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增成功,即将返回品类列表\", 2);\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/product/category')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['商品管理', '商品分类', '新增品类']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增商品品类</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product/category')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"名称：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"级别：\">\r\n                                {form.getFieldDecorator('level', {\r\n                                    rules: [{required: true}]\r\n                                })(\r\n                                    <Select>\r\n                                        <Select.Option key={0}>第一级</Select.Option>\r\n                                        <Select.Option key={1}>第二级</Select.Option>\r\n                                        <Select.Option key={2}>第三级</Select.Option>\r\n                                        <Select.Option key={3}>第四级</Select.Option>\r\n                                        <Select.Option key={4}>第五级</Select.Option>\r\n                                        <Select.Option key={5}>第六级</Select.Option>\r\n                                        <Select.Option key={6}>第七级</Select.Option>\r\n                                        <Select.Option key={7}>第八级</Select.Option>\r\n                                        <Select.Option key={9}>第九级</Select.Option>\r\n                                        <Select.Option key={10}>第十级</Select.Option>\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"是否显示\">\r\n                                {form.getFieldDecorator('isnav', {\r\n                                    rules: [{required: true}],\r\n                                    valuePropName: \"checked\",\r\n                                    initialValue: false\r\n                                })(<Switch />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddCategory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select, Switch} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { updateCategoryList } from \"../../api\";\r\n\r\nconst EditCategory = Form.create({ name: 'category-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = () => {\r\n            this.setState({\r\n                data: this.props.location.state.data\r\n            })\r\n        };\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data = this.props.location.state.data;\r\n                    data.name = values.name;\r\n                    data.level = values.level;\r\n                    data.isnav = values.isnav === true ? 1 : 0;\r\n                    data.note = values.note;\r\n                    delete data.index;\r\n                    delete data.levelText;\r\n                    const response = await updateCategoryList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"更新品类信息成功,即将返回品类列表页面\", 2);\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/product/category')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['商品管理', '商品分类', '编辑品类']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑商品品类</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product/category')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"名称：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                    initialValue: this.state.data.name\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"级别：\">\r\n                                {form.getFieldDecorator('level', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.level\r\n                                })(\r\n                                    <Select>\r\n                                        <Select.Option key={0} value={0}>一级</Select.Option>\r\n                                        <Select.Option key={1} value={1}>二级</Select.Option>\r\n                                        <Select.Option key={2} value={2}>三级</Select.Option>\r\n                                        <Select.Option key={3} value={3}>四级</Select.Option>\r\n                                        <Select.Option key={4} value={4}>五级</Select.Option>\r\n                                        <Select.Option key={5} value={5}>六级</Select.Option>\r\n                                        <Select.Option key={6} value={6}>七级</Select.Option>\r\n                                        <Select.Option key={7} value={7}>八级</Select.Option>\r\n                                        <Select.Option key={8} value={8}>九级</Select.Option>\r\n                                        <Select.Option key={9} value={9}>十级</Select.Option>\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"是否显示\">\r\n                                {form.getFieldDecorator('isnav', {\r\n                                    rules: [{required: true}],\r\n                                    valuePropName: \"checked\",\r\n                                    initialValue: this.state.data.isnav===1\r\n                                })(<Switch />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: this.state.data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditCategory;\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, Form} from \"antd\";\r\n\r\nclass ViewCategory extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        console.log(data);\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '商品分类', '品类详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看品类详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product/category')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"名称\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"级别\">\r\n                            <span className=\"ant-form-text\">{this.state.data.levelText}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"是否显示\">\r\n                            <span className=\"ant-form-text\">{this.state.data.isnav ? '是' : '否'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"子项数量\">\r\n                            <span className=\"ant-form-text\">{this.state.data.son}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCategory;\r\n\r\n\r\n","import React from 'react';\r\nimport './product.less';\r\nimport {Button, Divider, Switch, Table, Modal, Row, Col, Cascader, Tag, Select, Input, Icon} from 'antd';\r\nimport {reqCategoryList, reqProductList, reqProductDelete, updateProductList, reqProductSearch} from '../../api';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass Product extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isLoading: true,\r\n            data: [],\r\n            options1: [],\r\n            options2: [],\r\n            selectedRowKeys: [],\r\n            operation: \"\",\r\n            selectedCategory: [],\r\n            categoryFilters: [],\r\n            selectedType: ''\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqProductList();\r\n        if(response.status === 0) this.refreshTable(response.data)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID);\r\n    };\r\n    formRef = {};\r\n    rowSelection = {\r\n        onChange: (selectedRowKeys) => {\r\n            this.setState({selectedRowKeys: selectedRowKeys})\r\n        }\r\n    };\r\n    refreshTable = async (data) => {\r\n        const response = await reqCategoryList();\r\n        if(response.status===0){\r\n            let options1 = [\r\n                {\r\n                    value: 'onsale-1',\r\n                    label: '商品上架',\r\n                },\r\n                {\r\n                    value: 'onsale-0',\r\n                    label: '商品下架',\r\n                },\r\n                {\r\n                    value: 'recommend-1',\r\n                    label: '设为推荐',\r\n                },\r\n                {\r\n                    value: 'recommend-0',\r\n                    label: '取消推荐',\r\n                },\r\n                {\r\n                    value: 'isnew-1',\r\n                    label: '设为新品',\r\n                },\r\n                {\r\n                    value: 'isnew-0',\r\n                    label: '取消新品',\r\n                },\r\n                {\r\n                    value: 'delete',\r\n                    label: '删除商品',\r\n                }\r\n            ];\r\n            let options2 = [];\r\n            let categoryFilters = [];\r\n            response.data.forEach(item1 => {\r\n                options2.push({label: item1.name, value: item1.id});\r\n                data.map(item2 => {\r\n                    categoryFilters.indexOf(item1.name)===-1 ? categoryFilters.push(item1.name) : categoryFilters.push();\r\n                    if(item2.category === item1.id) item2.categoryName = item1.name;\r\n                    if(item2.category === 999) item2.categoryName = '未分类';\r\n                    return item2;\r\n                })\r\n            });\r\n            categoryFilters = categoryFilters.map(item => {\r\n                return {text: item, value: item}\r\n            });\r\n            categoryFilters.push({text: '未分类', value: '未分类'});\r\n            options1.push({\r\n                label: '移至',\r\n                value: 'move',\r\n                children: options2\r\n            });\r\n            this.setState({\r\n                isLoading: true,\r\n                options1: options1,\r\n                options2: options2,\r\n                categoryFilters: categoryFilters\r\n            });\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data\r\n                })\r\n            }, 300);\r\n        }\r\n    };\r\n    handleStateChange = async (record, string) =>{\r\n        let obj={id: record.id};\r\n        obj[string]=1-record[string];\r\n        const response = await updateProductList(obj);\r\n        let data = this.state.data;\r\n        if(response.status === 0){\r\n            data.forEach(item => item[string] = item.id===record.id ? 1-item[string] : item[string]);\r\n            this.setState({\r\n                data: data\r\n            });\r\n        }\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/product/add')\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/product/view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/product/edit', state: {data: record}})\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除商品\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqProductDelete(record);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleSelectChange = (value) => {\r\n        this.setState({selectedType: value})\r\n    };\r\n    handleSearch = async (value) => {\r\n        let data = {\r\n            status: this.state.selectedType,\r\n            value: value\r\n        };\r\n        if(data.value===\"\" && data.status===\"\"){\r\n            const response = await reqProductList();\r\n            if(response.status === 0) this.refreshTable(response.data)\r\n        }else{\r\n            for(let key in data){\r\n                if(data.hasOwnProperty(key) && data[key].length !== 0){\r\n                    if(key === \"status\"){\r\n                        let arr = data.status.split('-');\r\n                        data[arr[0]] = Number(arr[1])\r\n                    }else{\r\n                        data[key] = typeof(data[key])===\"object\" ? data[key][0] : data[key]\r\n                    }\r\n                }\r\n            }\r\n            const response = await reqProductSearch(data);\r\n            if(response.status === 0) this.refreshTable(response.data)\r\n        }\r\n    };\r\n    handleCascaderChange = (value) => {\r\n        this.setState({operation: value})\r\n    };\r\n    handleOperate = async () => {\r\n        let operation = this.state.operation;\r\n        if(operation.length === 0){\r\n            this.setState({selectedRowKeys: []});\r\n            this.refreshTable(this.state.data)\r\n        }else if(operation.length === 1){\r\n            if(operation[0] === 'delete'){\r\n                const response1 = reqProductDelete(this.state.selectedRowKeys);\r\n                if(response1.status === 0){\r\n                    const response2 = await reqProductList();\r\n                    if(response2.status === 0){\r\n                        let data = response2.data;\r\n                        data.forEach(item1 => {\r\n                            this.state.options2.forEach(item2 => {\r\n                                if(item1.category === item2.value){\r\n                                    item1.categoryName = item2.label\r\n                                }\r\n                            })\r\n                        });\r\n                        this.timerID = setTimeout(() => {\r\n                            this.formRef1.props.form.resetFields();\r\n                            this.refreshTable(data)\r\n                        }, 500)\r\n                    }\r\n                }\r\n            }else if(operation[0] === 'move'){\r\n                this.formRef1.props.form.resetFields();\r\n                this.refreshTable(this.state.data)\r\n            }else{\r\n                let data = {};\r\n                let arr = operation[0].split('-');\r\n                data.id = this.state.selectedRowKeys;\r\n                data[arr[0]] = Number(arr[1]);\r\n                const response1 = await updateProductList(data);\r\n                if(response1.status === 0){\r\n                    const response2 = await reqProductList();\r\n                    if(response2.status === 0){\r\n                        let data = response2.data;\r\n                        data.forEach(item1 => {\r\n                            this.state.options2.forEach(item2 => {\r\n                                if(item1.category === item2.value){\r\n                                    item1.categoryName = item2.label\r\n                                }\r\n                            })\r\n                        });\r\n                        this.timerID = setTimeout(() => {\r\n                            this.refreshTable(data)\r\n                        }, 500)\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            let data = {};\r\n            data.id = this.state.selectedRowKeys;\r\n            data.category = operation[1];\r\n            const response1 = await updateProductList(data);\r\n            if(response1.status === 0){\r\n                const response2 = await reqProductList();\r\n                if(response2.status === 0){\r\n                    let data = response2.data;\r\n                    data.forEach(item1 => {\r\n                        this.state.options2.forEach(item2 => {\r\n                            if(item1.category === item2.value){\r\n                                item1.categoryName = item2.label\r\n                            }\r\n                        })\r\n                    });\r\n                    this.refreshTable(data)\r\n                }\r\n            }\r\n        }\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '货号',\r\n                key: 'number',\r\n                dataIndex: 'number'\r\n            },\r\n            {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleView(record)}>\r\n                        {text}\r\n                        {record.category === 999 ? <Tag size=\"small\" color=\"red\">未分类</Tag> : null}\r\n                    </Button>\r\n                )\r\n            },\r\n            {\r\n                title: '分类',\r\n                key: 'categoryName',\r\n                dataIndex: 'categoryName',\r\n                render: (text, record) => <span>{record.category === 999 ? \"未设置分类\" : text}</span>,\r\n                filters: this.state.categoryFilters,\r\n                onFilter: (value, record) => value===record.categoryName\r\n            },\r\n            {\r\n                title: '售价',\r\n                key: 'price',\r\n                dataIndex: 'price',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.price - b.price\r\n            },\r\n            {\r\n                title: '积分',\r\n                key: 'integral',\r\n                dataIndex: 'integral',\r\n                render: (text) => <span>{text}</span>,\r\n                sorter: (a, b) => a.integral - b.integral\r\n            },\r\n            {\r\n                title: '单位',\r\n                key: 'unit',\r\n                dataIndex: 'unit',\r\n                render: (text) => <span>{text}</span>\r\n            },\r\n            // {\r\n            //     title: '销量/周',\r\n            //     key: 'sales',\r\n            //     dataIndex: 'sales',\r\n            //     render: (text, record) => <span>{record.category === 999 ? '/' : text+record.unit}</span>,\r\n            //     sorter: (a, b) => a.sales - b.sales\r\n            // },\r\n            {\r\n                title: '状态',\r\n                key: 'status',\r\n                render: (record) => record.category === 999 ? <span>/</span> : (\r\n                    <span>\r\n                        <span>上架：</span>\r\n                        <Switch size=\"small\"\r\n                                defaultChecked={record.onsale === 1}\r\n                                onClick={()=>this.handleStateChange(record, \"onsale\")}\r\n                        /><br/>\r\n                        <span>新品：</span>\r\n                        <Switch size=\"small\"\r\n                                style={{marginTop: \"5px\"}}\r\n                                defaultChecked={record.isnew === 1}\r\n                                onClick={()=>this.handleStateChange(record, \"isnew\")}\r\n                        /><br/>\r\n                        <span>推荐：</span>\r\n                        <Switch size=\"small\"\r\n                                style={{marginTop: \"5px\"}}\r\n                                defaultChecked={record.recommend === 1}\r\n                                onClick={()=>this.handleStateChange(record, \"recommend\")}\r\n                        />\r\n                    </span>\r\n                )\r\n            },\r\n            // {\r\n            //     title: '上架',\r\n            //     key: 'onsale',\r\n            //     dataIndex: 'onsale',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"onsale\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            // {\r\n            //     title: '新品',\r\n            //     key: 'isnew',\r\n            //     dataIndex: 'isnew',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"isnew\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            // {\r\n            //     title: '推荐',\r\n            //     key: 'recommend',\r\n            //     dataIndex: 'recommend',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"recommend\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                        <Button size=\"small\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\" />\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"product-container\">\r\n                <TopNav nav={['商品管理', '商品列表']}/>\r\n                <div className=\"product-header\">\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <Button type=\"primary\" onClick={()=>this.handleAdd()}><Icon type=\"plus\"/>新增商品</Button>\r\n                            \r\n                        </Col>\r\n                        <Col span={6} style={{marginTop: \"-1px\"}}>\r\n                            <Cascader style={{width: \"120px\", marginRight: \"15px\"}}\r\n                                      placeholder=\"批量操作\"\r\n                                      options={this.state.options1}\r\n                                      onChange={this.handleCascaderChange}/>\r\n                            <Button type=\"primary\" onClick={this.handleOperate}>确认</Button>\r\n                        </Col>\r\n                        <Col span={10} style={{textAlign:\"right\"}}>\r\n                            <Select\r\n                                style={{width: \"110px\", textAlign: \"left\"}}\r\n                                placeholder=\"选择状态\"\r\n                                onChange={this.handleSelectChange}\r\n                            >\r\n                                <Select.Option value=\"\">全部</Select.Option>\r\n                                <Select.Option value=\"onsale-1\">已上架</Select.Option>\r\n                                <Select.Option value=\"onsale-0\">未上架</Select.Option>\r\n                                <Select.Option value=\"isnew-1\">新品</Select.Option>\r\n                                <Select.Option value=\"isnew-0\">非新品</Select.Option>\r\n                                <Select.Option value=\"recommend-1\">已推荐</Select.Option>\r\n                                <Select.Option value=\"recommend-0\">未推荐</Select.Option>\r\n                            </Select>\r\n                            <Input.Search\r\n                                placeholder=\"搜索商品名称/货号\"\r\n                                style={{width: \"200px\", float: \"right\", margin: \"0 15px \"}}\r\n                                onSearch={(value) => this.handleSearch(value)}\r\n                                enterButton\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            rowSelection={this.rowSelection}\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Product;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Upload, Icon, Modal } from 'antd';\r\nimport { reqImgDelete } from '../../api/index';\r\n\r\nclass PicturesWall extends React.Component {\r\n    state = {\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        fileList: [],\r\n    };\r\n    UNSAFE_componentWillMount = () => {\r\n        if(this.props.hasOwnProperty(\"imgs\")){\r\n            let urlArr = this.props.imgs.split(',');\r\n            let fileList = [];\r\n            urlArr.forEach((item, index) => {\r\n                fileList.push({\r\n                    uid: -1-index,\r\n                    name: item,\r\n                    status: 'done',\r\n                    url: '/upload/'+item\r\n                })\r\n            });\r\n            this.setState({fileList: fileList})\r\n        }\r\n    };\r\n    getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await this.getBase64(file.originFileObj);\r\n        }\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n        });\r\n    };\r\n    handleChange = async ({ file, fileList }) => {\r\n        if(file.status === 'done'){\r\n            let response = file.response;\r\n            file = fileList[fileList.length-1];\r\n            file.name = response.data.name;\r\n            file.url = response.data.url;\r\n        } else if(file.status === 'removed'){\r\n            await reqImgDelete(file.name);\r\n        }\r\n        let urls = fileList.map(item => {\r\n            return typeof(item.url) === 'string' ? item.url.split('upload/')[1] : item.url\r\n        });\r\n        this.props.onChange(urls.join(','));\r\n        this.setState({ fileList })\r\n    };\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"clearfix\">\r\n                <Upload\r\n                    action=\"/file/upload\"\r\n                    accept=\"image/*\"\r\n                    name=\"image\"\r\n                    listType=\"picture-card\"\r\n                    fileList={this.state.fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {this.state.fileList.length >= 6 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal visible={this.state.previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={this.state.previewImage} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PicturesWall;","import React from 'react';\r\nimport { Form, Select, InputNumber, Button, Checkbox, Row, Col, Card, Input, message } from 'antd';\r\nimport TopNav from '../../components/top-nav';\r\nimport PictureWall from '../../components/picture-wall/picture-wall';\r\nimport { addProductList, reqCategoryList } from '../../api';\r\n\r\nclass AddProduct extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            category_options: [],\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqCategoryList();\r\n        if(response.status === 0){\r\n            let options = [];\r\n            response.data.forEach((item) => {\r\n                options.push({key: item.name, value: item.id})\r\n            });\r\n            this.setState({category_options: options})\r\n        }\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    validateNumber = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品货号\")\r\n        }else if(value.length<5 || value.length>10){\r\n            callback(\"请输入少于5个，且不多于10个字符\")\r\n        }else if((/^[0-9a-zA-Z]*$/g).test(value)){\r\n            callback(\"请输入字母、数字或其组合\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateName = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入名称\")\r\n        }else if(value.length<2 || value.length>10){\r\n            callback(\"请输入不少于2个，且不超过10个字符\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validatePrice = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品价格\")\r\n        }else if(value<0){\r\n            callback(\"请按正确格式输入商品价格\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUnit = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品单位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateNoteProduct = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入产品备注\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntegral = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品积分值\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceTitle = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页标题\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceContent =(rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页内容\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                values.category = Number(values.category);\r\n                values.price = Number(values.price);\r\n                values.integral = Number(values.integral);\r\n                values.onsale = values.state.indexOf('onsale')===-1 ? 0 : 1;\r\n                values.isnew = values.state.indexOf('isnew')===-1 ? 0 : 1;\r\n                values.recommend = values.state.indexOf('recommend')===-1 ? 0 : 1;\r\n                values.deleted = 0;\r\n                delete values.state;\r\n                const response = await addProductList(values);\r\n                if(response.status === 0){\r\n                    message.success(response.msg+\",即将返回商品列表\", 2);\r\n                    this.timerID = setTimeout(()=>{\r\n                        this.props.history.replace('/product')\r\n                    }, 2000);\r\n                }\r\n            }else{\r\n                console.log(err)\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        const {form} = this.props;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '添加商品']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product')}}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            { form.getFieldDecorator('number', {\r\n                                rules: [{required: true, message: \"请输入商品货号\", validate: this.validateNumber}]\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            { form.getFieldDecorator('name', {\r\n                                rules: [{required: true, message: \"请输入商品名称\", validate: this.validateName}]\r\n                            })(<Input placeholder=\"请输入商品名称\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            { form.getFieldDecorator('category', {\r\n                                rules: [{ required: true, message: '请选择所属分类' }],\r\n                            })(\r\n                                <Select onChange={this.handleChange} placeholder=\"请选择所属分类\">\r\n                                    { this.state.category_options.map((item) => {\r\n                                        return <Select.Option key={item.value}>{item.key}</Select.Option>\r\n                                    })}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\" hasFeedback>\r\n                            { form.getFieldDecorator('price', {\r\n                                rules: [{required: true, message: \"请输入商品售价\",validate: this.validatePrice}]\r\n                            })(<Input addonAfter=\"元 &nbsp;&nbsp;&nbsp;\" placeholder=\"请输入商品售价\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            { form.getFieldDecorator('unit', {\r\n                                rules: [{required: true, message: \"请输入商品计量单位\", validate: this.validateUnit}]\r\n                            })(<Input placeholder=\"请输入商品计量单位\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品状态\">\r\n                            {form.getFieldDecorator('state', {\r\n                                initialValue: ['isNew'],\r\n                            })(\r\n                                <Checkbox.Group style={{ width: '100%', margin: \"10px 0 0 20px\"}}>\r\n                                    <Row>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"onsale\">上架</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"isnew\">新品</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"recommend\">推荐</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Checkbox.Group>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            { form.getFieldDecorator('integral', {\r\n                                rules: [{required: true, message: \"请输入积分值\", validate: this.validateIntegral}]\r\n                            })(<Input placeholder=\"请输入积分值\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"简介\">\r\n                            { form.getFieldDecorator('introduce', {\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入商品简介\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠提示\">\r\n                            { form.getFieldDecorator('tip', {\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入优惠提示\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品描述\">\r\n                            { form.getFieldDecorator('description', {\r\n                                rule: [{validate: this.validateIntroduceContent}]\r\n                            })(<Input.TextArea rows={4} placeholder=\"请输入商品描述\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣：\">\r\n                            {form.getFieldDecorator('discount_gold', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"白金会员折扣\">\r\n                            {form.getFieldDecorator('discount_platinum', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"钻石会员折扣\">\r\n                            {form.getFieldDecorator('discount_diamond', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"上传图片\">\r\n                            {form.getFieldDecorator('pictures', {\r\n                                rules: [{required: true, message: \"请上传商品图片\"}]\r\n                            })(<PictureWall/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品备注\">\r\n                            { form.getFieldDecorator('note')(\r\n                                <Input.TextArea rows={4} />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button style={{margin: \"50px 0 0 450px\"}} type=\"primary\" htmlType=\"submit\">完成，提交商品</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n    \r\n            \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'add-product-form' })(AddProduct);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Form, Select, InputNumber, Button, Checkbox, Row, Col, Card, Input, message } from 'antd';\r\nimport TopNav from '../../components/top-nav';\r\nimport PictureWall from '../../components/picture-wall/picture-wall';\r\nimport { updateProductList, reqCategoryList } from '../../api';\r\n\r\nclass EditProduct extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            categoryOptions: [],\r\n            data: []\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        data.state = [];\r\n        data.onsale===1 ? data.state.push(\"onsale\") : data.state.push();\r\n        data.isnew===1 ? data.state.push(\"isnew\") : data.state.push();\r\n        data.recommend===1 ? data.state.push(\"recommend\") : data.state.push();\r\n        this.setState({data: data});\r\n        const response = await reqCategoryList();\r\n        if(response.status === 0){\r\n            let options = [];\r\n            options.push({key: \"未分类\", value: 999});\r\n            response.data.forEach((item) => {\r\n                options.push({key: item.name, value: item.id})\r\n            });\r\n            this.setState({categoryOptions: options});\r\n        }\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    validateNumber = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品货号\")\r\n        }else if(value.length<5 || value.length>10){\r\n            callback(\"请输入少于5个，且不多于10个字符\")\r\n        }else if((/^[0-9a-zA-Z]*$/g).test(value)){\r\n            callback(\"请输入字母、数字或其组合\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateName = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入名称\")\r\n        }else if(value.length<2 || value.length>10){\r\n            callback(\"请输入不少于2个，且不超过10个字符\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validatePrice = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品价格\")\r\n        }else if(value<0){\r\n            callback(\"请按正确格式输入商品价格\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUnit = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品单位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateNoteProduct = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入产品备注\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntegral = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品积分值\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceTitle = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页标题\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceContent =(rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页内容\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                values.category = Number(values.category);\r\n                values.price = Number(values.price);\r\n                values.integral = Number(values.integral);\r\n                values.onsale = values.state.indexOf('onsale')===-1 ? 0 : 1;\r\n                values.isnew = values.state.indexOf('isnew')===-1 ? 0 : 1;\r\n                values.recommend = values.state.indexOf('recommend')===-1 ? 0 : 1;\r\n                delete values.state;\r\n                const response = await updateProductList(values);\r\n                if(response.status === 0){\r\n                    message.success(\"更新商品信息成功,即将返回商品列表页面\");\r\n                    this.timerID = setTimeout(()=>{\r\n                        this.props.history.replace('/product')\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        const {form} = this.props;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '商品列表', '编辑商品']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product')}}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"商品ID\" hasFeedback style={{display: \"none\"}}>\r\n                            { form.getFieldDecorator('id', {\r\n                                initialValue: this.state.data.id\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            { form.getFieldDecorator('number', {\r\n                                initialValue: this.state.data.number,\r\n                                rules: [{required: true, message: \"请输入商品货号\", validate: this.validateNumber}]\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            { form.getFieldDecorator('name', {\r\n                                initialValue: this.state.data.name,\r\n                                rules: [{required: true, message: \"请输入商品名称\", validate: this.validateName}]\r\n                            })(<Input placeholder=\"请输入商品名称\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            { form.getFieldDecorator('category', {\r\n                                initialValue: this.state.data.category,\r\n                                rules: [{ required: true, message: '请选择所属分类' }],\r\n                            })(\r\n                                <Select onChange={this.handleChange}>\r\n                                    { this.state.categoryOptions.map((item) => {\r\n                                        return <Select.Option key={item.value} value={item.value}>{item.key}</Select.Option>\r\n                                    })}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\" hasFeedback>\r\n                            { form.getFieldDecorator('price', {\r\n                                initialValue: this.state.data.price,\r\n                                rules: [{required: true, message: \"请输入商品售价\"}]\r\n                            })(<Input addonAfter=\"元 &nbsp;&nbsp;&nbsp;\" placeholder=\"请输入商品售价\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            { form.getFieldDecorator('unit', {\r\n                                initialValue: this.state.data.unit,\r\n                                rules: [{required: true, message: \"请输入商品计量单位\", validate: this.validateUnit}]\r\n                            })(<Input placeholder=\"请输入商品计量单位\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品状态\" style={{display: this.state.data.category === 999 ? \"none\" : \"block\"}}>\r\n                            {form.getFieldDecorator('state', {\r\n                                initialValue: this.state.data.state,\r\n                            })(\r\n                                <Checkbox.Group style={{ width: '100%', margin: \"10px 0 0 20px\"}}>\r\n                                    <Row>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"onsale\">上架</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"isnew\">新品</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"recommend\">推荐</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Checkbox.Group>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            { form.getFieldDecorator('integral', {\r\n                                initialValue: this.state.data.integral,\r\n                                rules: [{required: true, message: \"请输入积分值\"}]\r\n                            })(<Input placeholder=\"请输入积分值\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"简介\" hasFeedback>\r\n                            { form.getFieldDecorator('introduce', {\r\n                                initialValue: this.state.data.introduce,\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入简介\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠提示\" hasFeedback>\r\n                            { form.getFieldDecorator('tip', {\r\n                                initialValue: this.state.data.tip,\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入优惠提示\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品描述\" hasFeedback>\r\n                            { form.getFieldDecorator('description', {\r\n                                initialValue: this.state.data.description,\r\n                                rule: [{validate: this.validateIntroduceContent}]\r\n                            })(<Input.TextArea rows={4} placeholder=\"请输入商品描述\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣：\">\r\n                            {form.getFieldDecorator('discount_gold', {\r\n                                initialValue: this.state.data.discount_gold\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"白金会员折扣\">\r\n                            {form.getFieldDecorator('discount_platinum', {\r\n                                initialValue: this.state.data.discount_platinum\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"钻石会员折扣\">\r\n                            {form.getFieldDecorator('discount_diamond', {\r\n                                initialValue: this.state.data.discount_diamond\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"上传图片\">\r\n                            {form.getFieldDecorator('pictures', {\r\n                                initialValue: this.state.data.pictures\r\n                            })(<PictureWall imgs={this.state.data.pictures} />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品备注\" hasFeedback>\r\n                            { form.getFieldDecorator('note', {\r\n                                initialValue: this.state.data.note\r\n                            })(<Input.TextArea rows={4} />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button style={{margin: \"50px 0 0 450px\"}} type=\"primary\" htmlType=\"submit\">完成，提交商品</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'add-product-form' })(EditProduct);\r\n","import React from 'react';\r\nimport './product.less';\r\nimport {Form, Button, Card, Icon} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewProduct extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            data: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        console.log(data);\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        let stateYes = (string) => (<span><Icon type=\"check\" style={{color: \"#1DA57A\"}}/>{string}</span>);\r\n        let stateNo = (string) => (<span><Icon type=\"close\" style={{color: \"#1DA57A\"}}/>{string}</span>);\r\n        return (\r\n            <div className=\"product-view-container\">\r\n                <TopNav nav={['商品管理', '商品列表', '商品详情']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/product')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.number}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.category === 999 ? \"未设置分类\" : this.state.data.categoryName}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\">\r\n                            <span className=\"ant-form-text\">￥ {this.state.data.price.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.unit}</span>\r\n                        </Form.Item>\r\n                        {\r\n                            this.state.data.category === 999 ? null : (\r\n                                <Form.Item label=\"商品状态\">\r\n                            <span className=\"ant-form-text\" style={{marginLeft: \"-20px\"}}>\r\n                                {this.state.data.onsale ? stateYes(\"上架\") : stateNo(\"上架\")}\r\n                                {this.state.data.onsale ? stateYes(\"新品\") : stateNo(\"新品\")}\r\n                                {this.state.data.onsale ? stateYes(\"推荐\") : stateNo(\"推荐\")}\r\n                            </span>\r\n                                </Form.Item>\r\n                            )\r\n                        }\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"简介\">\r\n                            <span className=\"ant-form-text\">{this.state.data.introduce}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠提示\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tip}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品描述\">\r\n                            <span className=\"ant-form-text\">{this.state.data.description}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_gold===10 ? \"无\" : this.state.data.discount_gold+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_platinum===10 ? \"无\" : this.state.data.discount_platinum+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_diamond===10 ? \"无\" : this.state.data.discount_diamond+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品图片\">\r\n                            <span className=\"ant-form-pictures\">\r\n                                {\r\n                                    this.state.data.pictures===\"\" ? <span>无</span> :\r\n                                        this.state.data.pictures.split(\",\").map((item, index)=> {\r\n                                            return (<img key={index} src={'/upload/'+item} alt=\"商品图片\"/>)\r\n                                        })\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠信息备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({name:'product-add-form'})(ViewProduct);\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Input, Table, Button, Icon, Tag, Modal,  Select, DatePicker} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport {\r\n    reqOrderSearch,\r\n    reqProductList,\r\n    reqCustomerList,\r\n    reqOrderUpdate,\r\n    reqOrderList,\r\n    reqOrderRange\r\n} from '../../api/index';\r\nimport moment from \"moment\";\r\n\r\nclass Order extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            searching: false,\r\n            option: 0,\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqOrderList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentDidMount = () => {\r\n        this.timerID1 = setInterval(async () => {\r\n            if(!this.state.searching){\r\n                const response = await reqOrderList();\r\n                this.refreshTable(response)\r\n            }\r\n        }, 5000)\r\n    };\r\n    componentWillUnmount = () => {\r\n        this.setState = () => {};\r\n        clearInterval(this.timerID1);\r\n        clearTimeout(this.timerID2)\r\n    };\r\n    refreshTable = async (response1) => {\r\n        const response2 = await reqProductList();\r\n        const response3 = await reqCustomerList();\r\n        if(response1.status===0 && response2.status===0 && response3){\r\n            let data = response1.data.map(item1 => {\r\n                item1.commodity = JSON.parse(item1.commodity);\r\n                response3.data.forEach(item2 => {\r\n                    if(item1.customer === item2.id) item1.customer=item2\r\n                });\r\n                return item1\r\n            });\r\n            this.timerID2 = setTimeout(()=>{\r\n                this.setState({\r\n                    data: data.reverse(),\r\n                    isLoading: false\r\n                })\r\n            }, 100)\r\n            \r\n        }\r\n    };\r\n    handleSearch = async (id) => {\r\n        if(id){\r\n            const response = await reqOrderSearch(id);\r\n            this.setState({\r\n                searching: true,\r\n                isLoading: true\r\n            });\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({\r\n                searching: false,\r\n                isLoading: true\r\n            })\r\n        }\r\n    };\r\n    handleView = (record) => {\r\n        console.log(record);\r\n        this.props.history.push({pathname: '/order/view', state: {data : record}});\r\n    };\r\n    handleCustomerDetail = (record) => {\r\n        this.props.history.push({pathname: '/member/view', state: {data: record}})\r\n    };\r\n    handleCancel = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要取消订单(ID: \"+record.id+\")吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 2\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.map(item => {\r\n                        if(item.id === record.id) item.state = 3;\r\n                        return item\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleComplete = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要将订单(ID: \"+record.id+\")设置为完成状态吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 3\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.map(item => {\r\n                        if(item.id === record.id) item.state = 4;\r\n                        return item\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleSelectChange = (value) => {\r\n        this.setState({option: value});\r\n        if(value === 0){\r\n            this.setState({\r\n                searching: false,\r\n                isLoading: true\r\n            });\r\n            this.timerID2 = setTimeout(async () => {\r\n                const response = await reqOrderList();\r\n                this.refreshTable(response);\r\n                this.setState({isLoading: false})\r\n            }, 100)\r\n        }else{\r\n            this.setState({searching: true})\r\n        }\r\n    };\r\n    handleDatePickerChange = async (date, dateString) => {\r\n        if(dateString){\r\n            let start = new Date(dateString+\" 00:00:00\").getTime();\r\n            let end = new Date(dateString+\" 23:59:59\").getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    handleWeekPickerChange = async (week) => {\r\n        if(week){\r\n            let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n            let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n            start = new Date(start).getTime();\r\n            end = new Date(end).getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    handleMonthPickerChange = async (month) => {\r\n        if(month){\r\n            let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n            let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n            start = new Date(start).getTime();\r\n            end = new Date(end).getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    handleRangePickerChange = async (dates, dateStrings) => {\r\n        if(dateStrings[0] && dateStrings[1]){\r\n            let start = new Date(dateStrings[0]).getTime();\r\n            let end = new Date(dateStrings[1]).getTime();\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderRange(start, end);\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({isLoading: true});\r\n            const response = await reqOrderList();\r\n            this.refreshTable(response);\r\n        }\r\n    };\r\n    render(){\r\n        const column = [\r\n            {\r\n                title: '订单ID',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text} [查看]</Button>\r\n            },\r\n            {\r\n                title: '顾客',\r\n                dataIndex: 'customer',\r\n                key: 'customer',\r\n                render: (text) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleCustomerDetail(text)}>\r\n                        {\r\n                            text.status===1 ? <span>{text.name} <Tag color=\"blue\">黄金</Tag></span> :\r\n                                text.status===2 ? <span>{text.name} <Tag color=\"green\">白金</Tag></span> :\r\n                                    text.status===3 ? <span>{text.name} <Tag color=\"red\">钻石</Tag></span> :\r\n                                        <span>{text.name}</span>\r\n                        }\r\n                    </Button>\r\n                ),\r\n                filters: [\r\n                    {text: \"黄金会员\", value: 1},\r\n                    {text: \"白金会员\", value: 2},\r\n                    {text: \"钻石会员\", value: 3},\r\n                    {text: \"普通顾客\", value: 0}\r\n                ],\r\n                onFilter: (value, record) => value === record.customer.status\r\n            },\r\n            {\r\n                title: '桌号',\r\n                dataIndex: 'seat',\r\n                key: 'seat',\r\n                render: (text) => <span>{text}</span>,\r\n                sorter: (a, b) => a.seat - b.seat\r\n            },\r\n            {\r\n                title: '订单内容',\r\n                dataIndex: 'commodity',\r\n                key: 'commodity',\r\n                render: (text) => (\r\n                    <div>\r\n                        {\r\n                            text.map((item, index) => {\r\n                                return <div key={index}>{item.name}<Icon type=\"close\"/>{item.count}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n            {\r\n                title: '下单时间',\r\n                dataIndex: 'createtime',\r\n                key: 'createtime',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => a.createtime - b.createtime,\r\n                // filters: [\r\n                //     {text: \"今日\", value: 0},\r\n                //     {text: \"近一周\", value: 1},\r\n                //     {text: \"近一个月\", value: 2},\r\n                //     {text: \"近一季度\", value: 3}\r\n                // ],\r\n                // onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '支付金额',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.amount - b.amount\r\n            },\r\n            {\r\n                title: '评价',\r\n                key: 'stars',\r\n                dataIndex: 'stars',\r\n                render: (text) => {\r\n                    if(text === 0){\r\n                        return <span>暂未评价</span>\r\n                    }else{\r\n                        let starArr=[];\r\n                        for(let i=0;i<text;i++){\r\n                            starArr.push(i)\r\n                        }\r\n                        return starArr.map((item) => {\r\n                            return <Icon key={item} type=\"star\" style={{color: \"yellow\"}} theme=\"filled\" />\r\n                        });\r\n                    }\r\n                },\r\n                sorter: (a, b) => a.stars - b.stars,\r\n                filters: [\r\n                    {text: \"未评价\", value: 0},\r\n                    {text: \"一星\", value: 1},\r\n                    {text: \"二星\", value: 2},\r\n                    {text: \"三星\", value: 3},\r\n                    {text: \"四星\", value: 4},\r\n                    {text: \"五星\", value: 5},\r\n                ],\r\n                onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (text, record) => text === 0 ? (\r\n                    <div>\r\n                        {\r\n                            record.urged === 0 ? '已付款' : <Tag color=\"red\">催单</Tag>\r\n                        }\r\n                    </div>\r\n                ) : text === 1 ? <Tag color=\"red\">请求取消</Tag> :\r\n                    text === 2 ? '已取消' : '已完成',\r\n                filters: [\r\n                    {text: \"已付款\", value: 0},\r\n                    {text: \"请求取消\", value: 1},\r\n                    {text: \"已取消\", value: 2},\r\n                    {text: \"已完成\", value: 3}\r\n                ],\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => record.state === 0 ? (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleComplete(record)}>完成</Button>\r\n                    </span>\r\n                ) : record.state === 1 ? (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleCancel(record)}>取消</Button>\r\n                    </span>\r\n                ) :  '/'\r\n            }\r\n        \r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['订单管理', '全部订单']} />\r\n                <div style={{margin: \"20px 22px 0 20px\", overflow: \"hidden\"}}>\r\n                    <div style={{display: \"inline-block\", width: \"70%\", textAlign: \"right\"}}>\r\n                        { this.state.option===0 ? null : this.getTimePicker()}\r\n                        <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                                style={{width: \"115px\", marginLeft: \"10px\"}}>\r\n                            <Select.Option value={0}>按顺序查看</Select.Option>\r\n                            <Select.Option value={1}>按日期查看</Select.Option>\r\n                            <Select.Option value={2}>按周次查看</Select.Option>\r\n                            <Select.Option value={3}>按月份查看</Select.Option>\r\n                            <Select.Option value={4}>自定义区间</Select.Option>\r\n                        </Select>\r\n                    </div>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"搜索订单ID\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={column}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n// import './order.less';\r\nimport {Form, Button, Card, Icon, Tag} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewOrder extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            data: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    getTime = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        return (\r\n            <div className=\"product-view-container\">\r\n                <TopNav nav={['订单管理', '订单详情']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看订单信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/order')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"订单ID\">\r\n                            <span className=\"ant-form-text\">{this.state.data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"顾客\">\r\n                            <span className=\"ant-form-text\">{this.state.data.customer.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"桌号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.seat}号</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"状态\">\r\n                            <span className=\"ant-form-text\" style={{textIndent: 0, marginLeft: \"20px\"}}>\r\n                                {\r\n                                    this.state.data.state === 0 ? (\r\n                                        <div>\r\n                                            {\r\n                                                this.state.data.urged === 0 ? <Tag color=\"blue\">已付款</Tag> : <Tag color=\"red\">催单</Tag>\r\n                                            }\r\n                                        </div>\r\n                                    ) : this.state.data.state === 1 ? <Tag color=\"red\">请求取消</Tag> :\r\n                                        this.state.data.state === 2 ? <Tag color=\"green\">已取消</Tag> :\r\n                                            <Tag color=\"green\">已完成</Tag>\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单列表\">\r\n                            <div className=\"ant-form-text\">\r\n                                {\r\n                                    this.state.data.commodity.map((item, index) => {\r\n                                        return <div key={index}>{item.name}<Icon type=\"close\"/> {item.count}</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"下单时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(this.state.data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单总金额\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.amount.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"实付金额\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.payment.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所获积分\">\r\n                            <span className=\"ant-form-text\">{this.state.data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"评价等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {\r\n                                    this.state.data.stars === 0 ? \"暂未评价\" : [1,2,3,4,5].map((item, index) => {\r\n                                        return (\r\n                                            <Icon key={index} type=\"star\" theme=\"filled\"\r\n                                                  style={{color: \"yellow\", marginLeft: \"5px\",\r\n                                                      display: item > this.state.data.stars ? \"none\" : \"inline\"}}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"评价文字\">\r\n                            <span className=\"ant-form-text\">\r\n                                {\r\n                                    this.state.data.stars === 0 ? \"暂未评价\" : this.state.data.evaluation\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({name:'product-add-form'})(ViewOrder);\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Input, Table, Button, Icon, Tag, Modal} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport {\r\n    reqOrderSearch,\r\n    reqProductList,\r\n    reqCustomerList,\r\n    reqOrderUpdate,\r\n    reqFrontdeskList\r\n} from '../../api/index';\r\n\r\nclass Stage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            searching: false\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqFrontdeskList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentDidMount = () => {\r\n        this.timerID1 = setInterval(async () => {\r\n            if(!this.state.searching){\r\n                const response = await reqFrontdeskList();\r\n                this.refreshTable(response)\r\n            }\r\n        }, 5000)\r\n    };\r\n    componentWillUnmount = () => {\r\n        this.setState = () => {};\r\n        clearInterval(this.timerID1);\r\n        clearTimeout(this.timerID2)\r\n    };\r\n    refreshTable = async (response1) => {\r\n        const response2 = await reqProductList();\r\n        const response3 = await reqCustomerList();\r\n        if(response1.status===0 && response2.status===0 && response3){\r\n            let data = response1.data.map(item1 => {\r\n                item1.commodity = JSON.parse(item1.commodity);\r\n                response3.data.forEach(item2 => {\r\n                    if(item1.customer === item2.id) item1.customer=item2\r\n                });\r\n                return item1\r\n            });\r\n            this.timerID2 = setTimeout(()=>{\r\n                this.setState({\r\n                    data: data.reverse(),\r\n                    isLoading: false\r\n                })\r\n            }, 100)\r\n            \r\n        }\r\n    };\r\n    handleSearch = async (id) => {\r\n        if(id){\r\n            const response = await reqOrderSearch(id);\r\n            this.setState({\r\n                searching: true,\r\n                isLoading: true\r\n            });\r\n            this.refreshTable(response)\r\n        }else{\r\n            this.setState({\r\n                searching: false,\r\n                isLoading: true\r\n            })\r\n        }\r\n    };\r\n    handleView = (record) => {\r\n        console.log(record);\r\n        this.props.history.push({pathname: '/order/stage/view', state: {data : record}});\r\n    };\r\n    handleCustomerDetail = (record) => {\r\n        this.props.history.push({pathname: '/member/view', state: {data: record}})\r\n    };\r\n    handleCancel = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要取消订单(ID: \"+record.id+\")吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 2\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.filter(item => {\r\n                        return item.id !== record.id\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleComplete = async (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要将订单(ID: \"+record.id+\")设置为完成状态吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                let data = {\r\n                    id: record.id,\r\n                    state: 3\r\n                };\r\n                let response = await reqOrderUpdate(data);\r\n                if(response.status === 0){\r\n                    let data = this.state.data.filter(item => {\r\n                        return item.id !== record.id\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    getTime = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const column = [\r\n            {\r\n                title: '订单ID',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text} [查看]</Button>\r\n            },\r\n            {\r\n                title: '顾客',\r\n                dataIndex: 'customer',\r\n                key: 'customer',\r\n                render: (text) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleCustomerDetail(text)}>\r\n                        {\r\n                            text.status===1 ? <span>{text.name} <Tag color=\"blue\">黄金</Tag></span> :\r\n                                text.status===2 ? <span>{text.name} <Tag color=\"green\">白金</Tag></span> :\r\n                                    text.status===3 ? <span>{text.name} <Tag color=\"red\">钻石</Tag></span> :\r\n                                        <span>{text.name}</span>\r\n                        }\r\n                    </Button>\r\n                ),\r\n                filters: [\r\n                    {text: \"黄金会员\", value: 1},\r\n                    {text: \"白金会员\", value: 2},\r\n                    {text: \"钻石会员\", value: 3},\r\n                    {text: \"普通顾客\", value: 0}\r\n                ],\r\n                onFilter: (value, record) => value === record.customer.status\r\n            },\r\n            {\r\n                title: '桌号',\r\n                dataIndex: 'seat',\r\n                key: 'seat',\r\n                render: (text) => <span>{text}</span>,\r\n                sorter: (a, b) => a.seat - b.seat\r\n            },\r\n            {\r\n                title: '订单内容',\r\n                dataIndex: 'commodity',\r\n                key: 'commodity',\r\n                render: (text) => (\r\n                    <div>\r\n                        {\r\n                            text.map((item, index) => {\r\n                                return <div key={index}>{item.name}<Icon type=\"close\"/>{item.count}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n            {\r\n                title: '下单时间',\r\n                dataIndex: 'createtime',\r\n                key: 'createtime',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTime(text)}</span>,\r\n                sorter: (a, b) => a.createtime - b.createtime,\r\n                // filters: [\r\n                //     {text: \"今日\", value: 0},\r\n                //     {text: \"近一周\", value: 1},\r\n                //     {text: \"近一个月\", value: 2},\r\n                //     {text: \"近一季度\", value: 3}\r\n                // ],\r\n                // onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '支付金额',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.amount - b.amount\r\n            },\r\n            {\r\n                title: '评价',\r\n                key: 'stars',\r\n                dataIndex: 'stars',\r\n                render: (text) => {\r\n                    if(text === 0){\r\n                        return <span>暂未评价</span>\r\n                    }else{\r\n                        let starArr=[];\r\n                        for(let i=0;i<text;i++){\r\n                            starArr.push(i)\r\n                        }\r\n                        return starArr.map((item) => {\r\n                            return <Icon key={item} type=\"star\" style={{color: \"yellow\"}} theme=\"filled\" />\r\n                        });\r\n                    }\r\n                },\r\n                sorter: (a, b) => a.stars - b.stars,\r\n                filters: [\r\n                    {text: \"未评价\", value: 0},\r\n                    {text: \"一星\", value: 1},\r\n                    {text: \"二星\", value: 2},\r\n                    {text: \"三星\", value: 3},\r\n                    {text: \"四星\", value: 4},\r\n                    {text: \"五星\", value: 5},\r\n                ],\r\n                onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (text, record) => text === 0 ? (\r\n                    <div>\r\n                        {\r\n                            record.urged === 0 ? <Tag color=\"blue\">已付款</Tag> : <Tag color=\"red\">催单</Tag>\r\n                        }\r\n                    </div>\r\n                ) : text === 1 ? <Tag color=\"red\">请求取消</Tag> :\r\n                    text === 2 ? <Tag color=\"green\">已取消</Tag> :\r\n                        <Tag color=\"green\">已完成</Tag>,\r\n                filters: [\r\n                    {text: \"已付款\", value: 0},\r\n                    {text: \"请求取消\", value: 1},\r\n                    {text: \"已取消\", value: 2},\r\n                    {text: \"已完成\", value: 3}\r\n                ],\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => record.state === 0 ? (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleComplete(record)}>完成</Button>\r\n                    </span>\r\n                ) : record.state === 1 ? (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleCancel(record)}>取消</Button>\r\n                    </span>\r\n                ) :  '/'\r\n            }\r\n        \r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['订单管理', '全部订单']} />\r\n                <div style={{margin: \"20px 22px 0 20px\", overflow: \"hidden\"}}>\r\n                    {/*<Button type=\"primary\" onClick={this.handleAdd}>新增订单</Button>*/}\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"搜索订单ID\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={column}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Button, Input, Table, Divider, Icon, Modal, Tag, message, Form} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport Loading from '../../components/loading/index';\r\nimport { reqMemberList, reqMemberSearch, reqMemberDelete, reqRuleUpdate } from '../../api/index';\r\n\r\nclass Member extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            visible: false,\r\n            rule: {}\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let response = await reqMemberList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = (response) => {\r\n        if(response.status === 0){\r\n            let data = response.data;\r\n            data = data.map(item => {\r\n                return item\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data,\r\n                })\r\n            }, 300)\r\n        }\r\n    };\r\n    handleSearch = async (value) => {\r\n        console.log(value);\r\n        const response = value===\"\" ? await reqMemberList() : await reqMemberSearch(value);\r\n        this.refreshTable(response)\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/member/add')\r\n    };\r\n    //会员设置\r\n    // handleSet = async () => {\r\n    //     const response = await reqRuleList();\r\n    //     if(response.status === 0){\r\n    //         this.setState({\r\n    //             visible: true,\r\n    //             rule: response.data[0]\r\n    //         })\r\n    //     }\r\n    // };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除会员\\\"\"+record.name+\"(ID:\"+record.id+\")\\\"吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                const response1 = await reqMemberDelete(record.id);\r\n                if(response1.status === 0){\r\n                    let data = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleDetail = (record) => {\r\n        this.props.history.push({pathname: '/member/view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/member/edit', state: { data: record}})\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if(!err){\r\n                const response = await reqRuleUpdate(values);\r\n                if(response.status === 0){\r\n                    this.setState({visible: false});\r\n                    this.timerID = setTimeout(()=>{\r\n                        message.success(\"设置成功\");\r\n                    }, 500)\r\n                }\r\n            }\r\n        })\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '会员ID',\r\n                key: 'id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '昵称/等级',\r\n                key: 'name',\r\n                dataIndex: 'name',\r\n                render: (text, record) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleDetail(record)}>\r\n                        {\r\n                            record.status===1 ? <span>{text} <Tag color=\"blue\">黄金</Tag></span> :\r\n                                record.status===2 ? <span>{text} <Tag color=\"green\">白金</Tag></span> :\r\n                                    record.status===3 ? <span>{text} <Tag color=\"red\">钻石</Tag></span> :\r\n                                        <span>{text}</span>\r\n                        }\r\n                    </Button>\r\n                ),\r\n                filters: [{text: '黄金会员', value: 1}, {text: '白金会员', value: 2}, {text: '钻石会员', value: 3}],\r\n                onFilter: (value, record) => value===record.status\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                key: 'createtime',\r\n                dataIndex: 'createtime',\r\n                render: (text) => <span>{this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => a.createtime-b.createtime,\r\n            },\r\n            {\r\n                title: '电话',\r\n                key: 'tel',\r\n                dataIndex: 'tel',\r\n                render: (text)=><span><Icon type=\"phone\" /> {text}</span>\r\n            },\r\n            {\r\n                title: '积分',\r\n                key: 'integral',\r\n                dataIndex: 'integral',\r\n                sorter: (a, b) => a.integral-b.integral\r\n            },\r\n            {\r\n                title: '订单数量',\r\n                key: 'orderSum',\r\n                render: (text, record) => <span>待完成</span>,\r\n                filters: [\r\n                    {\r\n                        text: '最近一周',\r\n                        value: '0',\r\n                    },\r\n                    {\r\n                        text: '最近一月',\r\n                        value: '1',\r\n                    },\r\n                    {\r\n                        text: '最近一年',\r\n                        value: '2'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '消费金额',\r\n                key: 'orderAmount',\r\n                render: (text, record) => <span>待完成</span>,\r\n                filters: [\r\n                    {\r\n                        text: '最近一周',\r\n                        value: '0',\r\n                    },\r\n                    {\r\n                        text: '最近一月',\r\n                        value: '1',\r\n                    },\r\n                    {\r\n                        text: '最近一年',\r\n                        value: '2'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={[\"会员管理\",\"会员列表\"]}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\"/>新增会员</Button>\r\n                    {/*会员设置*/}\r\n                    {/*<Button type=\"primary\" style={{marginLeft: \"40px\"}} onClick={this.handleSet}>会员设置</Button>*/}\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询会员ID/昵称\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey={record => record.id}\r\n                               bordered\r\n                        />\r\n                }\r\n                {/*<Modal*/}\r\n                {/*    visible={this.state.visible}*/}\r\n                {/*    title=\"会员设置\"*/}\r\n                {/*    onCancel={()=>{this.setState({visible: false})}}*/}\r\n                {/*    footer={null}*/}\r\n                {/*>*/}\r\n                {/*    <Form style={{overflow: \"hidden\"}} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }} onSubmit={this.handleSubmit}>*/}\r\n                {/*        <Form.Item label=\"ID\" style={{display: \"none\"}}>*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('id', {*/}\r\n                {/*                    initialValue: 1000*/}\r\n                {/*                })(<InputNumber/>)*/}\r\n                {/*            }*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        <Form.Item label=\"黄金会员\">*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('gold', {*/}\r\n                {/*                    initialValue: this.state.rule.gold || 0*/}\r\n                {/*                })(<InputNumber style={{width: \"150px\"}}/>)*/}\r\n                {/*            }*/}\r\n                {/*            <span style={{marginLeft: \"10px\"}}>积分</span>*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        <Form.Item label=\"白金会员\">*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('platinum', {*/}\r\n                {/*                    initialValue: this.state.rule.platinum || 0*/}\r\n                {/*                })(<InputNumber style={{width: \"150px\"}}/>)*/}\r\n                {/*            }*/}\r\n                {/*            <span style={{marginLeft: \"10px\"}}>积分</span>*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        <Form.Item label=\"钻石会员\">*/}\r\n                {/*            {*/}\r\n                {/*                this.props.form.getFieldDecorator('diamond', {*/}\r\n                {/*                    initialValue: this.state.rule.diamond || 0*/}\r\n                {/*                })(<InputNumber style={{width: \"150px\"}}/>)*/}\r\n                {/*            }*/}\r\n                {/*            <span style={{marginLeft: \"10px\"}}>积分</span>*/}\r\n                {/*        </Form.Item>*/}\r\n                {/*        /!*<Button style={{float: \"right\", margin: \"20px 160px 0 30px\"}} type=\"primary\" htmlType=\"submit\">确定</Button>*!/*/}\r\n                {/*        <Popconfirm*/}\r\n                {/*            placement=\"topRight\"*/}\r\n                {/*            title=\"确定要更新会员设置吗？\"*/}\r\n                {/*            okType=\"danger\"*/}\r\n                {/*            onConfirm={this.handleSubmit}*/}\r\n                {/*            okText=\"确认\"*/}\r\n                {/*            cancelText=\"取消\"*/}\r\n                {/*        >*/}\r\n                {/*            <Button style={{float: \"right\", margin: \"20px 160px 0 30px\"}} type=\"primary\">设置</Button>*/}\r\n                {/*        </Popconfirm>*/}\r\n                {/*        <Button*/}\r\n                {/*            style={{float: \"right\", marginTop: \"20px\"}}*/}\r\n                {/*            type=\"primary\"*/}\r\n                {/*            onClick={()=>{this.setState({visible: false})}}*/}\r\n                {/*        >取消</Button>*/}\r\n                {/*    </Form>*/}\r\n                {/*</Modal>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(Member);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Card, Button, Input, message, Radio} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { reqMemberAdd } from '../../api/index'\r\n\r\nconst AddCustomer = Form.create({name: 'add-member-form'})(\r\n    class extends React.Component{\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields(async (err, values) => {\r\n                if(!err){\r\n                    let data = values;\r\n                    data.createtime = new Date().getTime();\r\n                    data.status = 1;\r\n                    data.integral = 0;\r\n                    data.orderid = '';\r\n                    data.deleted = 0;\r\n                    const response = await reqMemberAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增会员成功！即将返回会员列表页面\");\r\n                        this.timerID = setTimeout(() => {\r\n                            this.props.history.push('/member')\r\n                        }, 2000)\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['会员管理', '新增会员']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增会员信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/member')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"姓名\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('status', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: 1\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={1}>黄金会员</Radio.Button>\r\n                                            <Radio.Button value={2}>白金会员</Radio.Button>\r\n                                            <Radio.Button value={3}>钻石会员</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddCustomer;","import React from 'react';\r\nimport { Form, Card, Button, Input, message, InputNumber, Radio} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { updateMemberList } from '../../api/index'\r\n\r\nconst EditCustomer = Form.create({name: 'add-member-form'})(\r\n    class extends React.Component{\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields(async (err, values) => {\r\n                if(!err){\r\n                    let data = {};\r\n                    data.id = this.props.location.state.data.id;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key];\r\n                        }\r\n                    }\r\n                    const response = await updateMemberList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"编辑会员信息成功，即将返回会员列表页！\");\r\n                        this.timerID = setTimeout(() => {\r\n                            this.props.history.push('/member')\r\n                        }, 2000)\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const data = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['会员管理', '会员列表', '编辑会员']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑会员信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/member')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"姓名\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.name\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.tel\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('status', {\r\n                                        initialValue: data.status,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={1}>黄金</Radio.Button>\r\n                                            <Radio.Button value={2}>白金</Radio.Button>\r\n                                            <Radio.Button value={3}>钻石</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"积分\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('integral', {\r\n                                        initialValue: data.integral\r\n                                    })(<InputNumber style={{width: \"100px\"}} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: data.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditCustomer;","import React from 'react';\r\nimport './member.less';\r\nimport {Button, Card, Form, Tag} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewCustomer extends React.Component{\r\n    getTime = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        return <span>{time.getFullYear()+'-'+month+'-'+time.getDate()}&nbsp;&nbsp;{time.getHours()+':'+time.getMinutes()}</span>;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        let data = this.props.location.state.data;\r\n        return (\r\n            <div className=\"customer-view-container\">\r\n                <TopNav nav={['会员管理', '会员列表', '会员详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看会员详情</span>}\r\n                      extra={<Button onClick={()=>{this.props.history.push('/member')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"会员ID\">\r\n                            <span className=\"ant-form-text\">{data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"积分\">\r\n                            <span className=\"ant-form-text\">{data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span style={{marginLeft: \"20px\"}}>\r\n                                {\r\n                                    data.status===1 ? <Tag color=\"blue\">黄金</Tag> :\r\n                                        data.status===2 ? <Tag color=\"green\">白金</Tag> : <Tag color=\"red\">钻石</Tag>\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"创建时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{data.note ? data.note : '无'}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCustomer;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Divider, Icon, Input, Table, Tag, Modal} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport { reqEmployeeList, reqEmployeeDelete, reqEmployeeSearch } from '../../api/index';\r\n\r\nclass Employee extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            dutyFilter: [],\r\n            departmentFilter: []\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqEmployeeList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = (response) => {\r\n        if(response.status === 0){\r\n            let department = [], departmentFilter = [], duty = [], dutyFilter = [];\r\n            response.data.forEach(item => {\r\n                department.push(item.department);\r\n                duty.push(item.duty)\r\n            });\r\n            new Set(department).forEach(item => {\r\n                departmentFilter.push({text: item, value: item})\r\n            });\r\n            new Set(duty).forEach(item => {\r\n                dutyFilter.push({text: item, value: item})\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: response.data,\r\n                    departmentFilter: departmentFilter,\r\n                    dutyFilter: dutyFilter\r\n                })\r\n            })\r\n        }\r\n    };\r\n    handleSearch = async (value) => {\r\n        const response = value === \"\" ? await reqEmployeeList() : await reqEmployeeSearch(value);\r\n        this.refreshTable(response)\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除员工\\\"\"+record.name+\"(工号：\"+record.workid+\")\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqEmployeeDelete(record.workid);\r\n                if(response.status === 0){\r\n                    let data = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.workid===record.workid ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({data})\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        })\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push(\"/employee/add\")\r\n    };\r\n    handleView = (record) => {\r\n        console.log(record);\r\n        this.props.history.push({pathname: '/employee/view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/employee/edit', state: {data: record}})\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '工号',\r\n                key: 'workid',\r\n                dataIndex: 'workid',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '姓名',\r\n                key: 'name',\r\n                dataIndex: 'name'\r\n            },\r\n            {\r\n                title: '性别',\r\n                key: 'gender',\r\n                dataIndex: 'gender',\r\n                render: (text) => <span>{text === 0 ? '女' : '男'}</span>,\r\n                filters: [{text: '男', value: 1},{text: '女', value: 0}],\r\n                onFilter: (value, record) => value===record.gender\r\n            },\r\n            {\r\n                title: '年龄',\r\n                key: 'age',\r\n                dataIndex: 'age',\r\n                sorter: (a, b) => a.age-b.age\r\n            },\r\n            {\r\n                title: '电话',\r\n                key: 'tel',\r\n                dataIndex: 'tel',\r\n                render: (text)=><span><Icon type=\"phone\" /> {text}</span>\r\n            },\r\n            {\r\n                title: '工龄',\r\n                key: 'workage',\r\n                dataIndex: 'entrytime',\r\n                render: (text) => <span>{new Date().getFullYear()-new Date(text).getFullYear() || \"未满一年\"}</span>,\r\n                sorter: (a, b) => a.entrytime-b.entrytime\r\n            },\r\n            {\r\n                title: '部门',\r\n                key: 'department',\r\n                dataIndex: 'department',\r\n                filters: this.state.departmentFilter,\r\n                onFilter: (value, record) => value===record.department\r\n            },\r\n            {\r\n                title: '职责',\r\n                key: 'duty',\r\n                dataIndex: 'duty',\r\n                render: (text,record) => record.level===0 ? <span>{text} <Tag color=\"blue\">初级</Tag></span> :\r\n                    record.level===1 ? <span>{text} <Tag color=\"green\">中级</Tag></span> :\r\n                        <span>{text} <Tag color=\"red\">高级</Tag></span>,\r\n                filters: this.state.dutyFilter,\r\n                onFilter: (value, record) => value===record.duty\r\n            },\r\n            {\r\n                title: '月薪',\r\n                key: 'salary',\r\n                dataIndex: 'salary',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.salary-b.salary\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['人事管理', '员工列表']} />\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\"/>新增员工</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询工号/姓名\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading/> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey={record => record.workid}\r\n                               bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee;","import React from 'react';\r\nimport {Button, Card, Form, Input, Radio, InputNumber, Steps, DatePicker, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport Select from \"antd/es/select\";\r\nimport PicturesWall from \"../../components/picture-wall/picture-wall\";\r\nimport { addEmployeeList } from '../../api/index';\r\n\r\nconst AddEmployee = Form.create({name: 'add-employee-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                current: 0,\r\n                value1: {},\r\n                data: {},\r\n                key: 'tab1'\r\n            }\r\n        }\r\n        handleNext = () => {\r\n            let field = ['name','identity','gender','age','nation','birthday','origin','marriage','institution','degree','graduatetime'];\r\n            this.props.form.validateFields(field,(err,values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        current: current+1,\r\n                        data: data\r\n                    })\r\n                }\r\n            })\r\n        };\r\n        handlePrevious = () => {\r\n            let current = this.state.current;\r\n            this.setState({current: current-1})\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            let field = ['profile','workid','entrytime','department','duty','level','tel','address','salary','note'];\r\n            this.props.form.validateFields(field, async (err, values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    data.birthday = new Date(data.birthday).getTime();\r\n                    data.graduatetime = new Date(data.graduatetime).getTime();\r\n                    data.entrytime = new Date(data.entrytime).getTime();\r\n                    const response = await addEmployeeList(data);\r\n                    if(response.status === 0){\r\n                        this.setState({\r\n                            data: data,\r\n                            current: current+1\r\n                        });\r\n                        message.success(\"新增员工信息成功！\");\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        onTabChange = (key) => {\r\n            this.setState({ key: key });\r\n        };\r\n        getDateTime = (birthday) => {\r\n            let time = new Date(birthday);\r\n            let month = time.getMonth()+1;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            month = month>=10 ? month : \"0\"+month;\r\n            return time.getFullYear()+'-'+month+'-'+date;\r\n        };\r\n        getMonthTime = (date) => {\r\n            let time = new Date(date);\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            return time.getFullYear()+'-'+month;\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const contentList = {\r\n                tab1: (\r\n                    <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"身份证号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.identity}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"性别\">\r\n                            <span className=\"ant-form-text\">{this.state.data.gender===0 ? '女' : '男'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"年龄\">\r\n                            <span className=\"ant-form-text\">{this.state.data.age}岁</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"民族\">\r\n                            <span className=\"ant-form-text\">{this.state.data.nation}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"出生日期\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.birthday)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"籍贯\">\r\n                            <span className=\"ant-form-text\">{this.state.data.origin}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"婚姻状况\">\r\n                            <span className=\"ant-form-text\">{this.state.data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"学历\">\r\n                            <span className=\"ant-form-text\">{this.state.data.degree}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业院校\">\r\n                            <span className=\"ant-form-text\">{this.state.data.institution}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业时间\">\r\n                            <span className=\"ant-form-text\">{this.getMonthTime(this.state.data.graduatetime)}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                ),\r\n                tab2: (\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"工号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.workid}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"入职时间\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.entrytime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"部门\">\r\n                            <span className=\"ant-form-text\">{this.state.data.department}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"职责\">\r\n                            <span className=\"ant-form-text\">{this.state.data.duty}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.level===0 ? \"初级\" : this.state.data.level===1 ?  \"中级\" : \"高级\"}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"住址\">\r\n                            <span className=\"ant-form-text\">{this.state.data.address}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"月薪\">\r\n                            <span className=\"ant-form-text\">{this.state.data.salary} 元</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    !this.state.data.profile ? <span>无</span> :\r\n                                        <img src={'/upload/' + this.state.data.profile}\r\n                                             alt=\"员工照片\"\r\n                                             style={{\r\n                                                 width: \"100px\",\r\n                                                 height: \"100px\",\r\n                                                 padding: \"7px\",\r\n                                                 marginRight: \"10px\",\r\n                                                 borderRadius: \"5px\",\r\n                                                 border: \"1px solid lightgray\"}}\r\n                                        />\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n            };\r\n            const steps = [\r\n                {\r\n                    title: \"填写基本信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                            <Form.Item label=\"姓名\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"身份证号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('identity', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入身份证号码\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"性别\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('gender', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={1} style={{margin: \"0 20px\"}}>男</Radio>\r\n                                            <Radio value={0}>女</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"年龄\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('age', {\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber style={{width: \"150px\"}} />)\r\n                                }\r\n                                <span className=\"ant-form-text\">岁</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"民族\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('nation', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入民族\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"出生日期\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('birthday', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"籍贯\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('origin', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入籍贯\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            \r\n                            \r\n                            <Form.Item label=\"婚姻状况\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('marriage', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={0} style={{margin: \"0 20px\"}}>未婚</Radio>\r\n                                            <Radio value={1}>已婚</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"学历\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('degree', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select placeholder=\"请选择学历\" style={{width: \"187px\"}}>\r\n                                            <Select.Option value='博士'>博士</Select.Option>\r\n                                            <Select.Option value='硕士'>硕士</Select.Option>\r\n                                            <Select.Option value='本科'>本科</Select.Option>\r\n                                            <Select.Option value='高中'>高中</Select.Option>\r\n                                            <Select.Option value='初中'>初中</Select.Option>\r\n                                            <Select.Option value='小学'>小学</Select.Option>\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业院校\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('institution', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入毕业院校\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('graduatetime', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker.MonthPicker format='YYYY/MM' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\"\r\n                                        style={{margin: \"50px 0 0 450px\"}}\r\n                                        onClick={()=>this.handleNext(0)}>下一步</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"填写工作信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"工号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('workid', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入工号\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"入职时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('entrytime', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"部门\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('department', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input  placeholder=\"请输入工作部门\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"职责\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('duty', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入工作职责\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('level', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={0}>初 级</Radio.Button>\r\n                                            <Radio.Button value={1}>中 级</Radio.Button>\r\n                                            <Radio.Button value={2}>高 级</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"住址\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('address', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入住址\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"月薪\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('salary', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonAfter=\"元\" placeholder=\"请输入月薪\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"照片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('profile', {\r\n                                        rules: [{required: true}]\r\n                                    })(<PicturesWall />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input.Group style={{marginLeft: \"410px\"}}>\r\n                                    <Button type=\"primary\" style={{marginRight: \"50px\"}} onClick={()=>this.handlePrevious()}>上一步</Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">完成，确认提交</Button>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"提交成功\",\r\n                    content: (\r\n                        <Card\r\n                            style={{ width: \"80%\", margin: \"20px auto\"}}\r\n                            tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                            activeTabKey={this.state.key}\r\n                            onTabChange={key => {\r\n                                this.onTabChange(key);\r\n                            }}\r\n                        >\r\n                            {contentList[this.state.key]}\r\n                        </Card>\r\n                    )\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '员工列表', '新增员工']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增员工信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Steps current={this.state.current} style={{margin: \"40px auto\", width: \"550px\"}}>\r\n                            {\r\n                                steps.map((item, index) =>\r\n                                    <Steps.Step key={index} title={item.title}/>)\r\n                            }\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[this.state.current].content}</div>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddEmployee;","import React from \"react\";\r\nimport { Form, Card, Button } from \"antd\";\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewEmployee extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'tab1'\r\n        }\r\n    }\r\n    onTabChange = (key) => {\r\n        this.setState({key: key})\r\n    };\r\n    getDateTime = (birthday) => {\r\n        let time = new Date(birthday);\r\n        let month = time.getMonth()+1;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        month = month>=10 ? month : \"0\"+month;\r\n        return time.getFullYear()+'-'+month+'-'+date;\r\n    };\r\n    getMonthTime = (date) => {\r\n        let time = new Date(date);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        return time.getFullYear()+'-'+month;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        const data = this.props.location.state.data;\r\n        const contentList = {\r\n            tab1: (\r\n                <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                    <Form.Item label=\"姓名\">\r\n                        <span className=\"ant-form-text\">{data.name}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"身份证号\">\r\n                        <span className=\"ant-form-text\">{data.identity}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"性别\">\r\n                        <span className=\"ant-form-text\">{data.gender===0 ? '女' : '男'}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"年龄\">\r\n                        <span className=\"ant-form-text\">{data.age}岁</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"民族\">\r\n                        <span className=\"ant-form-text\">{data.nation}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"出生日期\">\r\n                        <span className=\"ant-form-text\">{this.getDateTime(data.birthday)}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"籍贯\">\r\n                        <span className=\"ant-form-text\">{data.origin}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"婚姻状况\">\r\n                        <span className=\"ant-form-text\">{data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"学历\">\r\n                        <span className=\"ant-form-text\">{data.degree}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"毕业院校\">\r\n                        <span className=\"ant-form-text\">{data.institution}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"毕业时间\">\r\n                        <span className=\"ant-form-text\">{this.getMonthTime(data.graduatetime)}</span>\r\n                    </Form.Item>\r\n                </Form>\r\n            ),\r\n            tab2: (\r\n                <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                    <Form.Item label=\"工号\">\r\n                        <span className=\"ant-form-text\">{data.workid}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"入职时间\">\r\n                        <span className=\"ant-form-text\">{this.getDateTime(data.entrytime)}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"部门\">\r\n                        <span className=\"ant-form-text\">{data.department}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"职责\">\r\n                        <span className=\"ant-form-text\">{data.duty}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"等级\">\r\n                        <span className=\"ant-form-text\">{data.level===0 ? \"初级\" : data.level===1 ?  \"中级\" : \"高级\"}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Tel\">\r\n                        <span className=\"ant-form-text\">{data.tel}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"住址\">\r\n                        <span className=\"ant-form-text\">{data.address}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"月薪\">\r\n                        <span className=\"ant-form-text\">{data.salary.toFixed(2)} 元</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"备注\">\r\n                        <span className=\"ant-form-text\">{ data.note ? data.note : '无'}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    data.profile===\"\" ? <span>无</span> :\r\n                                        data.profile.split(\",\").map((item, index)=> {\r\n                                            return (<img key={index}\r\n                                                         src={'/upload/'+item}\r\n                                                         alt=\"员工照片\"\r\n                                                         style={{width: \"100px\",\r\n                                                             height: \"100px\",\r\n                                                             padding: \"7px\",\r\n                                                             marginRight: \"10px\",\r\n                                                             borderRadius: \"5px\",\r\n                                                             border: \"1px solid lightgray\"}}\r\n                                                    />)\r\n                                        })\r\n                                }\r\n                            </span>\r\n                    </Form.Item>\r\n                </Form>\r\n            )\r\n        };\r\n        return (\r\n            <div className=\"employee-view-container\">\r\n                <TopNav nav={['人事管理', '员工列表', '员工详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看员工详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                      tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                      activeTabKey={this.state.key}\r\n                      onTabChange={key=>this.onTabChange(key)}\r\n                >\r\n                    {contentList[this.state.key]}\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEmployee;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, DatePicker, Form, Input, InputNumber, message, Radio, Steps} from \"antd\";\r\nimport { updateEmployeeList } from \"../../api\";\r\nimport Select from \"antd/es/select\";\r\nimport PicturesWall from \"../../components/picture-wall/picture-wall\";\r\nimport moment from 'moment';\r\n\r\nconst EditEmployee = Form.create({name: 'edit-employee-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                current: 0,\r\n                value1: {},\r\n                data: {},\r\n                key: 'tab1'\r\n            }\r\n        }\r\n        handleNext = () => {\r\n            let field = ['name','identity','gender','age','nation','birthday','origin','marriage','institution','degree','graduatetime'];\r\n            this.props.form.validateFields(field,(err,values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        current: current+1,\r\n                        data: data\r\n                    })\r\n                }\r\n            })\r\n        };\r\n        handlePrevious = () => {\r\n            let current = this.state.current;\r\n            this.setState({current: current-1})\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            let field = ['profile','workid','entrytime','department','duty','level','tel','address','salary','note'];\r\n            this.props.form.validateFields(field, async (err, values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    data.birthday = new Date(data.birthday).getTime();\r\n                    data.graduatetime = new Date(data.graduatetime).getTime();\r\n                    data.entrytime = new Date(data.entrytime).getTime();\r\n                    let updateData = {};\r\n                    updateData.workid = data.workid;\r\n                    for(let key in data){\r\n                        if(data.hasOwnProperty(key)){\r\n                            updateData[key] = data[key]\r\n                        }\r\n                    }\r\n                    const response = await updateEmployeeList(updateData);\r\n                    if(response.status === 0){\r\n                        this.setState({\r\n                            data: data,\r\n                            current: current+1\r\n                        });\r\n                        message.success(\"编辑员工信息成功！\");\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        onTabChange = (key) => {\r\n            this.setState({ key: key });\r\n        };\r\n        getDateTime = (birthday) => {\r\n            let time = new Date(birthday);\r\n            let month = time.getMonth()+1;\r\n            return time.getFullYear()+'-'+month+'-'+time.getDate();\r\n        };\r\n        getMonthTime = (date) => {\r\n            let time = new Date(date);\r\n            let month = time.getMonth()+1;\r\n            return time.getFullYear()+'-'+month;\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const data = this.props.location.state.data;\r\n            const contentList = {\r\n                tab1: (\r\n                    <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"身份证号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.identity}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"性别\">\r\n                            <span className=\"ant-form-text\">{this.state.data.gender===0 ? '女' : '男'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"年龄\">\r\n                            <span className=\"ant-form-text\">{this.state.data.age}岁</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"民族\">\r\n                            <span className=\"ant-form-text\">{this.state.data.nation}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"出生日期\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.birthday)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"籍贯\">\r\n                            <span className=\"ant-form-text\">{this.state.data.origin}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"婚姻状况\">\r\n                            <span className=\"ant-form-text\">{this.state.data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"学历\">\r\n                            <span className=\"ant-form-text\">{this.state.data.degree}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业院校\">\r\n                            <span className=\"ant-form-text\">{this.state.data.institution}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业时间\">\r\n                            <span className=\"ant-form-text\">{this.getMonthTime(this.state.data.graduatetime)}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                ),\r\n                tab2: (\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"工号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.workid}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"入职时间\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.entrytime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"部门\">\r\n                            <span className=\"ant-form-text\">{this.state.data.department}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"职责\">\r\n                            <span className=\"ant-form-text\">{this.state.data.duty}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.level===0 ? \"初级\" : this.state.data.level===1 ?  \"中级\" : \"高级\"}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"住址\">\r\n                            <span className=\"ant-form-text\">{this.state.data.address}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"月薪\">\r\n                            <span className=\"ant-form-text\">{this.state.data.salary} 元</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{ this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    !this.state.data.profile ? <span>无</span> :\r\n                                        <img src={'/upload/'+this.state.data.profile}\r\n                                             alt=\"员工照片\"\r\n                                             style={{\r\n                                                 width: \"100px\",\r\n                                                 height: \"100px\",\r\n                                                 padding: \"7px\",\r\n                                                 marginRight: \"10px\",\r\n                                                 borderRadius: \"5px\",\r\n                                                 border: \"1px solid lightgray\"}}\r\n                                        />\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n            };\r\n            const steps = [\r\n                {\r\n                    title: \"填写基本信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                            <Form.Item label=\"姓名\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.name\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"身份证号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('identity', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.identity\r\n                                    })(<Input placeholder=\"请输入身份证号码\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"性别\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('gender', {\r\n                                        initialValue: data.gender,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={1} style={{margin: \"0 20px\"}}>男</Radio>\r\n                                            <Radio value={0}>女</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"年龄\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('age', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.age\r\n                                    })(<InputNumber style={{width: \"150px\"}} />)\r\n                                }\r\n                                <span className=\"ant-form-text\">岁</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"民族\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('nation', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.nation\r\n                                    })(<Input placeholder=\"请输入民族\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"出生日期\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('birthday', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.birthday), \"YYYYMMDD\")\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"籍贯\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('origin', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.origin\r\n                                    })(<Input placeholder=\"请输入籍贯\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            \r\n                            \r\n                            <Form.Item label=\"婚姻状况\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('marriage', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.marriage\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={0} style={{margin: \"0 20px\"}}>未婚</Radio>\r\n                                            <Radio value={1}>已婚</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"学历\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('degree', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.degree\r\n                                    })(\r\n                                        <Select placeholder=\"请选择学历\" style={{width: \"187px\"}}>\r\n                                            <Select.Option value='博士'>博士</Select.Option>\r\n                                            <Select.Option value='硕士'>硕士</Select.Option>\r\n                                            <Select.Option value='本科'>本科</Select.Option>\r\n                                            <Select.Option value='高中'>高中</Select.Option>\r\n                                            <Select.Option value='初中'>初中</Select.Option>\r\n                                            <Select.Option value='小学'>小学</Select.Option>\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业院校\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('institution', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.institution\r\n                                    })(<Input placeholder=\"请输入毕业院校\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('graduatetime', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.graduatetime), \"YYYYMMDD\")\r\n                                    })(<DatePicker.MonthPicker format='YYYY/MM' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\"\r\n                                        style={{margin: \"50px 0 0 450px\"}}\r\n                                        onClick={()=>this.handleNext(0)}>下一步</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"填写工作信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"工号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('workid', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.workid\r\n                                    })(<Input placeholder=\"请输入工号\" disabled/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"入职时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('entrytime', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.entrytime), \"YYYY/MM/DD\")\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"部门\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('department', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.department\r\n                                    })(<Input  placeholder=\"请输入工作部门\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"职责\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('duty', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.duty\r\n                                    })(<Input placeholder=\"请输入工作职责\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('level', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.level\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={0}>初 级</Radio.Button>\r\n                                            <Radio.Button value={1}>中 级</Radio.Button>\r\n                                            <Radio.Button value={2}>高 级</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.tel\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"住址\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('address', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.address\r\n                                    })(<Input placeholder=\"请输入住址\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"月薪\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('salary', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.salary\r\n                                    })(<Input addonAfter=\"元\" placeholder=\"请输入月薪\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"照片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('profile', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.profile\r\n                                    })(<PicturesWall imgs={data.profile} />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: data.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input.Group style={{marginLeft: \"410px\"}}>\r\n                                    <Button type=\"primary\" style={{marginRight: \"50px\"}} onClick={()=>this.handlePrevious()}>上一步</Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">完成，确认提交</Button>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"提交成功\",\r\n                    content: (\r\n                        <Card\r\n                            style={{ width: \"80%\", margin: \"20px auto\"}}\r\n                            tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                            activeTabKey={this.state.key}\r\n                            onTabChange={key => {\r\n                                this.onTabChange(key);\r\n                            }}\r\n                        >\r\n                            {contentList[this.state.key]}\r\n                        </Card>\r\n                    )\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '员工列表', '编辑员工']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑员工信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Steps current={this.state.current} style={{margin: \"40px auto\", width: \"550px\"}}>\r\n                            {\r\n                                steps.map((item, index) =>\r\n                                    <Steps.Step key={index} title={item.title}/>)\r\n                            }\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[this.state.current].content}</div>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditEmployee;","import React from 'react';\r\nimport {Table, Divider, Button, Modal, Icon, Tag} from 'antd';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from '../../components/top-nav/index'\r\nimport {reqRoleList, reqUserList, reqRoleDelete} from '../../api/index';\r\n\r\nclass Role extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            viewVisible: false,\r\n            role: {},\r\n        }\r\n    };\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqRoleList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = async (response1) => {\r\n        const response2 = await reqUserList();\r\n        if(response1.status===0 && response2.status===0){\r\n            let data = response1.data.map((item1, index) => {\r\n                let roleUser = [];\r\n                item1.index = index;\r\n                response1.data.forEach(item3 => {\r\n                    if(item1.creater === item3.id) item1.createrRole = item3.name\r\n                });\r\n                response2.data.forEach(item2 => {\r\n                    if(item1.creater === item2.id) item1.createrName = item2.username;\r\n                    if(item1.id === item2.role) roleUser.push(item2.username)\r\n                });\r\n                item1.roleUser = roleUser;\r\n                let permission = [\r\n                    {\r\n                        title: \"订单管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"全部订单\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"前台管理\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"商品管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"商品分类\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"商品列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"添加商品\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"库存管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"库存信息\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"库存盘点\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"会员管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"会员列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"新增会员\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"人事管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"员工列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"用户列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"角色管理\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    }\r\n                ];\r\n                item1.permission.split('-').forEach(item3 => {\r\n                    switch (item3) {\r\n                        case '全部订单':\r\n                            permission[0].display = 1;\r\n                            permission[0].children[0].display = 1;\r\n                            break;\r\n                        case '前台管理':\r\n                            permission[0].display = 1;\r\n                            permission[0].children[1].display = 1;\r\n                            break;\r\n                        case '商品分类':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[0].display = 1;\r\n                            break;\r\n                        case '商品列表':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[1].display = 1;\r\n                            break;\r\n                        case '添加商品':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[2].display = 1;\r\n                            break;\r\n                        case '库存信息':\r\n                            permission[2].display = 1;\r\n                            permission[2].children[0].display = 1;\r\n                            break;\r\n                        case '库存盘点':\r\n                            permission[2].display = 1;\r\n                            permission[2].children[1].display = 1;\r\n                            break;\r\n                        case '会员列表':\r\n                            permission[3].display = 1;\r\n                            permission[3].children[0].display = 1;\r\n                            break;\r\n                        case '新增会员':\r\n                            permission[3].display = 1;\r\n                            permission[3].children[1].display = 1;\r\n                            break;\r\n                        case '员工列表':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[0].display = 1;\r\n                            break;\r\n                        case '用户列表':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[1].display = 1;\r\n                            break;\r\n                        case '角色管理':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[2].display = 1;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                });\r\n                item1.permission = permission;\r\n                return item1\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({isLoading: false, data: data})\r\n            }, 300)\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除角色\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqRoleDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleView = (record) => {\r\n        this.setState({\r\n            viewVisible: true,\r\n            role: record\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/employee/role/add')\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/employee/role/edit', state: {data: record}})\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                key: 'son',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => b.createtime - a.createtime\r\n            },\r\n            {\r\n                title: '创建人',\r\n                dataIndex: 'createrName',\r\n                key: 'createrName',\r\n                render: (text, record) => <span>{text} <Tag color=\"green\">{record.createrRole}</Tag></span>\r\n            },\r\n            {\r\n                title: '角色用户',\r\n                dataIndex: 'roleUser',\r\n                key: 'roleUser',\r\n                render: (text) => (\r\n                    <span>\r\n                        {\r\n                            text.length !== 0 ? text.map((item, index) => {\r\n                                return <div  key={index}><span>{item}</span></div>\r\n                            }) : '/'\r\n                        }\r\n                    </span>\r\n                )\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'note',\r\n                key: 'note',\r\n                render: (text) => <span>{text ? text : '/'}</span>\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['人事管理','角色管理']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\"/>新增角色</Button>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n                {/*查看角色详情*/}\r\n                <Modal\r\n                    title={<span>角色权限-{this.state.role.name}</span>}\r\n                    visible={this.state.viewVisible}\r\n                    onCancel={()=>{this.setState({viewVisible: false})}}\r\n                    footer={\r\n                        [<Button type=\"primary\" key=\"view-ok\" onClick={()=>this.setState({viewVisible: false})}>确认</Button>]\r\n                    }\r\n                >\r\n                    <div style={{marginLeft: \"100px\"}}>\r\n                        {\r\n                            this.state.role.permission ? this.state.role.permission.map((item1, index) => {\r\n                                return (\r\n                                    <div key={index}>\r\n                                        <div><Icon type=\"caret-down\" style={{color: \"#1DA57A\"}}/>{item1.title}</div>\r\n                                        {\r\n                                            item1.children.map((item2, index) => {\r\n                                                return item2.display===1 ? (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"check\" style={{color: \"#1DA57A\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                ) :  (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"close\" style={{color: \"#fa7f3e\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Role;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, Checkbox, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\nimport { reqRoleAdd } from '../../api/index';\r\n\r\nconst AddRole = Form.create({ name: 'role-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: [\r\n                    {\r\n                        title: \"全部订单\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"前台管理\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"商品分类\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"商品列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"添加商品\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"库存信息\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"库存盘点\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"会员列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"新增会员\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"员工列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"用户列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"角色管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入角色名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let arr = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.display===1 ? arr.push(item.title) : arr.push();\r\n                    });\r\n                    let data=values;\r\n                    data.createtime = new Date(data.createtime).getTime();\r\n                    data.creater = memoryUtils.user.id;\r\n                    data.permission = arr.join('-');\r\n                    data.deleted = 0;\r\n                    const response = await reqRoleAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增角色成功, 即将返回角色管理列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/role')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        handleChange = (e, temp) => {\r\n            let data = this.state.data;\r\n            if(typeof(temp)===\"object\"){\r\n                if(e.target.checked){\r\n                    temp.forEach(item => {\r\n                        data[item].display = 1\r\n                    })\r\n                }else{\r\n                    temp.forEach(item => {\r\n                        data[item].display = 0\r\n                    })\r\n                }\r\n            }else{\r\n                data[temp].display = 1 - data[temp].display\r\n            }\r\n            this.setState({data: data})\r\n        };\r\n        getTimeForm = () => {\r\n            let time = new Date();\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '角色管理', '新增角色']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增角色信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee/role')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"创建时间：\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTimeForm()\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建人：\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: memoryUtils.user.username\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色名：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"权限：\">\r\n                                {form.getFieldDecorator('permission', {\r\n                                    initialValue: \"perimission\",\r\n                                    rules: [{required: true}]\r\n                                })(<Input style={{display: \"none\"}} />)}\r\n                            </Form.Item>\r\n                            <div style={{margin: \"-53px 0 40px 340px\"}}>\r\n                                {/*订单管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [0, 1])}>订单管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 0)}\r\n                                        checked={this.state.data[0].display===1}\r\n                                    >全部订单</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 1)}\r\n                                        checked={this.state.data[1].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >前台订单</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [2, 3, 4])}>商品管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 2)}\r\n                                        checked={this.state.data[2].display===1}\r\n                                    >商品分类</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 3)}\r\n                                        checked={this.state.data[3].display===1}\r\n                                    >商品列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 4)}\r\n                                        checked={this.state.data[4].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >添加商品</Checkbox><br/>\r\n                                </div>\r\n                                {/*库存管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [5, 6])}>库存管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 5)}\r\n                                        checked={this.state.data[5].display===1}\r\n                                    >库存信息</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 6)}\r\n                                        checked={this.state.data[6].display===1}\r\n                                    >库存盘点</Checkbox><br/>\r\n                                </div>\r\n                                {/*会员管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [7, 8])}>会员管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 7)}\r\n                                        checked={this.state.data[7].display===1}\r\n                                    >会员列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 8)}\r\n                                        checked={this.state.data[8].display===1}\r\n                                    >新增会员</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [9, 10, 11])}>人事管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 9)}\r\n                                        checked={this.state.data[9].display===1}\r\n                                    >员工列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 10)}\r\n                                        checked={this.state.data[10].display===1}\r\n                                    >用户列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 11)}\r\n                                        checked={this.state.data[11].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >角色管理</Checkbox><br/>\r\n                                </div>\r\n                            </div>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddRole;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, Checkbox, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { reqRoleUpdate } from '../../api/index';\r\n\r\nconst EditRole = Form.create({ name: 'role-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = () => {\r\n            let data = this.props.location.state.data;\r\n            let permission = [];\r\n            data.permission.forEach(item => {\r\n                permission = permission.concat(item.children)\r\n            });\r\n            data.permission = permission;\r\n            this.setState({data: data.permission});\r\n        };\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let arr = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.display===1 ? arr.push(item.title) : arr.push();\r\n                    });\r\n                    let data=values;\r\n                    data.permission = arr.join('-');\r\n                    data.creater = this.props.location.state.data.creater;\r\n                    data.createtime = new Date(data.createtime).getTime();\r\n                    const response = await reqRoleUpdate(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"编辑角色成功, 即将返回角色管理页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/role')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        handleChange = (e, temp) => {\r\n            let data = this.state.data;\r\n            if(typeof(temp)===\"object\"){\r\n                if(e.target.checked){\r\n                    temp.forEach(item => {\r\n                        data[item].display = 1\r\n                    })\r\n                }else{\r\n                    temp.forEach(item => {\r\n                        data[item].display = 0\r\n                    })\r\n                }\r\n            }else{\r\n                data[temp].display = 1 - data[temp].display\r\n            }\r\n            this.setState({data: data})\r\n        };\r\n        getTimeForm = (time) => {\r\n            time = new Date(time);\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        getFatherChecked = (arr) => {\r\n            let checked = true;\r\n            arr.forEach(item => {\r\n                if(this.state.data[item].display === 0) checked = false\r\n            });\r\n            return checked\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            let data = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '角色管理', '编辑角色']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑角色信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee/role')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\r\n                                {form.getFieldDecorator('id', {\r\n                                    initialValue: data.id\r\n                                })(<Input/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建时间：\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTimeForm(data.createtime)\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建人：\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: data.createrName\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色名：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                    initialValue: data.name\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"权限：\">\r\n                                {form.getFieldDecorator('permission', {\r\n                                    initialValue: \"perimission\",\r\n                                    rules: [{required: true}]\r\n                                })(<Input style={{display: \"none\"}} />)}\r\n                            </Form.Item>\r\n                            <div style={{margin: \"-53px 0 40px 340px\"}}>\r\n                                {/*订单管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [0, 1])}\r\n                                    defaultChecked={this.getFatherChecked([0, 1])}\r\n                                >订单管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 0)}\r\n                                        checked={this.state.data[0].display===1}\r\n                                    >全部订单</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 1)}\r\n                                        checked={this.state.data[1].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >前台订单</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [2, 3, 4])}\r\n                                    defaultChecked={this.getFatherChecked([2, 3, 4])}\r\n                                >商品管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 2)}\r\n                                        checked={this.state.data[2].display===1}\r\n                                    >商品分类</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 3)}\r\n                                        checked={this.state.data[3].display===1}\r\n                                    >商品列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 4)}\r\n                                        checked={this.state.data[4].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >添加商品</Checkbox><br/>\r\n                                </div>\r\n                                {/*库存管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [5, 6])}\r\n                                    defaultChecked={this.getFatherChecked([5, 6])}\r\n                                >库存管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 5)}\r\n                                        checked={this.state.data[5].display===1}\r\n                                    >库存信息</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 6)}\r\n                                        checked={this.state.data[6].display===1}\r\n                                    >库存盘点</Checkbox><br/>\r\n                                </div>\r\n                                {/*会员管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [7, 8])}\r\n                                    defaultChecked={this.getFatherChecked([7, 8])}\r\n                                >会员管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 7)}\r\n                                        checked={this.state.data[7].display===1}\r\n                                    >会员列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 8)}\r\n                                        checked={this.state.data[8].display===1}\r\n                                    >新增会员</Checkbox><br/>\r\n                                </div>\r\n                                {/*人事管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [9, 10, 11])}\r\n                                    defaultChecked={this.getFatherChecked([9, 10, 11])}\r\n                                >人事管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 9)}\r\n                                        checked={this.state.data[9].display===1}\r\n                                    >员工列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 10)}\r\n                                        checked={this.state.data[10].display===1}\r\n                                    >用户列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 11)}\r\n                                        checked={this.state.data[11].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >角色管理</Checkbox><br/>\r\n                                </div>\r\n                            </div>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditRole;","import React from 'react';\r\nimport {Table, Divider, Button, Modal, Icon} from 'antd';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from '../../components/top-nav/index'\r\nimport {reqUserList, reqUserDelete, reqRoleList} from '../../api/index';\r\n\r\nclass User extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            visible: false,\r\n            role: {}\r\n        }\r\n    };\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqUserList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = async (response1) => {\r\n        const response2 = await reqRoleList();\r\n        if(response1.status===0 && response2.status===0){\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                let data = response1.data.map((item1, index) => {\r\n                    item1.index = index;\r\n                    response2.data.forEach(item2 => {\r\n                        if(item1.role === item2.id){\r\n                            item1.role = item2;\r\n                            let permission = [\r\n                                {\r\n                                    title: \"订单管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"全部订单\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"前台管理\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"商品管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"商品分类\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"商品列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"添加商品\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"库存管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"库存信息\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"库存盘点\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"会员管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"会员列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"新增会员\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    title: \"人事管理\",\r\n                                    display: 0,\r\n                                    children: [\r\n                                        {\r\n                                            title: \"员工列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"用户列表\",\r\n                                            display: 0\r\n                                        },\r\n                                        {\r\n                                            title: \"角色管理\",\r\n                                            display: 0\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ];\r\n                            item1.role.permission.split('-').forEach(item3 => {\r\n                                switch (item3) {\r\n                                    case '全部订单':\r\n                                        permission[0].display = 1;\r\n                                        permission[0].children[0].display = 1;\r\n                                        break;\r\n                                    case '前台管理':\r\n                                        permission[0].display = 1;\r\n                                        permission[0].children[1].display = 1;\r\n                                        break;\r\n                                    case '商品分类':\r\n                                        permission[1].display = 1;\r\n                                        permission[1].children[0].display = 1;\r\n                                        break;\r\n                                    case '商品列表':\r\n                                        permission[1].display = 1;\r\n                                        permission[1].children[1].display = 1;\r\n                                        break;\r\n                                    case '添加商品':\r\n                                        permission[1].display = 1;\r\n                                        permission[1].children[2].display = 1;\r\n                                        break;\r\n                                    case '库存信息':\r\n                                        permission[2].display = 1;\r\n                                        permission[2].children[0].display = 1;\r\n                                        break;\r\n                                    case '库存盘点':\r\n                                        permission[2].display = 1;\r\n                                        permission[2].children[1].display = 1;\r\n                                        break;\r\n                                    case '会员列表':\r\n                                        permission[3].display = 1;\r\n                                        permission[3].children[0].display = 1;\r\n                                        break;\r\n                                    case '新增会员':\r\n                                        permission[3].display = 1;\r\n                                        permission[3].children[1].display = 1;\r\n                                        break;\r\n                                    case '员工列表':\r\n                                        permission[4].display = 1;\r\n                                        permission[4].children[0].display = 1;\r\n                                        break;\r\n                                    case '用户列表':\r\n                                        permission[4].display = 1;\r\n                                        permission[4].children[1].display = 1;\r\n                                        break;\r\n                                    case '角色管理':\r\n                                        permission[4].display = 1;\r\n                                        permission[4].children[2].display = 1;\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            });\r\n                            item1.role.permission = permission\r\n                        }\r\n                    });\r\n                    return item1\r\n                });\r\n                this.setState({isLoading: false, data: data})\r\n            }, 300)\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除用户\\\"\"+record.username+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqUserDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleAdd = () => {this.props.history.push('/employee/user/add')};\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/employee/user/edit', state: {data: record}})\r\n    };\r\n    handleRoleView = (role) => {\r\n        console.log(role);\r\n        this.setState({\r\n            visible: true,\r\n            role: role\r\n        });\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '用户名称',\r\n                dataIndex: 'username',\r\n                key: 'username',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                key: 'son',\r\n                render: (text) => <span><Icon type=\"clock-circle\" /> {this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => b.createtime - a.createtime\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role',\r\n                key: 'role',\r\n                render: (text) => <Button type=\"link\" onClick={()=>this.handleRoleView(text)}>{text.name}</Button>\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'tel',\r\n                key: 'tel',\r\n                render: (text) => <span><Icon type=\"phone\" />+86 {text}</span>\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n                key: 'email'\r\n            },\r\n            {\r\n                title: '密码',\r\n                dataIndex: 'password',\r\n                key: 'password'\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'note',\r\n                key: 'note',\r\n                render: (text) => text ? text : '/'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>设置</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['人事管理','用户列表']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}><Icon type=\"plus\"/>创建用户</Button>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n                <Modal\r\n                    title={<span>角色权限-{this.state.role.name}</span>}\r\n                    visible={this.state.visible}\r\n                    onCancel={()=>{this.setState({visible: false})}}\r\n                    footer={\r\n                        [<Button type=\"primary\" key=\"view-ok\" onClick={()=>this.setState({visible: false})}>确认</Button>]\r\n                    }\r\n                >\r\n                    <div style={{marginLeft: \"100px\"}}>\r\n                        {\r\n                            this.state.role.permission ? this.state.role.permission.map((item1, index) => {\r\n                                return (\r\n                                    <div key={index}>\r\n                                        <div><Icon type=\"caret-down\" style={{color: \"#1DA57A\"}}/>{item1.title}</div>\r\n                                        {\r\n                                            item1.children.map((item2, index) => {\r\n                                                return item2.display===1 ? (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"check\" style={{color: \"#1DA57A\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                ) :  (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"close\" style={{color: \"#fa7f3e\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqRoleList, reqUserAdd} from \"../../api\";\r\n\r\nconst AddUser = Form.create({ name: 'user-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                options: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqRoleList();\r\n            if(response.status === 0){\r\n                let options = [];\r\n                response.data.forEach(item => {\r\n                    options.push({key: item.id, value: item.name})\r\n                });\r\n                this.setState({options: options});\r\n            }\r\n        };\r\n        \r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.createtime = new Date().getTime();\r\n                    data.deleted = 0;\r\n                    console.log(values);\r\n                    const response = await reqUserAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增用户成功,即将返回用户列表页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/user')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理','用户列表','创建用户']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增用户信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee/user')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"用户名：\">\r\n                                {form.getFieldDecorator('username', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户名\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码：\">\r\n                                {form.getFieldDecorator('password', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户密码\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色：\">\r\n                                {form.getFieldDecorator('role', {\r\n                                    rules: [{required: true}]\r\n                                })(\r\n                                    <Select placeholder=\"请选择角色\">\r\n                                        {\r\n                                            this.state.options.map((item) => {\r\n                                                return <Select.Option key={item.key}>{item.value}</Select.Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel：\">\r\n                                {form.getFieldDecorator('tel', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入电话号码\" addonBefore=\"+86\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"邮箱：\">\r\n                                {form.getFieldDecorator('email', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户邮箱\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqRoleList, reqUserUpdate} from \"../../api\";\r\n\r\nconst EditUser = Form.create({ name: 'user-edit' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: {},\r\n                options: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqRoleList();\r\n            if(response.status === 0){\r\n                let options = [];\r\n                let data = this.props.location.state.data;\r\n                response.data.forEach(item => {\r\n                    options.push({key: item.id, value: item.name});\r\n                    if(data.role === item.id){\r\n                        data.rolename = item.name\r\n                    }\r\n                });\r\n                this.setState({\r\n                    options: options,\r\n                    data: data\r\n                });\r\n            }\r\n        };\r\n        componentWillUnmount = () => {\r\n            clearTimeout(this.timerID)\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.createtime = new Date().getTime();\r\n                    this.state.options.forEach(item => {\r\n                        if(item.value === data.role) data.role = item.key;\r\n                    });\r\n                    const response = await reqUserUpdate(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"更新成功,即将返回用户列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/employee/user')\r\n                        }, 1500);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理','用户列表','编辑用户']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑用户信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/user')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\r\n                                {form.getFieldDecorator('id', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.id\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"用户名：\">\r\n                                {form.getFieldDecorator('username', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.username\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码：\">\r\n                                {form.getFieldDecorator('password', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.password\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色：\">\r\n                                {form.getFieldDecorator('role', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.rolename,\r\n                                })(\r\n                                    <Select>\r\n                                        {\r\n                                            this.state.options.map((item) => {\r\n                                                return <Select.Option key={item.key}>{item.value}</Select.Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel：\">\r\n                                {form.getFieldDecorator('tel', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.tel\r\n                                })(<Input addonBefore=\"+86\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"邮箱：\">\r\n                                {form.getFieldDecorator('email', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.email\r\n                                })(<Input placeholder=\"请输入用户邮箱\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: this.state.data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './stock.less';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport Loading from '../../components/loading/index';\r\nimport {Button, Table, Divider, Tag, Modal, Input, Icon} from 'antd';\r\nimport {\r\n    reqStockList,\r\n    reqStockCategory,\r\n    reqStockDelete,\r\n    reqStockSearch,\r\n    reqStocklogList,\r\n    addStocklogList\r\n} from '../../api/index';\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nclass Stock extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            isLoading: true,\r\n            data: [],\r\n            category: [],\r\n            options: []\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqStockList();\r\n        this.refreshTable(response, 0);\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = async (response1, type) => {\r\n        const response2 = await reqStocklogList();\r\n        const response3 = await reqStockCategory();\r\n        if(response1.status === 0 && response2.status === 0 && response3.status === 0){\r\n            let data = response1.data.map(item1 => {\r\n                item1.state = item1.amount>item1.excess ? 2 : item1.amount<item1.warning ? 0 : 1;\r\n                item1.log = [];\r\n                response2.data.forEach(item2 => {\r\n                    if(item2.stockid === item1.id){\r\n                        item1.log.push(item2)\r\n                    }\r\n                });\r\n                item1.manager = item1.log[item1.log.length-1].manager;\r\n                let time = item1.log[item1.log.length-1].time;\r\n                item1.latestTime = new Date(time);\r\n                item1.pictures = item1.pictures.split(',');\r\n                return item1\r\n            });\r\n            let category = [];\r\n            let options = [];\r\n            response3.data.forEach(item => {\r\n                category.push({text: item.category, value: item.category});\r\n                options.push({label: item.category, value: item.category})\r\n            });\r\n            if(type === 0){\r\n                this.setState({\r\n                    category: category,\r\n                    options: options,\r\n                    isLoading: true\r\n                });\r\n                this.timerID = setTimeout(() => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        data: data\r\n                    })}, 300)\r\n            }else{\r\n                this.setState({\r\n                    category: category,\r\n                    options: options,\r\n                    data: data\r\n                })\r\n            }\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除库存记录\\\"\"+record.name+\"\\\"吗\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqStockDelete(record.id);\r\n                if(response.status === 0){\r\n                    let log = {...record};\r\n                    log.stockid = log.id;\r\n                    log.stockname =log.name;\r\n                    log.manager = memoryUtils.user.username;\r\n                    log.time = new Date().getTime();\r\n                    log.operation = \"删除\";\r\n                    log.pictures = log.pictures.join(',');\r\n                    delete log.state;\r\n                    delete log.log;\r\n                    delete log.name;\r\n                    delete log.id;\r\n                    delete log.latestTime;\r\n                    let response2 = await addStocklogList(log);\r\n                    if(response2.status === 0){\r\n                        const response3 = await reqStockList();\r\n                        this.refreshTable(response3, 1)\r\n                    }\r\n                }\r\n            },\r\n            cancelText: \"取消\",\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/stock/edit', state: {data: record}} )\r\n    };\r\n    handleSearch = async (name) => {\r\n        const response = name===\"\" ? await reqStockList() : await reqStockSearch(name);\r\n        this.refreshTable(response, 0);\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/stock/view', state: {data: record}});\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    render(){\r\n        const state = [{text: \"正常\", value: 0},{text: \"告罄\", value: 1},{text: \"过剩\", value: 2}];\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record, index) => <span>{index+1}</span>\r\n            },\r\n            {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button type=\"link\" onClick={()=>this.handleView(record)}>\r\n                            {text}\r\n                            {record.amount<record.warning ? <Tag size=\"small\" color=\"red\">告罄</Tag> : null}\r\n                            {record.amount>record.excess ? <Tag size=\"small\" color=\"green\">过剩</Tag> : null}\r\n                        </Button>\r\n                    </span>\r\n                )\r\n            },\r\n            {\r\n                title: '类型',\r\n                dataIndex: 'category',\r\n                key: 'category',\r\n                filters: this.state.category,\r\n                onFilter: (value, record) => value===record.category\r\n            },\r\n            {\r\n                title: '单价',\r\n                dataIndex: 'price',\r\n                key: 'price',\r\n                render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                sorter: (a, b) => a.price-b.price\r\n            },\r\n            {\r\n                title: '库存量',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                sorter: (a, b) => a.amount - b.amount,\r\n                filters: state,\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '单位',\r\n                dataIndex: 'unit',\r\n                key: 'unit',\r\n            },\r\n            {\r\n                title: '最近更新',\r\n                dataIndex: 'latestTime',\r\n                key: 'latestTime',\r\n                render: (text) => <span><Icon type=\"clock-circle\" /> {this.getTimeForm(text)}</span>,\r\n                sorter: (a, b) => a.latestTime - b.latestTime\r\n            },\r\n            {\r\n                title: '操作人',\r\n                dataIndex: 'manager',\r\n                key: 'manager'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>{this.handleEdit(record)}}>编辑</Button>\r\n                        <Divider type=\"vertical\" />\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>{this.handleDelete(record)}}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"stock-container\">\r\n                <TopNav nav={['库存管理', '库存信息']}/>\r\n                <div className=\"stock-header\">\r\n                    <Button type=\"primary\"\r\n                            style={{marginRight: \"40px\"}}\r\n                            onClick={()=>{this.props.history.push('/stock/add')}}><Icon type=\"plus\"/>新增库存</Button>\r\n                    <Button type=\"primary\" onClick={()=>this.props.history.push('/stock/log')}>仓库日志</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询库存名称\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey = {record => record.id}\r\n                               bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stock\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Card, Input, Button, Select, InputNumber, Modal, message} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport PictureWall from \"../../components/picture-wall/picture-wall\";\r\nimport {reqStockCategory, addStocklogList, addStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst AddStock = Form.create({name: 'add-stock-form'})(\r\n    class extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                category: [],\r\n                categoryAdd: \"\",\r\n                visible: false\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockCategory();\r\n            if(response.status === 0){\r\n                let category = [];\r\n                response.data.forEach(item => {\r\n                    category.push(item.category)\r\n                });\r\n                this.setState({category: category})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data = values;\r\n                    let response1 = await addStockList(data);\r\n                    if(response1.status===0){\r\n                        let log = {...data};\r\n                        log.stockname = log.name;\r\n                        log.manager = memoryUtils.user.username;\r\n                        log.operation = \"新增\";\r\n                        log.time = new Date().getTime();\r\n                        log.stockid = response1.data.insertId;\r\n                        delete log.name;\r\n                        let response2 = await addStocklogList(log);\r\n                        if(response2.status === 0){\r\n                            message.success(\"新增库存信息成功，即将返回库存列表页面\", 2);\r\n                            this.timerID = setTimeout(()=>{\r\n                                this.props.history.push('/stock')\r\n                            }, 2000);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        handleAddClick = () => {\r\n            this.setState({visible: true})\r\n        };\r\n        handleNameChange = (e) => {\r\n            this.setState({categoryAdd: e.target.value})\r\n        };\r\n        onOk = () => {\r\n            let category = this.state.category;\r\n            category.push(this.state.categoryAdd);\r\n            this.setState({\r\n                category: category,\r\n                visible: false\r\n            })\r\n        };\r\n        onCancel = () => {\r\n            this.setState({visible: false})\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存信息', '新增库存']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增库存记录</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"货物名称\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物名称\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"货物种类\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('category', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select style={{width: \"75%\"}} placeholder=\"请选择货物品类\">\r\n                                            {this.state.category.map(item => (\r\n                                                <Select.Option key={item}>{item}</Select.Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    <div style={{display: \"inline-block\", float: \"right\"}}>\r\n                                        <Button type=\"primary\"\r\n                                                onClick={this.handleAddClick}>新增品类</Button>\r\n                                        <Modal\r\n                                            title=\"新增品类\"\r\n                                            visible={this.state.visible}\r\n                                            okText=\"确认\"\r\n                                            onOk={this.onOk}\r\n                                            cancelText=\"取消\"\r\n                                            onCancel={this.onCancel}\r\n                                        >\r\n                                            <Input placeholder=\"请输入品类名称\" onChange={this.handleNameChange}/>\r\n                                        </Modal>\r\n                                    </div>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单价\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('price', {\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber />)\r\n                                }\r\n                                <span style={{marginLeft: \"10px\"}}>元</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存数量\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('amount', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入库存数量\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单位\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('unit', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物单位\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存监控\">\r\n                                <Input.Group compact>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('warning', {\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"下限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                    <span style={{margin: \"8px 20px 0 20px\"}}>~</span>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('excess', {\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"上限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"图片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('pictures', {\r\n                                        rules: [{required: true, message: \"请上传商品图片\"}]\r\n                                    })(<PictureWall />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入库存备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddStock;","import React from 'react';\r\nimport {Form, Tag, Modal, Row, Col, Card} from 'antd';\r\n\r\nclass StocklogView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'tab1'\r\n        }\r\n    }\r\n    onTabChange = (key) => {\r\n        this.setState({key: key})\r\n    };\r\n    content = (header) => header ? (\r\n        <div>\r\n            <Row>\r\n                <Col span={7} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>名称：</Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item>{header.stockname}</Form.Item>\r\n                </Col>\r\n                <Col span={4} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>种类：</Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item>{header.category}</Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={7} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>数量：</Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item>{header.amount}</Form.Item>\r\n                </Col>\r\n                <Col span={4} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>单位：</Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item>{header.unit}</Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={7} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>状态：</Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item>\r\n                        {header.amout > header.excess ? <Tag size=\"small\" color=\"blue\">过剩</Tag> :\r\n                            header.state < header.warning ? <Tag size=\"small\" color=\"red\">告罄</Tag> :\r\n                                <Tag size=\"small\" color=\"green\">正常</Tag>}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4} style={{textAlign: \"right\"}}>\r\n                    <Form.Item>监控：</Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item>\r\n                        下限:{header.warning}&nbsp;&nbsp;\r\n                        上限:{header.excess}\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={7}>\r\n                    <Form.Item style={{textAlign: \"right\"}}>图片：</Form.Item>\r\n                </Col>\r\n                <Col span={17}>\r\n                    {\r\n                        String(header.pictures).split(',').map((item, index) => {\r\n                            return item===\"\" ? null : <img\r\n                                key={index} src={'http://localhost:3001/upload/'+item} alt=\"货物图片\"\r\n                                style={{\r\n                                    width: \"80px\",\r\n                                    height: \"80px\",\r\n                                    padding: \"5px\",\r\n                                    marginRight: \"10px\",\r\n                                    borderRadius: \"5px\",\r\n                                    border: \"1px solid lightgray\"\r\n                                }}\r\n                            />\r\n                        })\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: '10px'}}>\r\n                <Col span={7}>\r\n                    <Form.Item style={{textAlign: \"right\"}}>备注：</Form.Item>\r\n                </Col>\r\n                <Col span={17}>\r\n                    <Form.Item>{header.note ? header.note : '无'}</Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    ) : null;\r\n    render() {\r\n        const contentList = {\r\n            tab1: this.content(this.props.info.before),\r\n            tab2: this.content(this.props.info),\r\n        };\r\n        return (\r\n            <Modal\r\n                visible={this.props.visible}\r\n                // title={<span style={{color: \"#1DA57A\"}}>日志详情-{this.props.info.operation || \"修改\"}</span>}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onOk={this.props.onOk}\r\n                onCancel={this.props.onCancel}\r\n                footer={null}\r\n            >\r\n                {\r\n                    Object.getOwnPropertyNames(this.props.info).length === 0 ? null :\r\n                        this.props.info.hasOwnProperty('before') ? (\r\n                            <Card\r\n                                style={{width: \"100%\", border: \"none\"}}\r\n                                tabList={[{key: 'tab1', tab: '修改前'}, {key: 'tab2', tab: '修改后'}]}\r\n                                activeTabKey={this.state.key}\r\n                                onTabChange={key=>this.onTabChange(key)}\r\n                            >\r\n                                {contentList[this.state.key]}\r\n                            </Card>\r\n                        ) : (\r\n                            <Card\r\n                                style={{width: \"100%\", border: \"none\"}}\r\n                                title={<span style={{ color: \"#1DA57A\", marginLeft: \"10px\"}}>{this.props.info.operation}记录</span>}\r\n                            >\r\n                                {this.content(this.props.info)}\r\n                            </Card>\r\n                        )\r\n                }\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StocklogView;\r\n\r\n","import React from 'react';\r\nimport {Button, Card, DatePicker, List,  Select} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport StocklogView from './stock-log-view';\r\nimport moment from \"moment\";\r\nimport { reqStocklogList } from \"../../api\";\r\n\r\nclass StockLog extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            data: [],\r\n            log: [],\r\n            option: 0,\r\n            visible: false,\r\n            logInfo: {},\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let response = await reqStocklogList();\r\n        if(response.status === 0){\r\n            let data1 = response.data.reverse();\r\n            data1 = data1.map(item1 => {\r\n                if(item1.operation === \"修改\"){\r\n                    let data2 = data1.filter(item2 => {\r\n                        return item1.time > item2.time && item1.stockid === item2.stockid && item1.operation === \"修改\"\r\n                    });\r\n                    if(data2.length === 0){\r\n                        item1.before = data1.find(item3 => {\r\n                            return item3.stockid === item1.stockid && item3.operation === \"新增\"\r\n                        });\r\n                    }else{\r\n                        data2 = data2.sort((a, b) => a.time - b.time);\r\n                        item1.before = data2.pop();\r\n                    }\r\n                }\r\n                return item1\r\n            });\r\n            this.setState({\r\n                data: data1,\r\n                log: data1\r\n            })\r\n        }\r\n    };\r\n    handleSelectChange = (value) => {\r\n        if(value === 0){\r\n            this.setState({log: this.state.data})\r\n        }\r\n        this.setState({option: value})\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleDatePickerChange = (date, dateString) => {\r\n        let start = new Date(dateString+\" 00:00:00\").getTime();\r\n        let end = new Date(dateString+\" 23:59:59\").getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleWeekPickerChange = (week) => {\r\n        let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n        let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleMonthPickerChange = (month) => {\r\n        let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleRangePickerChange = (dates, dateStrings) => {\r\n        let start = new Date(dateStrings[0]).getTime();\r\n        let end = new Date(dateStrings[1]).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    handleDetail = async (data) => {\r\n        console.log(data);\r\n        this.setState({\r\n            visible: true,\r\n            logInfo: data\r\n        });\r\n    };\r\n    onOk = () =>{\r\n        this.setState({\r\n            visible: false,\r\n            logInfo: {}\r\n        })\r\n    };\r\n    render(){\r\n        let header = (\r\n            <div style={{textAlign: \"right\"}}>\r\n                { this.state.option===0 ? null : this.getTimePicker()}\r\n                <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                        style={{width: \"115px\", margin: \"0 20px 0 10px\"}}>\r\n                    <Select.Option value={0}>按顺序查看</Select.Option>\r\n                    <Select.Option value={1}>按日期查看</Select.Option>\r\n                    <Select.Option value={2}>按周次查看</Select.Option>\r\n                    <Select.Option value={3}>按月份查看</Select.Option>\r\n                    <Select.Option value={4}>自定义区间</Select.Option>\r\n                </Select>\r\n            </div>\r\n        );\r\n        return (\r\n            <div>\r\n                <TopNav nav={['库存管理','库存信息','库存日志']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看库存日志</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/stock')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <List style={{margin: \"20px 170px\"}}\r\n                          size=\"small\"\r\n                          header={header}\r\n                          dataSource={this.state.log}\r\n                          pagination={{pageSize: 10}}\r\n                          renderItem={item =>\r\n                              <List.Item>\r\n                                  <span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>{this.getTimeForm(item.time)}</span>\r\n                                  <span style={{color: \"#1DA57A\", marginLeft: \"20px\", width: \"60px\"}}>{item.manager}</span>\r\n                                  <span>对</span>\r\n                                  <span style={{margin: \"0 20px\", width: \"80px\"}}>\r\n                                      “<span style={{color: \"#1DA57A\"}}>{item.before ? item.before.stockname : item.stockname}</span>”\r\n                                  </span>\r\n                                  <span>的库存信息进行了</span>\r\n                                  <span style={item.operation === '删除' ? {color: 'red'} : {color: '#1DA57A'}}>{item.operation}</span>\r\n                                  <Button\r\n                                      type='primary'\r\n                                      size='small'\r\n                                      style={{marginLeft: \"30px\"}}\r\n                                      onClick={()=>this.handleDetail(item)}\r\n                                  >详情</Button>\r\n                              </List.Item>\r\n                          }\r\n                          bordered\r\n                    />\r\n                    <StocklogView\r\n                        visible={this.state.visible}\r\n                        info={this.state.logInfo}\r\n                        onCancel={this.onOk}\r\n                        onOk={this.onOk}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StockLog;","import React from 'react';\r\nimport { Form, Card, Button, Tag, List, Select, DatePicker } from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport StocklogView from './stock-log-view';\r\nimport moment from \"moment\";\r\n\r\nclass ViewStock extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            data: [],\r\n            log: [],\r\n            option: 0,\r\n            visible: false,\r\n            logInfo: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = () => {\r\n        // const data = this.props.location.state.data;\r\n        // this.setState({\r\n        //     data: data,\r\n        //     log: data.log.reverse()\r\n        // });\r\n    \r\n        const data = this.props.location.state.data;\r\n        let data1 = data.log.reverse();\r\n        data1 = data1.map(item1 => {\r\n            if(item1.operation === \"修改\"){\r\n                let data2 = data1.filter(item2 => {\r\n                    return item1.time > item2.time && item1.stockid === item2.stockid && item1.operation === \"修改\"\r\n                });\r\n                if(data2.length === 0){\r\n                    item1.before = data1.find(item3 => {\r\n                        return item3.stockid === item1.stockid && item3.operation === \"新增\"\r\n                    });\r\n                }else{\r\n                    data2 = data2.sort((a, b) => a.time - b.time);\r\n                    item1.before = data2.pop();\r\n                }\r\n            }\r\n            return item1\r\n        });\r\n        this.setState({\r\n            data: data,\r\n            log: data1\r\n        });\r\n    };\r\n    handleSelectChange = (value) => {\r\n        if(value === 0){\r\n            this.setState({log: this.state.data.log})\r\n        }\r\n        this.setState({option: value})\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleDatePickerChange = (date, dateString) => {\r\n        let start = new Date(dateString+\" 00:00:00\").getTime();\r\n        let end = new Date(dateString+\" 23:59:59\").getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleWeekPickerChange = (week) => {\r\n        let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n        let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleMonthPickerChange = (month) => {\r\n        let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleRangePickerChange = (dates, dateStrings) => {\r\n        let start = new Date(dateStrings[0]).getTime();\r\n        let end = new Date(dateStrings[1]).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    getTimeForm = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    handleDetail = (data) => {\r\n        this.setState({\r\n            visible: true,\r\n            logInfo: data\r\n        })\r\n    };\r\n    onOk = () =>{\r\n        this.setState({visible: false})\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        let header = (\r\n            <div style={{textAlign: \"right\"}}>\r\n                { this.state.option===0 ? null : this.getTimePicker()}\r\n                <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                        style={{width: \"115px\", margin: \"0 20px 0 10px\"}}>\r\n                    <Select.Option value={0}>按顺序查看</Select.Option>\r\n                    <Select.Option value={1}>按日期查看</Select.Option>\r\n                    <Select.Option value={2}>按周次查看</Select.Option>\r\n                    <Select.Option value={3}>按月份查看</Select.Option>\r\n                    <Select.Option value={4}>自定义区间</Select.Option>\r\n                </Select>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"stock-view-container\">\r\n                <TopNav nav={['库存管理', '库存信息', '货物详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看货物详情</span>}\r\n                      extra={<Button type='primary' onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"货物名称\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"货物种类\">\r\n                            <span className=\"ant-form-text\">{this.state.data.category}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"单价\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.price.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存数量\">\r\n                            <span className=\"ant-form-text\">{this.state.data.amount}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存单位\">\r\n                            <span className=\"ant-form-text\">{this.state.data.unit}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存状态\">\r\n                            <span style={{marginLeft: \"20px\"}}>\r\n                                {this.state.data.state===0 ? <Tag size=\"small\" color=\"blue\">正常</Tag> :\r\n                                    this.state.data.state===1 ? <Tag size=\"small\" color=\"red\">告罄</Tag> :\r\n                                        <Tag size=\"small\" color=\"green\">过剩</Tag>}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存监控\">\r\n                            <span className=\"ant-form-text\">\r\n                                上限：{this.state.data.excess}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                下限：{this.state.data.warning}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"图片\">\r\n                                <span className=\"ant-form-pictures\">\r\n                                    {\r\n                                        this.state.data.pictures.map((item, index) => {\r\n                                            return item===\"\" ? null\r\n                                                : <img key={index} src={'/upload/'+item} alt=\"货物图片\"/>\r\n                                        })\r\n                                    }\r\n                                </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{ this.state.data.note ? this.state.data.note : '无'}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <List style={{margin: \"50px 170px\"}}\r\n                          size=\"small\"\r\n                          header={header}\r\n                          dataSource={this.state.log}\r\n                          pagination={{pageSize: 10}}\r\n                          renderItem={item =>\r\n                              <List.Item>\r\n                                  {/*<span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>{this.getTimeForm(item.time)}</span>*/}\r\n                                  {/*<span style={{color: \"#1DA57A\", marginLeft: \"20px\", width: \"50px\"}}>{item.manager}</span>*/}\r\n                                  {/*<span>对“{item.stockname}”的库存信息进行了{item.operation}</span>*/}\r\n                                  {/*<Button type=\"link\"*/}\r\n                                  {/*        style={{marginLeft: \"30px\"}}*/}\r\n                                  {/*        onClick={()=>this.handleDetail(item)}*/}\r\n                                  {/*>详情</Button>*/}\r\n                                  <span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>\r\n                                      {this.getTimeForm(item.time)}\r\n                                  </span>\r\n                                  <span style={{color: \"#1DA57A\", marginLeft: \"20px\", width: \"60px\"}}>\r\n                                      {item.manager}\r\n                                  </span>\r\n                                  <span>对</span>\r\n                                  <span style={{margin: \"0 20px\", width: \"80px\"}}>“<span style={{color: \"#1DA57A\"}}>{item.stockname}</span>”</span>\r\n                                  <span>的库存信息进行了</span>\r\n                                  <span style={{color: '#1DA57A'}}>{item.operation}</span>\r\n                                  <Button\r\n                                      type=\"primary\"\r\n                                      size=\"small\"\r\n                                      style={{marginLeft: \"30px\"}}\r\n                                      onClick={()=>this.handleDetail(item)}\r\n                                  >详情</Button>\r\n                              </List.Item>\r\n                          }\r\n                          bordered\r\n                    />\r\n                    <StocklogView\r\n                        visible={this.state.visible}\r\n                        info={this.state.logInfo}\r\n                        onCancel={this.onOk}\r\n                        onOk={this.onOk}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ViewStock;","import React from 'react';\r\nimport {Form, Card, Input, Button, Select, InputNumber, Modal, message} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport PictureWall from \"../../components/picture-wall/picture-wall\";\r\nimport {reqStockCategory, addStocklogList, updateStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst EditStock = Form.create({name: 'edit-stock-form'})(\r\n    class extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                category: [],\r\n                categoryAdd: \"\",\r\n                visible: false\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockCategory();\r\n            if(response.status === 0){\r\n                let category = [];\r\n                response.data.forEach(item => {\r\n                    category.push(item.category)\r\n                });\r\n                this.setState({category: category})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data1 = {};\r\n                    let data2 = JSON.parse(JSON.stringify(this.props.location.state.data));\r\n                    data1.id = data2.id;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data1[key] = values[key]\r\n                        }\r\n                    }\r\n                    data2.pictures = data2.pictures.join(',');\r\n                    let tag = 0;\r\n                    for(let key in data1){\r\n                        if(data1[key] !== data2[key]) tag = 1\r\n                    }\r\n                    console.log(tag);\r\n                    let response1 = await updateStockList(data1);\r\n                    //当库存信息未发生改变时，不更新日志\r\n                    if(response1.status === 0 && tag === 1){\r\n                        let log = {...data1};\r\n                        log.stockid = log.id;\r\n                        log.stockname = log.name;\r\n                        log.time = new Date().getTime();\r\n                        log.operation = \"修改\";\r\n                        log.manager = memoryUtils.user.username;\r\n                        delete log.id;\r\n                        delete log.name;\r\n                        let response2 = await addStocklogList(log);\r\n                        if(response2.status === 0){\r\n                            message.success(\"更新库存信息成功,即将返回库存列表页面\");\r\n                            this.timerID = setTimeout(()=>{\r\n                                this.props.history.push('/stock')\r\n                            }, 2000);\r\n                        }\r\n                    }else{\r\n                        message.success(\"更新库存信息成功,即将返回库存列表页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/stock')\r\n                        }, 2000);\r\n                    }\r\n                    \r\n                }\r\n            })\r\n        };\r\n        handleAddClick = () => {\r\n            this.setState({visible: true})\r\n        };\r\n        handleNameChange = (e) => {\r\n            this.setState({categoryAdd: e.target.value})\r\n        };\r\n        onOk = () => {\r\n            let category = this.state.category;\r\n            category.push(this.state.categoryAdd);\r\n            this.setState({\r\n                category: category,\r\n                visible: false\r\n            })\r\n        };\r\n        onCancel = () => {\r\n            this.setState({visible: false})\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            let initialData = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存信息', '编辑库存']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑库存记录</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"货物名称\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        initialValue: initialData.name,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物名称\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"货物种类\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('category', {\r\n                                        initialValue: initialData.category,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select style={{width: \"75%\"}} placeholder=\"请选择货物品类\">\r\n                                            {this.state.category.map(item => (\r\n                                                <Select.Option key={item}>{item}</Select.Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    <div style={{display: \"inline-block\", float: \"right\"}}>\r\n                                        <Button type=\"primary\"\r\n                                                onClick={this.handleAddClick}>新增品类</Button>\r\n                                        <Modal\r\n                                            title=\"新增品类\"\r\n                                            visible={this.state.visible}\r\n                                            okText=\"确认\"\r\n                                            onOk={this.onOk}\r\n                                            cancelText=\"取消\"\r\n                                            onCancel={this.onCancel}\r\n                                        >\r\n                                            <Input placeholder=\"请输入品类名称\" onChange={this.handleNameChange}/>\r\n                                        </Modal>\r\n                                    </div>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存单价\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('price', {\r\n                                        initialValue: initialData.price,\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber />)\r\n                                }\r\n                                <span style={{marginLeft: \"10px\"}}>元</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存数量\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('amount', {\r\n                                        initialValue: initialData.amount,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入库存数量\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单位\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('unit', {\r\n                                        initialValue: initialData.unit,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物单位\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存监控\">\r\n                                <Input.Group compact>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('warning', {\r\n                                                initialValue: initialData.warning,\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"下限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                    <span style={{margin: \"8px 20px 0 20px\"}}>~</span>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('excess', {\r\n                                                initialValue: initialData.excess,\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"上限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"图片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('pictures', {\r\n                                        initialValue: initialData.pictures.join(',')\r\n                                    })(<PictureWall imgs={initialData.pictures.join(\",\")} />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: initialData.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入库存备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditStock;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Input, Form, DatePicker, Table, Tag, Icon, Divider, Modal} from \"antd\";\r\nimport Loading from '../../components/loading';\r\nimport {reqInventoryList, reqStockList, reqUserList, reqInventoryUpdate, reqInventoryDelete} from '../../api';\r\n\r\nconst Inventory = Form.create({name: 'search-inventory-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                isLoading: true,\r\n                data: [],\r\n                tableData: [],\r\n                createrFilters: [],\r\n                dateRange: [],\r\n                searchValue : ''\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqInventoryList();\r\n            this.refreshTable(response);\r\n        };\r\n        componentWillUnmount = () => {\r\n            clearTimeout(this.timerID)\r\n        };\r\n        refreshTable = async (response1) => {\r\n            const response2 = await reqUserList();\r\n            const response3 = await reqStockList();\r\n            if(response1.status===0 && response2.status===0 && response3.status===0){\r\n                let creater = [];\r\n                let data = response1.data.map(item1 => {\r\n                    response2.data.forEach(item2 => {\r\n                        if(item1.creater === item2.id){\r\n                            item1.creater = item2.username;\r\n                            creater.push(item1.creater)\r\n                        }\r\n                    });\r\n                    return item1\r\n                });\r\n                creater = new Set(creater);\r\n                let createrFilters = [];\r\n                creater.forEach(item => {\r\n                    createrFilters.push({text: item, value: item})\r\n                });\r\n                this.setState({isLoading: true});\r\n                this.timerID = setTimeout(() => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        data: data.reverse(),\r\n                        tableData: data,\r\n                        createrFilters: createrFilters,\r\n                        dateRange: [NaN, NaN]\r\n                    })\r\n                }, 300)\r\n            }\r\n        };\r\n        handleDeal = (record) => {\r\n            let data = {id: record.id, state : 1-record.state};\r\n            Modal.confirm({\r\n                title: \"警告\",\r\n                content: \"确定要将单号\\\"PD\"+record.id+\"\\\"设置为已处理吗\",\r\n                okText: \"确认\",\r\n                onOk: async ()=>{\r\n                    const response = await reqInventoryUpdate(data);\r\n                    if(response.status===0){\r\n                        let data = this.state.data.map(item => {\r\n                            item.state = item.id===record.id ? 1-item.state : item.state;\r\n                            return item;\r\n                        });\r\n                        this.setState({data: data})\r\n                    }\r\n                },\r\n                cancelText: \"取消\",\r\n                onCancel: () => {}\r\n            })\r\n        };\r\n        handleDelete = async (record) => {\r\n            Modal.confirm({\r\n                title: '警告',\r\n                content:  \"确定要删除该库存记录\\\"\"+record.id+\"\\\"吗？\",\r\n                okText: '确认',\r\n                onOk: async () => {\r\n                    const response = await reqInventoryDelete(record.id);\r\n                    if(response.status === 0){\r\n                        let tableData=[];\r\n                        this.state.data.forEach(item => {\r\n                            if(item.id !== record.id)  tableData.push(item)\r\n                        });\r\n                        this.setState({\r\n                            tableData: tableData\r\n                        })\r\n                    }\r\n                },\r\n                cancelText: '取消',\r\n                onCancel: () => {}\r\n            });\r\n        };\r\n        handleView = (record) => {\r\n            this.props.history.push({pathname: '/stock/inventory/view', state: {data: record}})\r\n        };\r\n        handleRangePickerChange = (dates, dateStrings) => {\r\n            let start = new Date(dateStrings[0]).getTime();\r\n            let end = new Date(dateStrings[1]).getTime();\r\n            let dateRange = [];\r\n            dateRange.push(start);\r\n            dateRange.push(end);\r\n            let tableData = isNaN(start) || isNaN(end) ? this.state.data : this.state.data.filter(item => {\r\n                return item.createtime >= start && item.createtime <= end\r\n            });\r\n            if(!!this.state.searchValue){\r\n                tableData = tableData.filter(item => {\r\n                    return String(item.id) === this.state.searchValue\r\n                });\r\n            }\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(()=>{\r\n                this.setState({\r\n                    isLoading: false,\r\n                    tableData: tableData,\r\n                    dateRange: dateRange\r\n                })\r\n            },300)\r\n        };\r\n        handleSearch = async (value) => {\r\n            console.log(this.state.dateRange);\r\n            console.log(isNaN(this.state.dateRange[0]));\r\n            console.log(isNaN(this.state.dateRange[1]));\r\n            if(isNaN(this.state.dateRange[0] && isNaN(this.state.dateRange[1]))){\r\n                if(!value){\r\n                    const response = await reqInventoryList();\r\n                    this.refreshTable(response)\r\n                }else{\r\n                    let tableData = this.state.data.filter(item => {\r\n                        return String(item.id) === value\r\n                    });\r\n                    this.setState({isLoading: true});\r\n                    this.timerID = setTimeout(() => {\r\n                        this.setState({\r\n                            isLoading: false,\r\n                            tableData: tableData,\r\n                            searchValue: value\r\n                        })\r\n                    }, 300)\r\n                }\r\n            }else{\r\n                let tableData = this.state.data.filter(item => {\r\n                    return !value ?\r\n                        item.createtime >= this.state.dateRange[0] && item.createtime <= this.state.dateRange[1] :\r\n                        value === String(item.id) && item.createtime >= this.state.dateRange[0] && item.createtime <= this.state.dateRange[1]\r\n                });\r\n                this.setState({isLoading: true});\r\n                this.timerID = setTimeout(() => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        tableData: tableData,\r\n                        searchValue: value\r\n                    })\r\n                }, 300)\r\n            }\r\n        };\r\n        getTimeForm = (time) => {\r\n            time = new Date(time);\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        getVariance = (amount, expect) => {\r\n            const ret = (amount-expect).toFixed(2);\r\n            return ret>0 ? <span>+{ret}</span> : <span>{ret}</span>\r\n        };\r\n        render(){\r\n            const columns = [\r\n                {\r\n                    title: '盘点单号',\r\n                    dataIndex: 'id',\r\n                    key: 'id',\r\n                    render: (text, record) => <Button type=\"link\" onClick={()=>{this.handleView(record)}}>{text}</Button>\r\n                },\r\n                {\r\n                    title: '盘点时间',\r\n                    dataIndex: 'createtime',\r\n                    key: 'time',\r\n                    render: (text) => <span><Icon type=\"clock-circle\" />  {this.getTimeForm(text)}</span>,\r\n                    sorter: (a, b) => a.time-b.time\r\n                },\r\n                {\r\n                    title: '盘点人',\r\n                    dataIndex: 'creater',\r\n                    key: 'creater',\r\n                    filters: this.state.createrFilters,\r\n                    onFilter: (value, record) => value===record.creatername\r\n                },\r\n                {\r\n                    title: '预期金额',\r\n                    key: 'expect',\r\n                    dataIndex: 'expect',\r\n                    render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                    sorter: (a, b) => a.expect-b.expect\r\n                },\r\n                {\r\n                    title: '盘点金额',\r\n                    key: 'amount',\r\n                    dataIndex: 'amount',\r\n                    render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                    sorter: (a, b) => a.amount-b.amount\r\n                },\r\n                {\r\n                    title: '差异金额',\r\n                    key: 'variance',\r\n                    render: (text, record) => this.getVariance(record.amount, record.expect),\r\n                    sorter: (a, b) => a.amount-b.amount\r\n                },\r\n                {\r\n                    title: '状态',\r\n                    key: 'state',\r\n                    dataIndex: 'state',\r\n                    render: (text) => text===1 ? <Tag color='green'>已处理</Tag> : <Tag color='red'>未处理</Tag>,\r\n                    filters: [{text: '已处理', value: 0}, {text: '未处理', value: 1}],\r\n                    onFilter: (value, record) => value===record.state\r\n                },\r\n                {\r\n                    title: '操作',\r\n                    key: 'operate',\r\n                    render: (text, record) => record.state===1 ?\r\n                        <div>\r\n                            <Button size=\"small\" disabled>处理</Button>\r\n                            <Divider type=\"vertical\" />\r\n                            <Button size=\"small\" type=\"danger\" disabled>删除</Button>\r\n                        </div> : <div>\r\n                            <Button size=\"small\" onClick={()=>this.handleDeal(record)}>处理</Button>\r\n                            <Divider type=\"vertical\" />\r\n                            <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                        </div>\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存盘点']} />\r\n                    <div className=\"stock-header\" style={{margin: \"20px\"}}>\r\n                        <Button type=\"primary\"\r\n                                style={{marginRight: \"40px\"}}\r\n                                onClick={()=>{this.props.history.push('/stock/inventory/add')}}>\r\n                            <Icon type=\"plus\"/>新建盘点单\r\n                        </Button>\r\n                        <Input.Search\r\n                            placeholder=\"搜索盘点单号\"\r\n                            style={{width: \"160px\", float: \"right\", marginLeft: \"15px\"}}\r\n                            onSearch={(value) => this.handleSearch(value)}\r\n                            enterButton\r\n                        />\r\n                        <DatePicker.RangePicker\r\n                            style={{width: \"250px\", float: \"right\"}}\r\n                            onChange={this.handleRangePickerChange}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.isLoading ? <Loading /> :\r\n                            <Table\r\n                                size=\"small\"\r\n                                style={{margin: '20px'}}\r\n                                columns={columns}\r\n                                dataSource={this.state.tableData}\r\n                                rowKey={record => record.id}\r\n                                bordered\r\n                            />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default Inventory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, Form, Tag} from \"antd\";\r\n\r\nclass ViewInventory extends React.Component{\r\n    getTime = (time) => {\r\n        time = new Date();\r\n        let month = time.getMonth()+1;\r\n        month = month>=10 ? month : \"0\"+month;\r\n        let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n        let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n        let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n        let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n        return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n    };\r\n    getVariance = (amount, expect) => {\r\n        const ret = (amount-expect).toFixed(2);\r\n        return ret>0 ? <span>+{ret}</span> : <span>{ret}</span>\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        const data = this.props.location.state.data;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['库存管理', '库存盘点', '盘点详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看盘点详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock/inventory')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"盘点单号\">\r\n                            <span className=\"ant-form-text\">{data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点人\">\r\n                            <span className=\"ant-form-text\">{data.creater}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"预期金额\">\r\n                            <span className=\"ant-form-text\">￥{data.expect.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点金额\">\r\n                            <span className=\"ant-form-text\">￥{data.amount.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"差异金额\">\r\n                            <span className=\"ant-form-text\">{this.getVariance(data.amount, data.expect)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"状态\">\r\n                            <span className=\"ant-form-text\" style={{marginLeft: \"20px\", textIndent: 0}}>\r\n                                {data.state===0 ? <Tag color='green'>未处理</Tag> : <Tag color='red'>已处理</Tag>}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{ data.note ? data.note : '无'}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"详情\">\r\n                            <span className=\"ant-form-text\">{data.detail}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewInventory;\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, InputNumber, Card, Button, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqInventoryAdd, reqStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst AddInventory = Form.create({ name: 'inventory-add-form' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                expect: 0\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockList();\r\n            if(response.status === 0){\r\n                let expect = 0;\r\n                response.data.forEach(item => {\r\n                    expect = expect + item.amount * item.price;\r\n                });\r\n                this.setState({expect: expect.toFixed(2)})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data = values;\r\n                    data.createtime = new Date(data.createtime).getTime();\r\n                    data.state = 0;\r\n                    data.creater = memoryUtils.user.id;\r\n                    data.amount = data.amount.toFixed(2);\r\n                    const response = await reqInventoryAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增盘点记录成功,即将返回盘点列表页面\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/stock/inventory')\r\n                        }, 1500);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        getTime = () => {\r\n            let time = new Date();\r\n            let month = time.getMonth()+1;\r\n            month = month>=10 ? month : \"0\"+month;\r\n            let date = time.getDate()>=10 ? time.getDate() : \"0\"+time.getDate();\r\n            let hour = time.getHours()>=10 ? time.getHours() : \"0\"+time.getHours();\r\n            let minute = time.getMinutes()>=10 ? time.getMinutes() : \"0\"+time.getMinutes();\r\n            let second = time.getSeconds()>=10 ? time.getSeconds() : \"0\"+time.getSeconds();\r\n            return time.getFullYear()+\"-\"+month+\"-\"+date+\" \"+hour+\":\"+minute+\":\"+second;\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存盘点', '新建盘点单']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新建盘点单</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock/inventory')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"盘点日期\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTime(),\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"盘点人\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: memoryUtils.user.username\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"预期金额\">\r\n                                {form.getFieldDecorator('expect', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.expect\r\n                                })(<Input addonBefore=\"￥\" disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"盘点金额\">\r\n                                {form.getFieldDecorator('amount', {\r\n                                    rules: [{required: true}]\r\n                                })(<InputNumber style={{width: \"100%\"}} placeholder=\"请输入盘点金额\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"详情\">\r\n                                {form.getFieldDecorator('detail', {\r\n                                    rules: [{required: true}]\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={2}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddInventory;","import React from 'react';\r\nimport {Switch, Redirect, Route} from 'react-router-dom';\r\nimport memoryUtils from '../../util/memoryUtils';\r\nimport {Layout} from 'antd';\r\nimport Header from '../../components/header';\r\nimport LeftNav from '../../components/left-nav';\r\nimport Home from '../../pages/home/home';\r\nimport EditHome from '../../pages/home/home-edit';\r\nimport ViewHome from '../../pages/home/home-view';\r\nimport Category from '../product/category';\r\nimport AddCategory from '../product/category-add';\r\nimport EditCategory from '../product/category-edit';\r\nimport ViewCategory from '../product/category-view';\r\nimport Product from '../../pages/product/product';\r\nimport AddProduct from '../product/product-add';\r\nimport EditProduct from '../product/product-edit';\r\nimport ViewProduct from '../product/product-view';\r\nimport Order from '../../pages/order/order';\r\nimport ViewOrder from '../../pages/order/order-view';\r\nimport Stage from '../order/stage';\r\nimport Member from '../member/member';\r\nimport AddMember from '../member/member-add';\r\nimport EditMember from '../member/member-edit';\r\nimport ViewMember from '../member/member-view';\r\nimport Employee from '../../pages/employee/employee';\r\nimport AddEmployee from '../../pages/employee/employee-add';\r\nimport ViewEmployee from '../../pages/employee/employee-view';\r\nimport EditEmployee from '../../pages/employee/employee-edit';\r\nimport Role from '../../pages/employee/role';\r\nimport AddRole from '../../pages/employee/role-add';\r\nimport EditRole from '../../pages/employee/role-edit';\r\nimport User from '../../pages/employee/user';\r\nimport AddUser from '../../pages/employee/user-add';\r\nimport EditUser from '../../pages/employee/user-edit';\r\nimport Stock from '../../pages/stock/stock';\r\nimport AddStock from '../../pages/stock/stock-add';\r\nimport StockLog from '../../pages/stock/stock-log';\r\nimport ViewStock from '../../pages/stock/stock-view';\r\nimport EditStock from '../../pages/stock/stock-edit';\r\nimport Inventory from '../stock/inventory';\r\nimport ViewInventory from \"../stock/inventory-view\";\r\nimport AddInventory from '../stock/inventory-add';\r\n\r\n\r\nconst {Sider,Content,Footer}=Layout;\r\n\r\nclass Admin extends React.Component{\r\n    render(){\r\n        const user=memoryUtils.user;\r\n        if(JSON.stringify(user)==='{}'){\r\n            return <Redirect to='/login' />\r\n        }else{\r\n            return (\r\n                <Layout>\r\n                    <Sider style={{height: \"100vh\", position: \"fixed\"}}>\r\n                        <LeftNav />\r\n                    </Sider>\r\n                    <Layout id=\"right\" style={{marginLeft: \"200px\"}}>\r\n                        <Header />\r\n                        <Content style={{margin: \"0 20px\", paddingBottom: \"100px\", backgroundColor: \"white\", minHeight: \"500px\"}}>\r\n                            <Switch>\r\n                                {/*首页*/}\r\n                                <Route exact path='/home' component={Home} />\r\n                                <Route path='/home/view' component={ViewHome} />\r\n                                <Route path='/home/edit' component={EditHome} />\r\n                                \r\n                                {/*订单管理*/}\r\n                                <Route exact path='/order' component={Order} />\r\n                                <Route path='/order/view' component={ViewOrder} />\r\n                                <Route exact path='/order/stage' component={Stage} />\r\n                                <Route path='/order/stage/view' component={ViewOrder} />\r\n                                \r\n                                {/*商品管理*/}\r\n                                <Route exact path='/product' component={Product} />\r\n                                <Route path='/product/add' component={AddProduct} />\r\n                                <Route path='/product/edit' component={EditProduct} />\r\n                                <Route path='/product/view' component={ViewProduct} />\r\n                                <Route exact path='/product/category' component={Category} />\r\n                                <Route path='/product/category/add' component={AddCategory} />\r\n                                <Route path='/product/category/edit' component={EditCategory} />\r\n                                <Route path='/product/category/view' component={ViewCategory} />\r\n                                \r\n                                {/*库存管理*/}\r\n                                <Route exact path='/stock' component={Stock} />\r\n                                <Route path='/stock/add' component={AddStock} />\r\n                                <Route path='/stock/view' component={ViewStock} />\r\n                                <Route path='/stock/log' component={StockLog} />\r\n                                <Route path='/stock/edit' component={EditStock} />\r\n                                <Route exact path='/stock/inventory' component={Inventory} />\r\n                                <Route path='/stock/inventory/view' component={ViewInventory} />\r\n                                <Route path='/stock/inventory/add' component={AddInventory} />\r\n                                \r\n                                {/*会员管理*/}\r\n                                <Route exact path='/member' component={Member} />\r\n                                <Route path='/member/add' component={AddMember} />\r\n                                <Route path='/member/edit' component={EditMember} />\r\n                                <Route path='/member/view' component={ViewMember} />\r\n                                \r\n                                {/*人事管理*/}\r\n                                <Route exact path='/employee' component={Employee} />\r\n                                <Route path='/employee/add' component={AddEmployee} />\r\n                                <Route path='/employee/view' component={ViewEmployee} />\r\n                                <Route path='/employee/edit' component={EditEmployee} />\r\n                                <Route exact path='/employee/user' component={User} />\r\n                                <Route path='/employee/user/add' component={AddUser} />\r\n                                <Route path='/employee/user/edit' component={EditUser} />\r\n                                <Route exact path='/employee/role' component={Role} />\r\n                                <Route path='/employee/role/add' component={AddRole} />\r\n                                <Route path='/employee/role/edit' component={EditRole} />\r\n                                \r\n                                {/*重定向*/}\r\n                                <Redirect to='/home' />\r\n                            </Switch>\r\n                        </Content>\r\n                        <Footer>推荐使用Chrome浏览器，可获得更佳的页面操作体验。</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin","import React from 'react';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Login from './pages/login/login';\nimport Admin from './pages/admin/admin';\n\nclass App extends React.Component{\n    render(){\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/login\" component={Login}/>\n                    <Route path=\"/\" component={Admin}/>\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport storageUtil from './util/storageUtils';\nimport memoryUtils from './util/memoryUtils';\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nmoment.locale('zh-cn');\n\nconst user=storageUtil.getUser();\nmemoryUtils.user=user;\n\nReactDOM.render(<ConfigProvider locale={zh_CN}><App /></ConfigProvider>, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.6c9c9c6a.png\";"],"sourceRoot":""}