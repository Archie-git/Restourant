{"version":3,"sources":["assets/images/logo.png","api/ajax.js","api/jsonp.js","api/index.js","util/memoryUtils.js","util/storageUtils.js","pages/login/login.jsx","components/header/index.jsx","components/left-nav/index.jsx","components/top-nav/index.jsx","pages/home/home.jsx","components/loading/index.jsx","pages/product/category.jsx","pages/product/category-add.jsx","pages/product/category-edit.jsx","pages/product/category-view.jsx","pages/product/product-search.jsx","pages/product/product.jsx","components/picture-wall/picture-wall.jsx","pages/product/product-add.jsx","pages/product/product-edit.jsx","pages/product/product-view.jsx","pages/order/order.jsx","pages/order/order-view.jsx","pages/order/frontdesk.jsx","pages/customer/customer.jsx","pages/customer/customer-add.jsx","pages/customer/customer-edit.jsx","pages/customer/customer-view.jsx","pages/employee/employee.jsx","pages/employee/employee-add.jsx","pages/employee/employee-view.jsx","pages/employee/employee-edit.jsx","pages/employee/role.jsx","pages/employee/role-add.jsx","pages/employee/role-edit.jsx","pages/employee/user.jsx","pages/employee/user-add.jsx","pages/employee/user-edit.jsx","pages/stock/stock.jsx","pages/stock/stock-add.jsx","pages/stock/stock-log-view.jsx","pages/stock/stock-log.jsx","pages/stock/stock-view.jsx","pages/stock/stock-edit.jsx","pages/stock/inventory.jsx","pages/stock/inventory-view.jsx","pages/stock/inventory-add.jsx","pages/finance/finance.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["module","exports","ajax","url","data","type","Promise","resolve","axios","get","params","post","then","response","catch","err","message","error","jsonp","key","output","ouput","undefined","$","dataType","success","ret","WEATHER_URL","LOCATION_URL","reqLogin","username","password","reqWeather","location","reqCity","reqCategoryList","updateCategoryList","reqCategorySearch","name","reqCategoryDelete","id","addCategoryList","reqProductList","reqProductDelete","updateProductList","addProductList","reqProductSearch","reqImgDelete","reqStockList","reqStockCategory","reqStockDelete","reqStockSearch","addStockList","updateStockList","reqStocklogList","addStocklogList","reqCustomerList","reqCustomerSearch","idOrName","reqCustomerDelete","reqCustomerAdd","updateCustomerList","reqEmployeeList","reqEmployeeDelete","reqEmployeeSearch","nameOrWorkid","addEmployeeList","updateEmployeeList","reqInventoryList","reqInventoryAdd","reqInventoryUpdate","reqInventoryDelete","reqUserList","reqUserDelete","reqUserAdd","reqUserUpdate","reqOrderList","reqOrderSearch","reqRoleList","reqRoleDelete","reqRoleAdd","reqRoleUpdate","reqRuleList","reqRuleUpdate","user","others","store","require","saveUser","set","getUser","removeUser","USER_KEY","remove","Login","handleSubmit","e","preventDefault","props","form","validateFields","values","a","async","response1","response2","status","permission","forEach","item","role","split","memoryUtils","storageUtils","history","replace","console","log","validatePwd","rule","value","callback","length","test","validateUser","JSON","stringify","to","this","className","src","logo","alt","onSubmit","Item","getFieldDecorator","rules","validator","prefix","style","color","placeholder","htmlType","React","Component","create","Header","UNSAFE_componentWillMount","memoryUtil","result","ad_info","district","HeWeather6","weather_txt","now","cond_txt","weather_code","cond_code","intervalId","setInterval","time","Date","month","getMonth","setState","date","getFullYear","getDate","logout","loading","setTimeout","storageUtil","state","clearInterval","marginRight","placement","title","okType","onConfirm","okText","cancelText","withRouter","SubMenu","LeftNav","menu","icon","display","children","rootSubmenuKeys","onOpenChange","openKeys","latestOpenKey","find","indexOf","closeSubmenuAll","pathname","path","Logo","selectedKeys","mode","theme","map","TopNav","nav","index","fontWeight","cursor","margin","Home","Loading","size","Category","refreshTable","isLoading","timerID","msg","handleIsnavChange","record","isnav","handleSearch","handleDelete","confirm","content","onOk","push","onCancel","handleAdd","handleEdit","handleView","columns","render","text","dataIndex","onClick","level","sorter","b","son","amount","defaultChecked","filters","onFilter","Search","width","float","onSearch","enterButton","dataSource","rowKey","bordered","AddCategory","validateName","Number","fontSize","extra","border","labelCol","span","wrapperCol","marginTop","label","required","Option","valuePropName","initialValue","TextArea","rows","EditCategory","hasOwnProperty","getLevel","temp","note","ViewCategory","textIndent","ProductSearch","layout","textAlign","Group","Product","componentWillUnmount","clearTimeout","formRef","rowSelection","onChange","selectedRowKeys","options1","options2","categoryFilters","item1","item2","category","category_name","handleStateChange","string","obj","handleSearchSubmit","nameOrNumber","arr","handleCascaderChange","operation","handleOperate","formRef1","resetFields","selectedCategory","price","unit","sales","starArr","i","stars","onsale","isnew","recommend","options","wrappedComponentRef","PicturesWall","previewVisible","previewImage","fileList","urlArr","imgs","uid","getBase64","file","reject","reader","FileReader","readAsDataURL","onload","onerror","handleCancel","handlePreview","preview","originFileObj","handleChange","fileIndex","splice","urls","join","uploadButton","action","accept","listType","onPreview","visible","footer","AddProduct","category_options","validateNumber","validatePrice","validateUnit","validateNoteProduct","validateIntegral","validateIntroduceTitle","validateIntroduceContent","integral","hasFeedback","validate","addonAfter","min","max","step","EditProduct","number","introduce","description","discount_gold","discount_platinum","discount_diamond","pictures","ViewProduct","stateYes","stateNo","marginLeft","Order","commodity","parse","getTime","getHours","getMinutes","tableData","column","count","overflow","ViewOrder","customer","createtime","payment","evalution","OrderStage","Customer","handleSet","handleDetail","gold","platinum","diamond","AddCustomer","addonBefore","EditCustomer","tel","buttonStyle","Button","ViewCustomer","Employee","department","departmentFilter","duty","dutyFilter","Set","workid","gender","age","entrytime","salary","AddEmployee","handleNext","current","handlePrevious","birthday","graduatetime","onTabChange","getDateTime","getMonthTime","value1","formItemLayout","contentList","tab1","nation","origin","marriage","degree","institution","tab2","address","profile","height","padding","borderRadius","steps","format","MonthPicker","tabList","tab","activeTabKey","Step","ViewEmployee","EditEmployee","updateData","moment","disabled","Role","creater","creatername","item3","viewVisible","AddRole","target","checked","marginBottom","EditRole","concat","getFatherChecked","User","rolename","editVisible","AddUser","EditUser","email","Stock","response3","excess","warning","stockid","manager","fullTime","stockname","AddStock","insertId","handleAddClick","handleNameChange","categoryAdd","compact","StocklogView","info","paddingLeft","String","StockLog","reverse","handleSelectChange","option","getTimePicker","handleDatePickerChange","WeekPicker","handleWeekPickerChange","handleMonthPickerChange","RangePicker","handleRangePickerChange","dateString","start","end","filter","week","day","startOf","endOf","dates","dateStrings","logInfo","header","defaultValue","pagination","pageSize","renderItem","ViewStock","EditStock","initialData","Inventory","createrFilters","dateRange","handleDeal","renge","rangeString","getVariance","expect","toFixed","ViewInventory","detail","AddInventory","Finance","Sider","Content","Footer","Admin","position","paddingBottom","backgroundColor","minHeight","component","App","locale","ReactDOM","zh_CN","document","getElementById"],"mappings":"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","file":"static/js/main.9eacb17a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6c9c9c6a.png\";","/*能发送异步ajax的函数模块，\r\n*封装Axios库，\r\n* 返回的是一个promise对象*/\r\n\r\nimport axios from 'axios';\r\nimport {message} from 'antd';\r\n\r\nexport default function ajax(url,data={},type='GET') {\r\n    return new Promise(resolve => {\r\n        let promise = null;\r\n        if(type === 'GET'){\r\n            promise = axios.get(url, {\r\n                params: data\r\n            });\r\n        } else {\r\n            promise = axios.post(url, data)\r\n        }\r\n        promise.then(response=>{\r\n            resolve(response.data)\r\n        }).catch((err)=>{\r\n            message.error(\"请求失败 \"+err.message)\r\n        })\r\n    })\r\n}","import $ from 'jquery';\r\n\r\nexport default function jsonp(url, data={}) {\r\n    return new Promise(resolve => {\r\n        data.key===\"LOABZ-ONL6F-CLXJZ-N4A2L-AB74O-ITFWZ\" ? data.output=\"jsonp\" : data.ouput=undefined;\r\n        $.ajax({\r\n            url: url,\r\n            type: \"post\",\r\n            dataType: 'jsonp',\r\n            data: data,\r\n            jsonp: 'callback',\r\n            success: ret => {\r\n                resolve(ret)\r\n            }\r\n        })\r\n    })\r\n}","/*该模块包含应用中所有接口请求函数\r\n*每个函数的返回值都是promise\r\n */\r\nimport ajax from './ajax';\r\nimport jsonp from './jsonp'\r\n\r\n\r\nconst WEATHER_URL=\"https://free-api.heweather.net/s6/weather/now\";\r\nconst WEATHER_KEY=\"0894aab8b0394389a7ac887e32db9c30\";\r\nconst LOCATION_URL=\"https://apis.map.qq.com/ws/location/v1/ip\";\r\nconst LOCATION_KEY=\"LOABZ-ONL6F-CLXJZ-N4A2L-AB74O-ITFWZ\";\r\n\r\n//basic requests;\r\nexport const reqLogin = (username,password) => ajax('/login',{username: username, password: password},'POST');\r\n\r\n//header;\r\nexport const reqWeather = (location, key=WEATHER_KEY) => ajax(WEATHER_URL,{location: location, key: key},'GET');\r\nexport const reqCity = (key=LOCATION_KEY) => jsonp(LOCATION_URL, {key});\r\n\r\n//category;\r\nexport const reqCategoryList = () => ajax('/category/list',null ,'GET');\r\nexport const updateCategoryList = (data) => ajax('/category/update', data, 'POST');\r\nexport const reqCategorySearch = (name) => ajax('/category/search', {name}, 'GET');\r\nexport const reqCategoryDelete = (id) => ajax('/category/delete', {id}, 'GET');\r\nexport const addCategoryList = (data) => ajax('/category/add', data, 'POST');\r\n\r\n//product\r\nexport const reqProductList = () => ajax('/product/list', null, 'GET');\r\nexport const reqProductDelete = (id) => ajax('/product/delete', {id}, 'POST');\r\nexport const updateProductList = (data) => ajax('/product/update', data, 'POST');\r\nexport const addProductList = (data) => ajax('/product/add', data, 'POST');\r\nexport const reqProductSearch = (data) => ajax('/product/search', data, 'POST');\r\n\r\n//file\r\nexport const reqImgDelete = (name) => ajax('/file/delete', {name}, 'GET');\r\n\r\n//stock\r\nexport const reqStockList = () => ajax('/stock/list', null, 'GET');\r\nexport const reqStockCategory = () => ajax('/stock/category', null, 'GET');\r\nexport const reqStockDelete = (id) => ajax('/stock/delete', {id}, 'GET');\r\nexport const reqStockSearch = (name) => ajax('/stock/search', {name}, 'GET');\r\nexport const addStockList = (data) => ajax('/stock/add', data, 'POST');\r\nexport const updateStockList = (data) => ajax('/stock/update', data, 'POST');\r\n\r\n//stocklog\r\nexport const reqStocklogList = (data) => ajax('/stock/stocklog-list', data, 'GET');\r\nexport const addStocklogList = (data) => ajax('/stock/stocklog-add', data, 'POST');\r\n\r\n//customer\r\nexport const reqCustomerList = () => ajax('/customer/list', null, 'GET');\r\nexport const reqCustomerSearch = (idOrName) => ajax('/customer/search', {idOrName}, 'GET');\r\nexport const reqCustomerDelete = (id) => ajax('/customer/delete', {id}, 'GET');\r\nexport const reqCustomerAdd = (data) => ajax('/customer/add', data, 'POST');\r\nexport const updateCustomerList = (data) => ajax('/customer/update', data, 'POST');\r\n\r\n//employee\r\nexport const reqEmployeeList = () => ajax('/employee/list', null, 'GET');\r\nexport const reqEmployeeDelete = (id) => ajax('/employee/delete', {id}, 'GET');\r\nexport const reqEmployeeSearch = (nameOrWorkid) => ajax('/employee/search', {nameOrWorkid}, 'GET');\r\nexport const addEmployeeList = (data) => ajax('/employee/add', data, 'POST');\r\nexport const updateEmployeeList = (data) => ajax('/employee/update', data, 'POST');\r\n\r\n//inventory\r\nexport const reqInventoryList = () => ajax('/inventory/list', null, 'GET');\r\nexport const reqInventoryAdd = (data) => ajax('/inventory/add', data, 'POST');\r\nexport const reqInventoryUpdate = (data) => ajax('/inventory/update', data, 'POST');\r\nexport const reqInventoryDelete = (id) => ajax('/inventory/delete', {id}, 'GET');\r\n\r\n\r\n//user\r\nexport const reqUserList = () => ajax('/user/list', null, 'GET');\r\nexport const reqUserDelete = (id) => ajax('/user/delete', {id}, 'GET');\r\nexport const reqUserAdd = (data) => ajax('/user/add', data, 'POST');\r\nexport const reqUserUpdate = (data) => ajax('/user/update', data, 'POST');\r\n\r\n//order\r\nexport const reqOrderList = () => ajax('/order/list', null, 'GET');\r\nexport const reqOrderSearch = (id) => ajax('/order/search', {id}, 'GET');\r\n\r\n//Role\r\nexport const reqRoleList = () => ajax('/role/list', null, 'GET');\r\nexport const reqRoleDelete = (id) => ajax('/role/delete', {id}, 'GET');\r\nexport const reqRoleAdd = (data) => ajax('/role/add', data, 'POST');\r\nexport const reqRoleUpdate = (data) => ajax('/role/update', data, 'POST');\r\n\r\n//Rule\r\nexport const reqRuleList = () => ajax('/rule/list', null, 'GET');\r\nexport const reqRuleUpdate = (data) => ajax('/rule/update', data, 'POST');\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default {\r\n    user : {},\r\n    others: {}\r\n}","let store=require('store');\r\nconst USER_KEY='user_key';\r\nexport default{\r\n    saveUser(user){\r\n        // localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n        store.set(USER_KEY,user)\r\n    },\r\n    getUser(){\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n        return store.get(USER_KEY) || {}\r\n    },\r\n    removeUser(USER_KEY){\r\n        // localStorage.removeItem(USER_KEY)R_KEY\r\n        store.remove(USER_KEY)\r\n    }\r\n}","import React from 'react';\r\nimport {Form,Input,Icon,Button,message} from 'antd';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './login.less';\r\nimport logo from '../../assets/images/logo.png';\r\nimport {reqLogin, reqRoleList} from '../../api';\r\nimport memoryUtils from '../../util/memoryUtils';\r\nimport storageUtils from '../../util/storageUtils';\r\n//登录的路由组件\r\nclass Login extends React.Component{\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err,values)=>{\r\n            if(!err){\r\n                const {username,password}=values;\r\n                const response1 = await reqLogin(username,password);\r\n                const response2 = await reqRoleList();\r\n                if(response1.status===0 && response2.status===0){\r\n                    message.success('登录成功');\r\n                    let data = response1.data;\r\n                    let permission = [];\r\n                    response2.data.forEach(item => {\r\n                        if(response1.data.role===item.id) permission = item.permission.split(\"-\")\r\n                    });\r\n                    data.permission = permission;\r\n                    memoryUtils.user = response1.data;\r\n                    storageUtils.saveUser(response1.data);\r\n                    this.props.history.replace('/')\r\n                }\r\n            }else{\r\n                console.log(\"校验失败\")\r\n            }\r\n        })\r\n    };\r\n    validatePwd=(rule,value,callback)=>{\r\n        if(!value){\r\n            callback(\"请输入密码\")\r\n        }else if(value.length<4){\r\n            callback(\"密码长度不能小于4位\")\r\n        }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n            callback(\"密码必须由字母、数字或字符串组成\")\r\n        }else if(value.length>12){\r\n            callback(\"密码长度不能大于12位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUser=(rule,value,callback)=>{\r\n        if(!value){\r\n            callback(\"请输入用户名\")\r\n        }else if(value.length<4){\r\n            callback(\"用户名长度不能小于4位\")\r\n        }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n            callback(\"用户名必须由字母、数字或字符串组成\")\r\n        }else if(value.length>12){\r\n            callback(\"用户名长度不能大于12位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    render(){\r\n        const user=memoryUtils.user;\r\n        if(JSON.stringify(user)!=='{}'){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        const form=this.props.form;\r\n        return (\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <h3>餐饮后台管理系统</h3>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <h2>用户登录</h2>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {\r\n                                form.getFieldDecorator('username',{\r\n                                    rules:[\r\n                                        {validator:this.validateUser}\r\n                                    ]\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"请输入用户名\"\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item>\r\n                            {\r\n                                form.getFieldDecorator('password',{\r\n                                    rules:[\r\n                                        {validator:this.validatePwd}\r\n                                    ]\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"请输入密码\"\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default Form.create()(Login);\r\n\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Popconfirm} from 'antd';\r\nimport './index.less';\r\nimport {reqWeather, reqCity} from '../../api/index';\r\nimport memoryUtil from '../../util/memoryUtils';\r\nimport storageUtil from '../../util/storageUtils';\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username: \"-\",\r\n            location: \"-\",\r\n            weather_txt: \"-\",\r\n            weather_code: \"100\",\r\n            date: \"-\",\r\n            loading:false\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response1=await reqCity();\r\n        response1.status===0 ? memoryUtil.others.location=response1.result.ad_info.district : console.log(\"请求位置信息失败  \"+response1.message);\r\n        const response2=await reqWeather(memoryUtil.others.location);\r\n        if(response2.HeWeather6[0].status===\"ok\"){\r\n            memoryUtil.others.weather_txt=response2.HeWeather6[0].now.cond_txt;\r\n            memoryUtil.others.weather_code=response2.HeWeather6[0].now.cond_code;\r\n        }else{\r\n            console.log(\"请求天气信息失败  \"+response2.HeWeather6[0].status)\r\n        }\r\n        this.intervalId=setInterval(() => {\r\n            let time=new Date();\r\n            let month=time.getMonth()+1;\r\n            this.setState({\r\n                username: memoryUtil.user.username,\r\n                location: memoryUtil.others.location,\r\n                weather_txt: memoryUtil.others.weather_txt,\r\n                weather_code: memoryUtil.others.weather_code,\r\n                date: time.getFullYear()+\"-\"+month+\"-\"+time.getDate()\r\n            })\r\n        }, 1000)\r\n    };\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId)\r\n    };\r\n    logout= () => {\r\n        this.setState({ loading: true });\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                memoryUtil.user={};\r\n                memoryUtil.others={};\r\n                storageUtil.removeUser();\r\n                this.props.history.replace('/login');\r\n                resolve()\r\n            }, 1000);\r\n        }).catch(() => console.log('登出失败'));\r\n    };\r\n    render(){\r\n        return (\r\n            <div className=\"header\">\r\n                <span>{this.state.date}</span>\r\n                <span>{this.state.location}</span>\r\n                <img src={\"https://cdn.heweather.com/cond_icon/\"+this.state.weather_code+\".png\"} alt=\"weather\" />\r\n                <span style={{marginRight: \"100px\"}}>{this.state.weather_txt}</span>\r\n                <span style={{marginRight: \"20px\"}}>欢迎! {this.state.username}</span>\r\n                <Popconfirm\r\n                    placement=\"bottomRight\"\r\n                    title=\"确定要退出系统吗？\"\r\n                    okType=\"danger\"\r\n                    onConfirm={this.logout}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <Button style={{marginRight: \"50px\"}} type=\"primary\" loading={this.state.loading}>退出</Button>\r\n                </Popconfirm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  withRouter(Header);","import React from 'react';\r\nimport './index.less';\r\nimport Logo from '../../assets/images/logo.png';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport {Menu,Icon} from 'antd';\r\n// import menuList from '../../config/menuConfig';\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst {SubMenu}=Menu;\r\n\r\nclass LeftNav extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            menu: [],\r\n            openKeys: [this.props.location.pathname]\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = () => {\r\n    \r\n        let menu = [\r\n            {\r\n                key: \"/home\",\r\n                title: \"首页\",\r\n                icon: \"home\",\r\n                display: 1\r\n            },\r\n            {\r\n                key: \"/order\",\r\n                title: \"订单管理\",\r\n                icon: \"account-book\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/order\",\r\n                        title: \"全部订单\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/order-stage\",\r\n                        title: \"前台管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/product\",\r\n                title: \"商品管理\",\r\n                icon: \"shopping\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/category\",\r\n                        title: \"商品分类\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/product\",\r\n                        title: \"商品列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/product-add\",\r\n                        title: \"添加商品\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/stock\",\r\n                title: \"库存管理\",\r\n                icon: \"appstore\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/stock\",\r\n                        title: \"库存信息\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/inventory\",\r\n                        title: \"库存盘点\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/customer\",\r\n                title: \"会员管理\",\r\n                icon: \"crown\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/customer\",\r\n                        title: \"会员列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/customer-add\",\r\n                        title: \"新增会员\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/employee\",\r\n                title: \"人事管理\",\r\n                icon: \"team\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/employee\",\r\n                        title: \"员工列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/user\",\r\n                        title: \"用户列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        key: \"/role\",\r\n                        title: \"角色管理\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                key: \"/finance\",\r\n                title: \"财务管理\",\r\n                icon: \"area-chart\",\r\n                display: 0,\r\n                children: [\r\n                    {\r\n                        key: \"/finance\",\r\n                        title: \"财务报表\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        memoryUtils.user.permission.forEach(item => {\r\n            switch (item) {\r\n                case '全部订单':\r\n                    menu[1].display = 1;\r\n                    menu[1].children[0].display = 1;\r\n                    break;\r\n                case '前台管理':\r\n                    menu[1].display = 1;\r\n                    menu[1].children[1].display = 1;\r\n                    break;\r\n                case '商品分类':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[0].display = 1;\r\n                    break;\r\n                case '商品列表':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[1].display = 1;\r\n                    break;\r\n                case '添加商品':\r\n                    menu[2].display = 1;\r\n                    menu[2].children[2].display = 1;\r\n                    break;\r\n                case '库存信息':\r\n                    menu[3].display = 1;\r\n                    menu[3].children[0].display = 1;\r\n                    break;\r\n                case '库存盘点':\r\n                    menu[3].display = 1;\r\n                    menu[3].children[1].display = 1;\r\n                    break;\r\n                case '会员列表':\r\n                    menu[4].display = 1;\r\n                    menu[4].children[0].display = 1;\r\n                    break;\r\n                case '新增会员':\r\n                    menu[4].display = 1;\r\n                    menu[4].children[1].display = 1;\r\n                    break;\r\n                case '员工列表':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[0].display = 1;\r\n                    break;\r\n                case '用户列表':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[1].display = 1;\r\n                    break;\r\n                case '角色管理':\r\n                    menu[5].display = 1;\r\n                    menu[5].children[2].display = 1;\r\n                    break;\r\n                case '财务报表':\r\n                    menu[6].display = 1;\r\n                    menu[6].children[0].display = 1;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        this.setState({menu: menu})\r\n    };\r\n    rootSubmenuKeys = ['/order', '/product','/category','/stock', '/customer','/employee','/finance'];\r\n    onOpenChange = openKeys => {\r\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\r\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            this.setState({ openKeys });\r\n        } else {\r\n            this.setState({\r\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\r\n            });\r\n        }\r\n    };\r\n    closeSubmenuAll = () =>{\r\n        this.setState({openKeys:[]});\r\n    };\r\n    render(){\r\n        const path=this.props.location.pathname;\r\n        return (\r\n            <div className=\"left-nav\">\r\n                <Link to=\"/\">\r\n                    <div className=\"left-nav-header\">\r\n                        <img src={Logo} alt=\"logo\"/>\r\n                        <h1>餐厅后台</h1>\r\n                    </div>\r\n                </Link>\r\n                <Menu\r\n                    selectedKeys={[path]}\r\n                    mode=\"inline\"\r\n                    openKeys={this.state.openKeys}\r\n                    onOpenChange={this.onOpenChange}\r\n                    // style={{backgroundColor:\"#0354d9\"}}\r\n                    theme=\"dark\"\r\n                >\r\n                    {\r\n                        this.state.menu.map((item) => {\r\n                            if(!item.children){\r\n                                return (\r\n                                    <Menu.Item key={item.key} style={{display: item.display===0 ? \"none\" : \"block\"}}>\r\n                                        <Link to={item.key}><Icon type={item.icon}/>{item.title}</Link>\r\n                                    </Menu.Item>\r\n                                )\r\n                            }else{\r\n                                return  (\r\n                                    <SubMenu\r\n                                        key={item.key}\r\n                                        title={(<span><Icon type={item.icon}/>{item.title}</span>)}\r\n                                        style={{display: item.display===0 ? \"none\" : \"block\"}}\r\n                                    >\r\n                                        {\r\n                                            item.children.map(item => {\r\n                                                return (\r\n                                                    <Menu.Item key={item.key} style={{display: item.display===0 ? \"none\" : \"block\"}}>\r\n                                                        <Link to={item.key}>{item.title}</Link>\r\n                                                    </Menu.Item>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </SubMenu>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(LeftNav);","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './index.less';\r\n\r\nclass TopNav extends React.Component{\r\n    // handleNavClick = (item) => {\r\n    //     let nav = \"\";\r\n    //     switch(item){\r\n    //         case \"首页\": nav=\"/home\";break;\r\n    //         // 订单管理\r\n    //         case \"全部订单\": nav=\"/order\";break;\r\n    //         case \"订单详情\": nav=\"/order-view\";break;\r\n    //         case \"前台管理\": nav=\"/order-stage\";break;\r\n    //         // 商品管理\r\n    //         case \"商品分类\": nav=\"/category\";break;\r\n    //         case \"新增品类\": nav=\"/category-add\";break;\r\n    //         case \"编辑品类\": nav=\"/category-edit\";break;\r\n    //         case \"品类详情\": nav=\"/category-view\";break;\r\n    //         case \"商品列表\": nav=\"/product\";break;\r\n    //         case \"添加商品\": nav=\"/product-add\";break;\r\n    //         case \"编辑商品\": nav=\"/product-edit\";break;\r\n    //         case \"商品详情\": nav=\"/product-view\";break;\r\n    //         // 库存管理\r\n    //         case \"库存信息\": nav=\"/stock\";break;\r\n    //         case \"新增库存\": nav=\"/stock-add\";break;\r\n    //         case \"编辑库存\": nav=\"/stock-add\";break;\r\n    //         case \"货物详情\": nav=\"/stock-view\";break;\r\n    //         case \"库存日志\": nav=\"/stock-log\";break;\r\n    //         case \"库存盘点\": nav=\"/inventory\";break;\r\n    //         case \"新建盘点单\": nav=\"/inventory-add\";break;\r\n    //         case \"盘点详情\": nav=\"/inventory-view\";break;\r\n    //         //会员管理\r\n    //         case \"会员列表\": nav=\"/customer\";break;\r\n    //         case \"编辑会员\": nav=\"/customer-edit\";break;\r\n    //         case \"新增会员\": nav=\"/customer-add\";break;\r\n    //         case \"会员详情\": nav=\"/customer-view\";break;\r\n    //         //人事管理\r\n    //         case \"员工列表\": nav=\"/employee\";break;\r\n    //         case \"新增员工\": nav=\"/employee-add\";break;\r\n    //         case \"编辑员工\": nav=\"/employee-edit\";break;\r\n    //         case \"员工详情\": nav=\"/employee-view\";break;\r\n    //         case \"用户列表\": nav=\"/user\";break;\r\n    //         case \"创建用户\": nav=\"/user-add\";break;\r\n    //         case \"角色管理\": nav=\"/role\";break;\r\n    //         case \"新增角色\": nav=\"/role-add\";break;\r\n    //         case \"编辑角色\": nav=\"/role-edit\";break;\r\n    //         //财务管理（待完善）\r\n    //         default : nav=\"home\";break;\r\n    //     }\r\n    //     this.props.history.replace(nav)\r\n    // };\r\n    render(){\r\n        return (\r\n            <div className=\"top-nav-container\">\r\n                {\r\n                    this.props.nav.map((item,index) => {\r\n                        // return index===0 ? (\r\n                        //     <span key={index}>\r\n                        //         <span style={{fontWeight: \"bold\", cursor: \"pointer\"}}>{item}</span>\r\n                        //         <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                        //     </span>\r\n                        // ) : index+1===this.props.nav.length ? (\r\n                        //     <span key={index}\r\n                        //           style={{cursor: \"pointer\", color: \"#98a9c4\"}}\r\n                        //           onClick={()=>this.handleNavClick(item)}\r\n                        //     >{item}</span>\r\n                        // ) : (\r\n                        //     <span key={index}>\r\n                        //         <span key={index}\r\n                        //               style={{fontWeight: \"bold\", cursor: \"pointer\"}}\r\n                        //               onClick={()=>this.handleNavClick(item)}>{item}</span>\r\n                        //         <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                        //     </span>\r\n                        // )\r\n                        return index===0 ? (\r\n                            <span key={index}>\r\n                                <span style={{fontWeight: \"bold\", cursor: \"default\"}}>{item}</span>\r\n                                <span style={{\r\n                                    margin: \"0 10px\",\r\n                                    color: \"#98a9c4\",\r\n                                    display: item===\"首页\" ? \"none\" : \"inline-block\"\r\n                                }}>/</span>\r\n                            </span>\r\n                        ) : index+1===this.props.nav.length ? (\r\n                            <span key={index} style={{color: \"#98a9c4\",  cursor: \"default\"}}>{item}</span>\r\n                        ) : (\r\n                            <span key={index}>\r\n                                <span key={index} style={{fontWeight: \"bold\",  cursor: \"default\"}}>{item}</span>\r\n                                <span style={{margin: \"0 10px\", color: \"#98a9c4\"}}>/</span>\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TopNav);","import React from 'react';\r\nimport './home.less';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass Home extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <TopNav nav={['首页']} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './index.less';\r\nimport {Spin} from 'antd';\r\n\r\nclass Loading extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <Spin size=\"large\" />\r\n                <span>Loading. . .</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport {Table, Divider, Switch, message, Input, Button, Modal} from 'antd';\r\nimport Loading from '../../components/loading';\r\nimport TopNav from '../../components/top-nav'\r\nimport {reqCategoryList, updateCategoryList, reqCategorySearch, reqCategoryDelete} from '../../api';\r\n\r\nclass Category extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqCategoryList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = (response) => {\r\n        this.setState({isLoading: true});\r\n        this.timerID = setTimeout(() => {\r\n            if(response.status===0){\r\n                let data = response.data.map((item, index) => {\r\n                    item.index = index;\r\n                    return item\r\n                });\r\n                this.setState({isLoading: false, data: data})\r\n            }else if(response.status===1){\r\n                message.error(response.msg);\r\n                this.setState({isLoading: false, data: null})\r\n            }\r\n        }, 300)\r\n    };\r\n    handleIsnavChange = async (record) =>{\r\n        const response = await updateCategoryList({id: record.id, isnav: 1-record.isnav});\r\n        let data = this.state.data;\r\n        if(response.status === 0){\r\n            data.forEach(item => item.isnav = item.id===record.id ? 1-item.isnav : item.isnav);\r\n            this.setState({\r\n                data: data\r\n            });\r\n        }else if(response.status === 1){\r\n            this.setState({\r\n                data: data\r\n            });\r\n            message.error(response.msg)\r\n        }\r\n    };\r\n    handleSearch = async (value) => {\r\n        const response = value===\"\" ? await reqCategoryList() : await reqCategorySearch(value);\r\n        this.refreshTable(response);\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除品类\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqCategoryDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleAdd = () => {this.props.history.push('/category-add')};\r\n    handleEdit = (record) => {\r\n        this.props.history.push({\r\n            pathname: '/category-edit',\r\n            state: {data: record}\r\n        })\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/category-view', state: {data: record}})\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '品类名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '级别',\r\n                dataIndex: 'level',\r\n                key: 'level',\r\n                render: text => {\r\n                    let level=\"\";\r\n                    switch(text){\r\n                        case 0 : level=\"一级\";break;\r\n                        case 1 : level=\"二级\";break;\r\n                        case 2 : level=\"三级\";break;\r\n                        case 3 : level=\"四级\";break;\r\n                        case 4 : level=\"五级\";break;\r\n                        case 5 : level=\"六级\";break;\r\n                        case 6 : level=\"七级\";break;\r\n                        case 7 : level=\"八级\";break;\r\n                        case 8 : level=\"九级\";break;\r\n                        default: level=\"十级\"\r\n                    }\r\n                    // return <Button type=\"link\" onClick={this.testfunc}>{level}</Button>\r\n                    return <span>{level}</span>;\r\n                },\r\n                sorter: (a, b) => a.level-b.level\r\n            },\r\n            {\r\n                title: '子项数量',\r\n                dataIndex: 'son',\r\n                key: 'son',\r\n                sorter: (a, b) => a.son-b.son\r\n            },\r\n            {\r\n                title: '商品总数(/件)',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                sorter: (a, b) => a.amount-b.amount\r\n            },\r\n            {\r\n                title: '是否显示',\r\n                dataIndex: 'isnav',\r\n                key: 'isnav',\r\n                render: (text, record) => <Switch\r\n                    size=\"small\"\r\n                    onClick={()=>this.handleIsnavChange(record)}\r\n                    defaultChecked={text === 1}/>,\r\n                filters: [{text: '已显示', value: 1}, {text: '未显示', value: 0}],\r\n                onFilter: (value, record) => value===record.isnav\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['商品管理', '商品分类']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}>新增品类</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询品类信息\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Switch, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { addCategoryList } from \"../../api\";\r\n\r\nconst AddCategory = Form.create({ name: 'category-add' })(\r\n    class extends React.Component {\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.level = Number(data.level);\r\n                    data.isnav = data.isnav ? 1 : 0;\r\n                    const response = await addCategoryList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增成功,即将返回品类列表\", 2);\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/category')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['商品管理', '商品分类', '新增品类']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增商品品类</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/category')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"名称：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"级别：\">\r\n                                {form.getFieldDecorator('level', {\r\n                                    rules: [{required: true}]\r\n                                })(\r\n                                    <Select>\r\n                                        <Select.Option key={0}>第一级</Select.Option>\r\n                                        <Select.Option key={1}>第二级</Select.Option>\r\n                                        <Select.Option key={2}>第三级</Select.Option>\r\n                                        <Select.Option key={3}>第四级</Select.Option>\r\n                                        <Select.Option key={4}>第五级</Select.Option>\r\n                                        <Select.Option key={5}>第六级</Select.Option>\r\n                                        <Select.Option key={6}>第七级</Select.Option>\r\n                                        <Select.Option key={7}>第八级</Select.Option>\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"是否显示\">\r\n                                {form.getFieldDecorator('isnav', {\r\n                                    rules: [{required: true}],\r\n                                    valuePropName: \"checked\",\r\n                                    initialValue: false\r\n                                })(<Switch />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddCategory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select, Switch} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { updateCategoryList } from \"../../api\";\r\n\r\nconst EditCategory = Form.create({ name: 'category-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = () => {\r\n            this.setState({\r\n                data: this.props.location.state.data\r\n            })\r\n        };\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data = this.props.location.state.data;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    data.isnav = data.isnav ? 1 : 0;\r\n                    data.level = Number(data.level);\r\n                    delete data.index;\r\n                    const response = await updateCategoryList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"更新成功,即将返回品类列表\", 2);\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/category')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        getLevel = (level) => {\r\n            let temp = \"\";\r\n            switch(level){\r\n                case 0 : temp=\"一级\";break;\r\n                case 1 : temp=\"二级\";break;\r\n                case 2 : temp=\"三级\";break;\r\n                case 3 : temp=\"四级\";break;\r\n                case 4 : temp=\"五级\";break;\r\n                case 5 : temp=\"六级\";break;\r\n                case 6 : temp=\"七级\";break;\r\n                case 7 : temp=\"八级\";break;\r\n                default: temp=\"八级\"\r\n            }\r\n            return temp\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['商品管理', '商品分类', '编辑品类']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑商品品类</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/category')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"名称：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                    initialValue: this.state.data.name\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"级别：\">\r\n                                {form.getFieldDecorator('level', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.level\r\n                                })(\r\n                                    <Select>\r\n                                        <Select.Option key={0}>一级</Select.Option>\r\n                                        <Select.Option key={1}>二级</Select.Option>\r\n                                        <Select.Option key={2}>三级</Select.Option>\r\n                                        <Select.Option key={3}>四级</Select.Option>\r\n                                        <Select.Option key={4}>五级</Select.Option>\r\n                                        <Select.Option key={5}>六级</Select.Option>\r\n                                        <Select.Option key={6}>七级</Select.Option>\r\n                                        <Select.Option key={7}>八级</Select.Option>\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"是否显示\">\r\n                                {form.getFieldDecorator('isnav', {\r\n                                    rules: [{required: true}],\r\n                                    valuePropName: \"checked\",\r\n                                    initialValue: this.state.data.isnav===1\r\n                                })(<Switch />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: this.state.data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditCategory;\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, Form} from \"antd\";\r\n\r\nclass ViewCategory extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '商品分类', '品类详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看品类详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/category')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"名称\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"级别\">\r\n                            <span className=\"ant-form-text\">{this.state.data.level}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"是否显示\">\r\n                            <span className=\"ant-form-text\">{this.state.data.isnav}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"子项数量\">\r\n                            <span className=\"ant-form-text\">{this.state.data.son}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品总数\">\r\n                            <span className=\"ant-form-text\">{this.state.data.amount}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCategory;\r\n\r\n\r\n","import React from 'react';\r\nimport {Button, Select, Form, Input} from 'antd'\r\n\r\nconst ProductSearch = Form.create({name: 'product-operate-form'})(\r\n    class extends React.Component{\r\n        render(){\r\n            return (\r\n                <Form layout=\"inline\" onSubmit={this.props.onSubmit}>\r\n                    <Form.Item>\r\n                        { this.props.form.getFieldDecorator('status', {\r\n                            initialValue: []\r\n                        })(<Select style={{width: \"110px\", textAlign: \"left\"}} placeholder=\"选择状态\">\r\n                            <Select.Option value=\"\">全部</Select.Option>\r\n                            <Select.Option value=\"onsale-1\">已上架</Select.Option>\r\n                            <Select.Option value=\"onsale-0\">未上架</Select.Option>\r\n                            <Select.Option value=\"isnew-1\">新品</Select.Option>\r\n                            <Select.Option value=\"isnew-0\">非新品</Select.Option>\r\n                            <Select.Option value=\"recommend-1\">已推荐</Select.Option>\r\n                            <Select.Option value=\"recommend-0\">未推荐</Select.Option>\r\n                        </Select>)}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        { this.props.form.getFieldDecorator('nameOrNumber', {\r\n                            initialValue: \"\"\r\n                        })(<Input placeholder=\"输入名称/货号\"\r\n                                  style={{width: \"120px\", textAlign: \"left\"}} />)}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button.Group>\r\n                            <Button type=\"primary\" htmlType=\"submit\">筛选搜索</Button>\r\n                        </Button.Group>\r\n                    </Form.Item>\r\n                </Form>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default ProductSearch","import React from 'react';\r\nimport './product.less';\r\nimport {Button, Divider, Switch, Table, Icon, Modal, Row, Col, Cascader} from 'antd';\r\nimport {reqCategoryList, reqProductList, reqProductDelete, updateProductList, reqProductSearch} from '../../api';\r\nimport ProductSearch from \"./product-search\";\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass Product extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isLoading: true,\r\n            data: [],\r\n            options1: [],\r\n            options2: [],\r\n            selectedRowKeys: [],\r\n            operation: \"\",\r\n            selectedCategory: [],\r\n            categoryFilters: []\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqProductList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID);\r\n    };\r\n    formRef = {};\r\n    rowSelection = {\r\n        onChange: (selectedRowKeys) => {\r\n            this.setState({selectedRowKeys: selectedRowKeys})\r\n        }\r\n    };\r\n    refreshTable = async (response1) => {\r\n        const response2 = await reqCategoryList();\r\n        if(response1.status===0 && response2.status===0){\r\n            let data = response1.data;\r\n            let options1 = [\r\n                {\r\n                    value: 'onsale-1',\r\n                    label: '商品上架',\r\n                },\r\n                {\r\n                    value: 'onsale-0',\r\n                    label: '商品下架',\r\n                },\r\n                {\r\n                    value: 'recommend-1',\r\n                    label: '设为推荐',\r\n                },\r\n                {\r\n                    value: 'recommend-0',\r\n                    label: '取消推荐',\r\n                },\r\n                {\r\n                    value: 'isnew-1',\r\n                    label: '设为新品',\r\n                },\r\n                {\r\n                    value: 'isnew-0',\r\n                    label: '取消新品',\r\n                },\r\n                {\r\n                    value: 'delete',\r\n                    label: '删除商品',\r\n                }\r\n            ];\r\n            let options2 = [];\r\n            let categoryFilters = [];\r\n            response2.data.forEach(item1 => {\r\n                options2.push({label: item1.name, value: item1.id});\r\n                data.map(item2 => {\r\n                    categoryFilters.indexOf(item1.name)===-1 ? categoryFilters.push(item1.name) : categoryFilters.push();\r\n                    if(item2.category === item1.id){\r\n                        item2.category_name = item1.name\r\n                    }\r\n                    return item2;\r\n                })\r\n            });\r\n            categoryFilters = categoryFilters.map(item => {\r\n                return {text: item, value: item}\r\n            });\r\n            options1.push({\r\n                label: '移至',\r\n                value: 'move',\r\n                children: options2\r\n            });\r\n            this.setState({\r\n                isLoading: true,\r\n                options1: options1,\r\n                options2: options2,\r\n                categoryFilters: categoryFilters\r\n            });\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data\r\n                })\r\n            }, 300);\r\n        }\r\n    };\r\n    handleStateChange = async (record, string) =>{\r\n        let obj={id: record.id};\r\n        obj[string]=1-record[string];\r\n        const response = await updateProductList(obj);\r\n        let data = this.state.data;\r\n        if(response.status === 0){\r\n            data.forEach(item => item[string] = item.id===record.id ? 1-item[string] : item[string]);\r\n            this.setState({\r\n                data: data\r\n            });\r\n        }\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/product-add')\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/product-view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/product-edit', state: {data: record}})\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除商品\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                let data = [];\r\n                data.push(record.id);\r\n                const response = await reqProductDelete(data);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleSearchSubmit = e => {\r\n        e.preventDefault();\r\n        this.formRef.props.form.validateFields(async (err, values) => {\r\n            if(!err){\r\n                let data = {};\r\n                if(values.nameOrNumber===\"\" && values.status.length===0){\r\n                    const response = await reqProductList();\r\n                    this.refreshTable(response)\r\n                }else{\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key) && values[key].length !== 0){\r\n                            if(key === \"status\"){\r\n                                let arr = values.status.split('-');\r\n                                data[arr[0]] = Number(arr[1])\r\n                            }else{\r\n                                data[key] = typeof(values[key])===\"object\" ? values[key][0] : values[key]\r\n                            }\r\n                        }\r\n                    }\r\n                    const response = await reqProductSearch(data);\r\n                    this.refreshTable(response)\r\n                }\r\n            }\r\n        })\r\n    };\r\n    handleCascaderChange = (value) => {\r\n        this.setState({operation: value})\r\n    };\r\n    handleOperate = async () => {\r\n        let operation = this.state.operation;\r\n        if(operation.length === 0){\r\n            this.setState({selectedRowKeys: []});\r\n            this.refreshTable(this.state.data)\r\n        }else if(operation.length === 1){\r\n            if(operation[0] === 'delete'){\r\n                const response1 = reqProductDelete(this.state.selectedRowKeys);\r\n                if(response1.status === 0){\r\n                    const response2 = await reqProductList();\r\n                    if(response2.status === 0){\r\n                        let data = response2.data;\r\n                        data.forEach(item1 => {\r\n                            this.state.options2.forEach(item2 => {\r\n                                if(item1.category === item2.value){\r\n                                    item1.category_name = item2.label\r\n                                }\r\n                            })\r\n                        });\r\n                        this.timerID = setTimeout(() => {\r\n                            this.formRef1.props.form.resetFields();\r\n                            this.refreshTable(data)\r\n                        }, 500)\r\n                    }\r\n                }\r\n            }else if(operation[0] === 'move'){\r\n                this.formRef1.props.form.resetFields();\r\n                this.refreshTable(this.state.data)\r\n            }else{\r\n                let data = {};\r\n                let arr = operation[0].split('-');\r\n                data.id = this.state.selectedRowKeys;\r\n                data[arr[0]] = Number(arr[1]);\r\n                const response1 = await updateProductList(data);\r\n                if(response1.status === 0){\r\n                    const response2 = await reqProductList();\r\n                    if(response2.status === 0){\r\n                        let data = response2.data;\r\n                        data.forEach(item1 => {\r\n                            this.state.options2.forEach(item2 => {\r\n                                if(item1.category === item2.value){\r\n                                    item1.category_name = item2.label\r\n                                }\r\n                            })\r\n                        });\r\n                        this.timerID = setTimeout(() => {\r\n                            this.refreshTable(data)\r\n                        }, 500)\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            let data = {};\r\n            data.id = this.state.selectedRowKeys;\r\n            data.category = operation[1];\r\n            console.log(data);\r\n            const response1 = await updateProductList(data);\r\n            if(response1.status === 0){\r\n                const response2 = await reqProductList();\r\n                if(response2.status === 0){\r\n                    let data = response2.data;\r\n                    data.forEach(item1 => {\r\n                        this.state.options2.forEach(item2 => {\r\n                            if(item1.category === item2.value){\r\n                                item1.category_name = item2.label\r\n                            }\r\n                        })\r\n                    });\r\n                    this.timerID = setTimeout(() => {\r\n                        this.refreshTable(data)\r\n                    }, 500)\r\n                }\r\n            }\r\n        }\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '货号',\r\n                key: 'number',\r\n                dataIndex: 'number'\r\n            },\r\n            {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n                )\r\n            },\r\n            {\r\n                title: '分类',\r\n                key: 'category_name',\r\n                dataIndex: 'category_name',\r\n                filters: this.state.categoryFilters,\r\n                onFilter: (value, record) => value===record.category_name\r\n            },\r\n            {\r\n                title: '售价',\r\n                key: 'price',\r\n                dataIndex: 'price',\r\n                render: (text) => <span>￥{text}</span>,\r\n                sorter: (a, b) => a.price - b.price\r\n            },\r\n            {\r\n                title: '销量/周',\r\n                key: 'sales',\r\n                dataIndex: 'sales',\r\n                render: (text, record) => <span>{text+record.unit}</span>,\r\n                sorter: (a, b) => a.sales - b.sales\r\n            },\r\n            {\r\n                title: '评价',\r\n                key: 'stars',\r\n                dataIndex: 'stars',\r\n                render: (text) => {\r\n                    let starArr=[];\r\n                    for(let i=0;i<text;i++){\r\n                        starArr.push(i)\r\n                    }\r\n                    return starArr.map((item) => {\r\n                        return <Icon key={item} type=\"star\" style={{color: \"yellow\"}} theme=\"filled\" />\r\n                    });\r\n                },\r\n                sorter: (a, b) => a.stars - b.stars,\r\n                filters: [\r\n                    {text: \"一星\", value: 1},\r\n                    {text: \"二星\", value: 2},\r\n                    {text: \"三星\", value: 3},\r\n                    {text: \"四星\", value: 4},\r\n                    {text: \"五星\", value: 5},\r\n                ],\r\n                onFilter: (value, record) => value===record.stars\r\n            },\r\n            {\r\n                title: '状态',\r\n                key: 'status',\r\n                render: (record) => (\r\n                    <span>\r\n                    <span>上架：</span>\r\n                    <Switch size=\"small\"\r\n                            defaultChecked={record.onsale === 1}\r\n                            onClick={()=>this.handleStateChange(record, \"onsale\")}\r\n                    /><br/>\r\n                    <span>新品：</span>\r\n                    <Switch size=\"small\"\r\n                            style={{marginTop: \"5px\"}}\r\n                            defaultChecked={record.isnew === 1}\r\n                            onClick={()=>this.handleStateChange(record, \"isnew\")}\r\n                    /><br/>\r\n                    <span>推荐：</span>\r\n                    <Switch size=\"small\"\r\n                            style={{marginTop: \"5px\"}}\r\n                            defaultChecked={record.recommend === 1}\r\n                            onClick={()=>this.handleStateChange(record, \"recommend\")}\r\n                    />\r\n                </span>\r\n            \r\n                )\r\n            },\r\n            // {\r\n            //     title: '上架',\r\n            //     key: 'onsale',\r\n            //     dataIndex: 'onsale',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"onsale\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            // {\r\n            //     title: '新品',\r\n            //     key: 'isnew',\r\n            //     dataIndex: 'isnew',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"isnew\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            // {\r\n            //     title: '推荐',\r\n            //     key: 'recommend',\r\n            //     dataIndex: 'recommend',\r\n            //     render: (text, record) => (\r\n            //         <Switch size=\"small\"\r\n            //                 defaultChecked={text=== 1}\r\n            //                 onClick={()=>this.handleStateChange(record, \"recommend\")}\r\n            //         />\r\n            //     )\r\n            // },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                        <Button size=\"small\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\" />\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"product-container\">\r\n                <TopNav nav={['商品管理', '商品列表']}/>\r\n                <div className=\"product-header\">\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <Button type=\"primary\" onClick={()=>this.handleAdd()}>新增商品</Button>\r\n                            \r\n                        </Col>\r\n                        <Col span={6} style={{marginTop: \"-1px\"}}>\r\n                            <Cascader style={{width: \"120px\", marginRight: \"15px\"}}\r\n                                      placeholder=\"批量操作\"\r\n                                      options={this.state.options1}\r\n                                      onChange={this.handleCascaderChange}/>\r\n                            <Button type=\"primary\" onClick={this.handleOperate}>确认</Button>\r\n                        </Col>\r\n                        <Col span={10} style={{textAlign:\"right\", marginTop: \"-4px\"}}>\r\n                            <ProductSearch\r\n                                wrappedComponentRef={(formRef) => this.formRef = formRef}\r\n                                options2={this.state.options2}\r\n                                onSubmit={this.handleSearchSubmit}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            rowSelection={this.rowSelection}\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Product;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Upload, Icon, Modal } from 'antd';\r\nimport { reqImgDelete } from '../../api/index';\r\n\r\nclass PicturesWall extends React.Component {\r\n    state = {\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        fileList: [],\r\n    };\r\n    UNSAFE_componentWillMount = () => {\r\n        if(this.props.hasOwnProperty(\"imgs\")){\r\n            let urlArr = this.props.imgs.split(',');\r\n            let fileList = [];\r\n            urlArr.forEach((item, index) => {\r\n                fileList.push({\r\n                    uid: -1-index,\r\n                    name: item.split('/upload')[1],\r\n                    status: 'done',\r\n                    url: item\r\n                })\r\n            });\r\n            this.setState({fileList: fileList})\r\n        }\r\n    };\r\n    getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await this.getBase64(file.originFileObj);\r\n        }\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n        });\r\n    };\r\n    handleChange = async ({ file, fileList }) => {\r\n        if(file.status === 'done'){\r\n            let response = file.response;\r\n            file = fileList[fileList.length-1];\r\n            file.name = response.data.name;\r\n            file.url = response.data.url;\r\n        } else if(file.status === 'removed'){\r\n            let response = await reqImgDelete(file.name);\r\n            if(response.status === 0){\r\n                let fileIndex = 0;\r\n                fileList.forEach((item, index) => {\r\n                    if(item.name === file.name){\r\n                        fileIndex = index\r\n                    }\r\n                });\r\n                fileList.splice(fileIndex, 1);\r\n            }\r\n        }\r\n        let urls = fileList.map(item => {\r\n           return item.url;\r\n        });\r\n        this.props.onChange(urls.join(','));\r\n        this.setState({ fileList })\r\n    };\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"clearfix\">\r\n                <Upload\r\n                    action=\"/file/upload\"\r\n                    accept=\"image/*\"\r\n                    name=\"image\"\r\n                    listType=\"picture-card\"\r\n                    fileList={this.state.fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {this.state.fileList.length >= 6 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal visible={this.state.previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={this.state.previewImage} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PicturesWall;","import React from 'react';\r\nimport { Form, Select, InputNumber, Button, Checkbox, Row, Col, Card, Input, message } from 'antd';\r\nimport TopNav from '../../components/top-nav';\r\nimport PictureWall from '../../components/picture-wall/picture-wall';\r\nimport { addProductList, reqCategoryList } from '../../api';\r\n\r\n\r\nclass AddProduct extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            category_options: [],\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqCategoryList();\r\n        if(response.status === 0){\r\n            let options = [];\r\n            response.data.forEach((item) => {\r\n                options.push({key: item.name, value: item.id})\r\n            });\r\n            this.setState({category_options: options})\r\n        }\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    validateNumber = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品货号\")\r\n        }else if(value.length<5 || value.length>10){\r\n            callback(\"请输入少于5个，且不多于10个字符\")\r\n        }else if((/^[0-9a-zA-Z]*$/g).test(value)){\r\n            callback(\"请输入字母、数字或其组合\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateName = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入名称\")\r\n        }else if(value.length<2 || value.length>10){\r\n            callback(\"请输入不少于2个，且不超过10个字符\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validatePrice = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品价格\")\r\n        }else if(value<0){\r\n            callback(\"请按正确格式输入商品价格\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUnit = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品单位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateNoteProduct = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入产品备注\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntegral = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品积分值\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceTitle = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页标题\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceContent =(rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页内容\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                values.category = Number(values.category);\r\n                values.price = Number(values.price);\r\n                values.integral = Number(values.integral);\r\n                values.onsale = values.state.indexOf('onsale')===-1 ? 0 : 1;\r\n                values.isnew = values.state.indexOf('isnew')===-1 ? 0 : 1;\r\n                values.recommend = values.state.indexOf('recommend')===-1 ? 0 : 1;\r\n                delete values.state;\r\n                const response = await addProductList(values);\r\n                if(response.status === 0){\r\n                    message.success(response.msg+\",即将返回商品列表\", 2);\r\n                    this.timerID = setTimeout(()=>{\r\n                        this.props.history.replace('/product')\r\n                    }, 2000);\r\n                }\r\n            }else{\r\n                console.log(err)\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        const {form} = this.props;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '添加商品']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product')}}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            { form.getFieldDecorator('number', {\r\n                                rules: [{required: true, message: \"请输入商品货号\", validate: this.validateNumber}]\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            { form.getFieldDecorator('name', {\r\n                                rules: [{required: true, message: \"请输入商品名称\", validate: this.validateName}]\r\n                            })(<Input placeholder=\"请输入商品名称\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            { form.getFieldDecorator('category', {\r\n                                rules: [{ required: true, message: '请选择所属分类' }],\r\n                            })(\r\n                                <Select onChange={this.handleChange} placeholder=\"请选择所属分类\">\r\n                                    { this.state.category_options.map((item) => {\r\n                                        return <Select.Option key={item.value}>{item.key}</Select.Option>\r\n                                    })}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\" hasFeedback>\r\n                            { form.getFieldDecorator('price', {\r\n                                rules: [{required: true, message: \"请输入商品售价\",validate: this.validatePrice}]\r\n                            })(<Input addonAfter=\"元 &nbsp;&nbsp;&nbsp;\" placeholder=\"请输入商品售价\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            { form.getFieldDecorator('unit', {\r\n                                rules: [{required: true, message: \"请输入商品计量单位\", validate: this.validateUnit}]\r\n                            })(<Input placeholder=\"请输入商品计量单位\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品状态\">\r\n                            {form.getFieldDecorator('state', {\r\n                                initialValue: ['isNew'],\r\n                            })(\r\n                                <Checkbox.Group style={{ width: '100%', margin: \"10px 0 0 20px\"}}>\r\n                                    <Row>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"onsale\">上架</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"isnew\">新品</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"recommend\">推荐</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Checkbox.Group>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            { form.getFieldDecorator('integral', {\r\n                                rules: [{required: true, message: \"请输入积分值\", validate: this.validateIntegral}]\r\n                            })(<Input placeholder=\"请输入积分值\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"详细页标题\">\r\n                            { form.getFieldDecorator('introduce', {\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入详细页标题\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"详细页描述\">\r\n                            { form.getFieldDecorator('description', {\r\n                                rule: [{validate: this.validateIntroduceContent}]\r\n                            })(<Input.TextArea rows={4} placeholder=\"请输入详细页描述\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣：\">\r\n                            {form.getFieldDecorator('discount_gold', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"白金会员折扣\">\r\n                            {form.getFieldDecorator('discount_platinum', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"钻石会员折扣\">\r\n                            {form.getFieldDecorator('discount_diamond', { initialValue: 10 })(\r\n                                <InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"上传图片\">\r\n                            {form.getFieldDecorator('pictures', {\r\n                                rules: [{required: true, message: \"请上传商品图片\"}]\r\n                            })(<PictureWall/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品备注\">\r\n                            { form.getFieldDecorator('note')(\r\n                                <Input.TextArea rows={4} />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button style={{margin: \"50px 0 0 450px\"}} type=\"primary\" htmlType=\"submit\">完成，提交商品</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n    \r\n            \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'add-product-form' })(AddProduct);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Form, Select, InputNumber, Button, Checkbox, Row, Col, Card, Input, message } from 'antd';\r\nimport TopNav from '../../components/top-nav';\r\nimport PictureWall from '../../components/picture-wall/picture-wall';\r\nimport { updateProductList, reqCategoryList } from '../../api';\r\n\r\nclass EditProduct extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            category_options: [],\r\n            data: []\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        data.state = [];\r\n        data.onsale===1 ? data.state.push(\"onsale\") : data.state.push();\r\n        data.isnew===1 ? data.state.push(\"isnew\") : data.state.push();\r\n        data.recommend===1 ? data.state.push(\"recommend\") : data.state.push();\r\n        this.setState({data: data});\r\n        const response = await reqCategoryList();\r\n        if(response.status === 0){\r\n            let options = [];\r\n            response.data.forEach((item) => {\r\n                options.push({key: item.name, value: item.id})\r\n            });\r\n            this.setState({category_options: options})\r\n        }\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    validateNumber = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品货号\")\r\n        }else if(value.length<5 || value.length>10){\r\n            callback(\"请输入少于5个，且不多于10个字符\")\r\n        }else if((/^[0-9a-zA-Z]*$/g).test(value)){\r\n            callback(\"请输入字母、数字或其组合\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateName = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入名称\")\r\n        }else if(value.length<2 || value.length>10){\r\n            callback(\"请输入不少于2个，且不超过10个字符\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validatePrice = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品价格\")\r\n        }else if(value<0){\r\n            callback(\"请按正确格式输入商品价格\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateUnit = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品单位\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateNoteProduct = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入产品备注\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntegral = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入商品积分值\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceTitle = (rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页标题\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    validateIntroduceContent =(rule, value, callback) => {\r\n        if(!value){\r\n            callback(\"请输入详情页内容\")\r\n        }else{\r\n            callback()\r\n        }\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                values.category = Number(values.category);\r\n                values.price = Number(values.price);\r\n                values.integral = Number(values.integral);\r\n                values.onsale = values.state.indexOf('onsale')===-1 ? 0 : 1;\r\n                values.isnew = values.state.indexOf('isnew')===-1 ? 0 : 1;\r\n                values.recommend = values.state.indexOf('recommend')===-1 ? 0 : 1;\r\n                delete values.state;\r\n                const response = await updateProductList(values);\r\n                if(response.status === 0){\r\n                    message.success(response.msg+\",即将返回商品列表\", 0.8);\r\n                    this.timerID = setTimeout(()=>{\r\n                        this.props.history.replace('/product')\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        const {form} = this.props;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['商品管理', '商品列表', '编辑商品']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/product')}}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            { form.getFieldDecorator('number', {\r\n                                initialValue: this.state.data.number,\r\n                                rules: [{required: true, message: \"请输入商品货号\", validate: this.validateNumber}]\r\n                            })(<Input placeholder=\"请输入商品货号\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            { form.getFieldDecorator('name', {\r\n                                initialValue: this.state.data.name,\r\n                                rules: [{required: true, message: \"请输入商品名称\", validate: this.validateName}]\r\n                            })(<Input placeholder=\"请输入商品名称\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            { form.getFieldDecorator('category', {\r\n                                initialValue: this.state.data.category,\r\n                                rules: [{ required: true, message: '请选择所属分类' }],\r\n                            })(\r\n                                <Select onChange={this.handleChange}>\r\n                                    { this.state.category_options.map((item) => {\r\n                                        return <Select.Option key={item.value}>{item.key}</Select.Option>\r\n                                    })}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\" hasFeedback>\r\n                            { form.getFieldDecorator('price', {\r\n                                initialValue: this.state.data.price,\r\n                                rules: [{required: true, message: \"请输入商品售价\"}]\r\n                            })(<Input addonAfter=\"元 &nbsp;&nbsp;&nbsp;\" placeholder=\"请输入商品售价\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            { form.getFieldDecorator('unit', {\r\n                                initialValue: this.state.data.unit,\r\n                                rules: [{required: true, message: \"请输入商品计量单位\", validate: this.validateUnit}]\r\n                            })(<Input placeholder=\"请输入商品计量单位\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品状态\">\r\n                            {form.getFieldDecorator('state', {\r\n                                initialValue: this.state.data.state,\r\n                            })(\r\n                                <Checkbox.Group style={{ width: '100%', margin: \"10px 0 0 20px\"}}>\r\n                                    <Row>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"onsale\">上架</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"isnew\">新品</Checkbox>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Checkbox value=\"recommend\">推荐</Checkbox>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Checkbox.Group>,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            { form.getFieldDecorator('integral', {\r\n                                initialValue: this.state.data.integral,\r\n                                rules: [{required: true, message: \"请输入积分值\"}]\r\n                            })(<Input placeholder=\"请输入积分值\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"详细页标题\" hasFeedback>\r\n                            { form.getFieldDecorator('introduce', {\r\n                                initialValue: this.state.data.introduce,\r\n                                rule: [{validate: this.validateIntroduceTitle}]\r\n                            })(<Input.TextArea rows={2} placeholder=\"请输入详细页标题\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"详细页描述\" hasFeedback>\r\n                            { form.getFieldDecorator('description', {\r\n                                initialValue: this.state.data.description,\r\n                                rule: [{validate: this.validateIntroduceContent}]\r\n                            })(<Input.TextArea rows={4} placeholder=\"请输入详细页描述\"/>)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣：\">\r\n                            {form.getFieldDecorator('discount_gold', {\r\n                                initialValue: this.state.data.discount_gold\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"白金会员折扣\">\r\n                            {form.getFieldDecorator('discount_platinum', {\r\n                                initialValue: this.state.data.discount_platinum\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"钻石会员折扣\">\r\n                            {form.getFieldDecorator('discount_diamond', {\r\n                                initialValue: this.state.data.discount_diamond\r\n                            })(<InputNumber min={1} max={10} step={0.5} />)}\r\n                            <span className=\"ant-form-text\">折</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"上传图片\">\r\n                            {form.getFieldDecorator('pictures', {\r\n                                initialValue: this.state.data.pictures\r\n                            })(<PictureWall imgs={this.state.data.pictures} />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品备注\" hasFeedback>\r\n                            { form.getFieldDecorator('note', {\r\n                                initialValue: this.state.data.note\r\n                            })(<Input.TextArea rows={4} />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button style={{margin: \"50px 0 0 450px\"}} type=\"primary\" htmlType=\"submit\">完成，提交商品</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'add-product-form' })(EditProduct);\r\n","import React from 'react';\r\nimport './product.less';\r\nimport {Form, Button, Card, Icon} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewProduct extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            data: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        let stateYes = (string) => (<span><Icon type=\"check\" style={{color: \"#1DA57A\"}}/>{string}</span>);\r\n        let stateNo = (string) => (<span><Icon type=\"close\" style={{color: \"#1DA57A\"}}/>{string}</span>);\r\n        return (\r\n            <div className=\"product-view-container\">\r\n                <TopNav nav={['商品管理', '商品列表', '商品详情']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看商品信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/product')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"商品货号\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.number}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品名称\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所属分类\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.category_name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"售价\">\r\n                            <span className=\"ant-form-text\">{this.state.data.price}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计量单位\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.unit}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品状态\">\r\n                            <span className=\"ant-form-text\" style={{marginLeft: \"-20px\"}}>\r\n                                {this.state.data.onsale ? stateYes(\"上架\") : stateNo(\"上架\")}\r\n                                {this.state.data.onsale ? stateYes(\"新品\") : stateNo(\"新品\")}\r\n                                {this.state.data.onsale ? stateYes(\"推荐\") : stateNo(\"推荐\")}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"赠送积分\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"详细页标题\">\r\n                            <span className=\"ant-form-text\">{this.state.data.introduce}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"详细页描述\">\r\n                            <span className=\"ant-form-text\">{this.state.data.description}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_gold===10 ? \"无\" : this.state.data.discount_gold+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_platinum===10 ? \"无\" : this.state.data.discount_platinum+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员折扣\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.discount_diamond===10 ? \"无\" : this.state.data.discount_diamond+\"折\" }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"商品图片\">\r\n                            <span className=\"ant-form-pictures\">\r\n                                {\r\n                                    this.state.data.pictures===\"\" ? <span>无</span> :\r\n                                        this.state.data.pictures.split(\",\").map((item, index)=> {\r\n                                            return (<img key={index} src={item} alt=\"商品图片\"/>)\r\n                                        })\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"优惠信息备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({name:'product-add-form'})(ViewProduct);\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Input, Table, Button, Icon} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport {reqOrderList, reqOrderSearch, reqProductList} from '../../api/index';\r\n\r\nclass Order extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            tableData: []\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqOrderList();\r\n        this.refreshTable(response)\r\n    };\r\n    refreshTable = async (response1) => {\r\n        const response2 = await reqProductList();\r\n        if(response1.status===0 && response2.status===0){\r\n            this.setState({isLoading: true});\r\n            let data = response1.data.map(item => {\r\n                item.commodity = JSON.parse(item.commodity);\r\n                return item\r\n            });\r\n            this.timerID = setTimeout(()=>{\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data\r\n                })\r\n            }, 300)\r\n        }\r\n    };\r\n    handleSearch = async (id) => {\r\n        const response = id===\"\" ? await reqOrderList() : await reqOrderSearch(id);\r\n        this.refreshTable(response)\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/order-view', state: {data : record}});\r\n    };\r\n    getTime = (time) => {\r\n        let temp = new Date(time);\r\n        let month = temp.getMonth()+1;\r\n        return temp.getFullYear()+\"-\"+month+\"-\"+temp.getDate()+\" \"+temp.getHours()+\":\"+temp.getMinutes()\r\n    };\r\n    render(){\r\n        const column = [\r\n            {\r\n                title: '订单ID',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '顾客',\r\n                dataIndex: 'customer',\r\n                key: 'customer'\r\n            },\r\n            {\r\n                title: '订单内容',\r\n                dataIndex: 'commodity',\r\n                key: 'commodity',\r\n                render: (text) => (\r\n                    <div>\r\n                        {\r\n                            text.map((item, index) => {\r\n                                return <div key={index}>{item.name}<Icon type=\"close\"/>{item.count}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                key: 'createtime',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTime(text)}</span>,\r\n                sorter: (a, b) => a.amount - b.amount,\r\n            },\r\n            {\r\n                title: '订单总金额',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                render: (text) => <span>￥{text}</span>,\r\n                sorter: (a, b) => a.amount - b.amount\r\n            },\r\n            {\r\n                title: '评价',\r\n                dataIndex: 'evalution',\r\n                key: 'evalution'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                filters: [\r\n                    {text: \"已付款\", value: 1},\r\n                    {text: \"请求取消\", value: 2},\r\n                    {text: \"已取消\", value: 3},\r\n                    {text: \"已完成\", value: 4},\r\n                    {text: \"已评价\", value: 5},\r\n                ],\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\"  onClick={()=>this.handleView(record)}>查看详情</Button>\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['订单管理', '全部订单']} />\r\n                \r\n                <div style={{margin: \"20px 22px 0 20px\", overflow: \"hidden\"}}>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询订单信息\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={column}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n// import './order.less';\r\nimport {Form, Button, Card, Icon} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewOrder extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            data: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let data = this.props.location.state.data;\r\n        this.setState({\r\n            data: data\r\n        })\r\n    };\r\n    getTime = (time) => {\r\n        let temp = new Date(time);\r\n        let month = temp.getMonth()+1;\r\n        return temp.getFullYear()+\"-\"+month+\"-\"+temp.getDate()+\" \"+temp.getHours()+\":\"+temp.getMinutes()\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 10 },\r\n        };\r\n        return (\r\n            <div className=\"product-view-container\">\r\n                <TopNav nav={['订单管理', '订单详情']}/>\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看订单信息</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/order')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"订单ID\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"顾客ID\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.customer}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"状态\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.state.data.state}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单列表\">\r\n                            <div className=\"ant-form-text\">\r\n                                {\r\n                                    this.state.data.commodity.map((item, index) => {\r\n                                        return <div key={index}>{item.name}<Icon type=\"close\"/> {item.count}</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"下单时间\" hasFeedback>\r\n                            <span className=\"ant-form-text\">{this.getTime(this.state.data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单总金额\" hasFeedback>\r\n                            <span className=\"ant-form-text\">￥{this.state.data.amount}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"实付金额\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.payment}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"所获积分\">\r\n                            <span className=\"ant-form-text\">{this.state.data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"评价\">\r\n                            <span className=\"ant-form-text\">{this.state.data.evalution}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({name:'product-add-form'})(ViewOrder);\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Input, Table, Button, message, Icon, Divider} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport {reqOrderList, reqOrderSearch, reqProductList} from '../../api/index';\r\n\r\nclass OrderStage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            tableData: []\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqOrderList();\r\n        this.refreshTable(response)\r\n    };\r\n    refreshTable = async (response1) => {\r\n        const response2 = await reqProductList();\r\n        if(response1.status===0 && response2.status===0){\r\n            this.setState({isLoading: true});\r\n            let data = response1.data.map(item => {\r\n                item.commodity = JSON.parse(item.commodity);\r\n                return item\r\n            });\r\n            this.timerID = setTimeout(()=>{\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data\r\n                })\r\n            }, 300)\r\n        }\r\n    };\r\n    handleAdd = () => {\r\n        message.success(\"handle Add\")\r\n    };\r\n    handleSearch = async (id) => {\r\n        const response = id===\"\" ? await reqOrderList() : await reqOrderSearch(id);\r\n        this.refreshTable(response)\r\n    };\r\n    handleView = (id) => {\r\n        console.log(id)\r\n        message.success(\"handle View\")\r\n    };\r\n    getTime = (time) => {\r\n        let temp = new Date(time);\r\n        let month = temp.getMonth()+1;\r\n        return temp.getFullYear()+\"-\"+month+\"-\"+temp.getDate()+\" \"+temp.getHours()+\":\"+temp.getMinutes()\r\n    };\r\n    render(){\r\n        const column = [\r\n            {\r\n                title: '订单ID',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: (text) => <Button type=\"link\" onClick={()=>this.handleView(text)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '桌号',\r\n                dataIndex: 'seat',\r\n                key: 'seat',\r\n                render: (text) => <span>{text<10 ? '0'+text : text}</span>\r\n            },\r\n            {\r\n                title: '顾客',\r\n                dataIndex: 'customer',\r\n                key: 'customer'\r\n            },\r\n            {\r\n                title: '订单内容',\r\n                dataIndex: 'commodity',\r\n                key: 'commodity',\r\n                render: (text) => (\r\n                    <div>\r\n                        {\r\n                            text.map((item, index) => {\r\n                                return <div key={index}>{item.name}<Icon type=\"close\"/>{item.count}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                key: 'createtime',\r\n                render: (text) => <span>{this.getTime(text)}</span>,\r\n                sorter: (a, b) => a.amount - b.amount,\r\n            },\r\n            {\r\n                title: '订单总金额',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                render: (text) => <span>￥{text}</span>,\r\n                sorter: (a, b) => a.amount - b.amount\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\"  onClick={()=>this.handleView(record)}>详情</Button>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"primary\">操作</Button>\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['订单管理', '前台管理']} />\r\n                <div style={{margin: \"20px 22px 0 20px\", overflow: \"hidden\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}>新增订单</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询订单信息\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={column}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderStage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Button, Input, Table, Divider, Icon, Modal, Tag, message, Form, Popconfirm} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport Loading from '../../components/loading/index';\r\nimport { reqCustomerList, reqCustomerSearch, reqCustomerDelete, reqRuleList, reqRuleUpdate } from '../../api/index';\r\nimport {InputNumber} from \"antd/es\";\r\n\r\nclass Customer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            visible: false,\r\n            rule: {}\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        let response = await reqCustomerList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = (response) => {\r\n        if(response.status === 0){\r\n            let data = response.data;\r\n            data = data.map(item => {\r\n                return item\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data,\r\n                })\r\n            }, 300)\r\n        }\r\n    };\r\n    handleSearch = async (idOrName) => {\r\n        const response = idOrName===\"\" ? await reqCustomerList() : await reqCustomerSearch(idOrName);\r\n        this.refreshTable(response)\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/customer-add')\r\n    };\r\n    handleSet = async () => {\r\n        const response = await reqRuleList();\r\n        if(response.status === 0){\r\n            this.setState({\r\n                visible: true,\r\n                rule: response.data[0]\r\n            })\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除会员\\\"\"+record.name+\"(ID:\"+record.id+\")\\\"吗?\",\r\n            okText: '确定',\r\n            onOk: async ()=>{\r\n                const response1 = await reqCustomerDelete(record.id);\r\n                if(response1.status === 0){\r\n                    let data = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({data: data})\r\n                }\r\n            },\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleDetail = (record) => {\r\n        this.props.history.push({pathname: '/customer-view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/customer-edit', state: { data: record}})\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if(!err){\r\n                const response = await reqRuleUpdate(values);\r\n                if(response.status === 0){\r\n                    this.setState({visible: false});\r\n                    this.timerID = setTimeout(()=>{\r\n                        message.success(\"设置成功\");\r\n                    }, 500)\r\n                }\r\n            }\r\n        })\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '会员ID',\r\n                key: 'id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '姓名/等级',\r\n                key: 'name',\r\n                dataIndex: 'name',\r\n                render: (text, record) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleDetail(record)}>\r\n                        {\r\n                            record.status===1 ? <span>{text} <Tag color=\"blue\">黄金</Tag></span> :\r\n                                record.status===2 ? <span>{text} <Tag color=\"green\">白金</Tag></span> :\r\n                                    <span>{text} <Tag color=\"red\">钻石</Tag></span>\r\n                        }\r\n                    </Button>\r\n                ),\r\n                filters: [{text: '黄金会员', value: 1}, {text: '白金会员', value: 2}, {text: '钻石会员', value: 3}],\r\n                onFilter: (value, record) => value===record.status\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                key: 'createtime',\r\n                dataIndex: 'createtime',\r\n                render: (text) => {\r\n                    let time = new Date(text);\r\n                    let month = time.getMonth()+1;\r\n                    return <span><Icon type=\"clock-circle\" /> {time.getFullYear()+'-'+month+'-'+time.getDate()}</span>;\r\n                },\r\n                sorter: (a, b) => a.createtime-b.createtime,\r\n            },\r\n            {\r\n                title: '电话',\r\n                key: 'tel',\r\n                dataIndex: 'tel',\r\n                render: (text)=><span><Icon type=\"phone\" /> {text}</span>\r\n            },\r\n            {\r\n                title: '积分',\r\n                key: 'integral',\r\n                dataIndex: 'integral',\r\n                sorter: (a, b) => a.integral-b.integral\r\n            },\r\n            {\r\n                title: '订单数量',\r\n                key: 'orderSum',\r\n                render: (text, record) => <span>待完成</span>,\r\n                filters: [\r\n                    {\r\n                        text: '最近一周',\r\n                        value: '0',\r\n                    },\r\n                    {\r\n                        text: '最近一月',\r\n                        value: '1',\r\n                    },\r\n                    {\r\n                        text: '最近一年',\r\n                        value: '2'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '消费金额',\r\n                key: 'orderAmount',\r\n                render: (text, record) => <span>待完成</span>,\r\n                filters: [\r\n                    {\r\n                        text: '最近一周',\r\n                        value: '0',\r\n                    },\r\n                    {\r\n                        text: '最近一月',\r\n                        value: '1',\r\n                    },\r\n                    {\r\n                        text: '最近一年',\r\n                        value: '2'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"customer-contianer\">\r\n                <TopNav nav={[\"会员管理\",\"会员列表\"]}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}>新增会员</Button>\r\n                    <Button type=\"primary\" style={{marginLeft: \"40px\"}} onClick={this.handleSet}>会员设置</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询会员信息\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey={record => record.id}\r\n                               bordered\r\n                        />\r\n                }\r\n                <Modal\r\n                    visible={this.state.visible}\r\n                    title=\"会员设置\"\r\n                    onCancel={()=>{this.setState({visible: false})}}\r\n                    footer={null}\r\n                >\r\n                    <Form style={{overflow: \"hidden\"}} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"ID\" style={{display: \"none\"}}>\r\n                            {\r\n                                this.props.form.getFieldDecorator('id', {\r\n                                    initialValue: 1000\r\n                                })(<InputNumber/>)\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item label=\"黄金会员\">\r\n                            {\r\n                                this.props.form.getFieldDecorator('gold', {\r\n                                    initialValue: this.state.rule.gold || 0\r\n                                })(<InputNumber style={{width: \"150px\"}}/>)\r\n                            }\r\n                            <span style={{marginLeft: \"10px\"}}>积分</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"白金会员\">\r\n                            {\r\n                                this.props.form.getFieldDecorator('platinum', {\r\n                                    initialValue: this.state.rule.platinum || 0\r\n                                })(<InputNumber style={{width: \"150px\"}}/>)\r\n                            }\r\n                            <span style={{marginLeft: \"10px\"}}>积分</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"钻石会员\">\r\n                            {\r\n                                this.props.form.getFieldDecorator('diamond', {\r\n                                    initialValue: this.state.rule.diamond || 0\r\n                                })(<InputNumber style={{width: \"150px\"}}/>)\r\n                            }\r\n                            <span style={{marginLeft: \"10px\"}}>积分</span>\r\n                        </Form.Item>\r\n                        {/*<Button style={{float: \"right\", margin: \"20px 160px 0 30px\"}} type=\"primary\" htmlType=\"submit\">确定</Button>*/}\r\n                        <Popconfirm\r\n                            placement=\"topRight\"\r\n                            title=\"确定要更新会员设置吗？\"\r\n                            okType=\"danger\"\r\n                            onConfirm={this.handleSubmit}\r\n                            okText=\"确认\"\r\n                            cancelText=\"取消\"\r\n                        >\r\n                            <Button style={{float: \"right\", margin: \"20px 160px 0 30px\"}} type=\"primary\">设置</Button>\r\n                        </Popconfirm>\r\n                        <Button\r\n                            style={{float: \"right\", marginTop: \"20px\"}}\r\n                            type=\"primary\"\r\n                            onClick={()=>{this.setState({visible: false})}}\r\n                        >取消</Button>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(Customer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Form, Card, Button, Input, message } from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { reqCustomerAdd } from '../../api/index'\r\n\r\nconst AddCustomer = Form.create({name: 'add-customer-form'})(\r\n    class extends React.Component{\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields(async (err, values) => {\r\n                if(!err){\r\n                    let data = values;\r\n                    data.createtime = new Date().getTime();\r\n                    data.status = 1;\r\n                    data.integral = 0;\r\n                    const response = await reqCustomerAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增会员成功，即将返回会员列表页！\");\r\n                        this.timerID = setTimeout(() => {\r\n                            this.props.history.push('/customer')\r\n                        }, 2000)\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['会员管理', '新增会员']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增会员信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/customer')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"姓名\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddCustomer;","import React from 'react';\r\nimport { Form, Card, Button, Input, message, InputNumber, Radio} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { updateCustomerList } from '../../api/index'\r\n\r\nconst EditCustomer = Form.create({name: 'add-customer-form'})(\r\n    class extends React.Component{\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields(async (err, values) => {\r\n                if(!err){\r\n                    let data = {};\r\n                    data.id = this.props.location.state.data.id;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key];\r\n                        }\r\n                    }\r\n                    const response = await updateCustomerList(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"编辑会员信息成功，即将返回会员列表页！\");\r\n                        this.timerID = setTimeout(() => {\r\n                            this.props.history.push('/customer')\r\n                        }, 2000)\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const data = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['会员管理', '会员列表', '编辑会员']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑会员信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/customer')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"姓名\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.name\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.tel\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('status', {\r\n                                        initialValue: data.status,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={1}>黄金</Radio.Button>\r\n                                            <Radio.Button value={2}>白金</Radio.Button>\r\n                                            <Radio.Button value={3}>钻石</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"积分\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('integral', {\r\n                                        initialValue: data.integral\r\n                                    })(<InputNumber style={{width: \"100px\"}} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\" hasFeedback>\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: data.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditCustomer;","import React from 'react';\r\nimport './customer.less';\r\nimport {Button, Card, Form, Tag} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewCustomer extends React.Component{\r\n    getTime = (time) => {\r\n        time = new Date(time);\r\n        let month = time.getMonth()+1;\r\n        return <span>{time.getFullYear()+'-'+month+'-'+time.getDate()}&nbsp;&nbsp;{time.getHours()+':'+time.getMinutes()}</span>;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        let data = this.props.location.state.data;\r\n        return (\r\n            <div className=\"customer-view-container\">\r\n                <TopNav nav={['会员管理', '会员列表', '会员详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看会员详情</span>}\r\n                      extra={<Button onClick={()=>{this.props.history.push('/customer')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"会员ID\">\r\n                            <span className=\"ant-form-text\">{data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"积分\">\r\n                            <span className=\"ant-form-text\">{data.integral}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span style={{marginLeft: \"20px\"}}>\r\n                                {\r\n                                    data.status===1 ? <Tag color=\"blue\">黄金</Tag> :\r\n                                        data.status===2 ? <Tag color=\"green\">白金</Tag> : <Tag color=\"red\">钻石</Tag>\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"创建时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{data.note}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCustomer;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Divider, Icon, Input, Table, Tag, Modal} from \"antd\";\r\nimport Loading from \"../../components/loading\";\r\nimport { reqEmployeeList, reqEmployeeDelete, reqEmployeeSearch } from '../../api/index';\r\n\r\nclass Employee extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            dutyFilter: [],\r\n            departmentFilter: []\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqEmployeeList();\r\n        this.refreshTable(response)\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = (response) => {\r\n        if(response.status === 0){\r\n            let department = [], departmentFilter = [], duty = [], dutyFilter = [];\r\n            response.data.forEach(item => {\r\n                department.push(item.department);\r\n                duty.push(item.duty)\r\n            });\r\n            new Set(department).forEach(item => {\r\n                departmentFilter.push({text: item, value: item})\r\n            });\r\n            new Set(duty).forEach(item => {\r\n                dutyFilter.push({text: item, value: item})\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: response.data,\r\n                    departmentFilter: departmentFilter,\r\n                    dutyFilter: dutyFilter\r\n                })\r\n            })\r\n        }\r\n    };\r\n    handleSearch = async (nameOrWorkid) => {\r\n        const response = nameOrWorkid===\"\" ? await reqEmployeeList() : await reqEmployeeSearch(nameOrWorkid);\r\n        this.refreshTable(response)\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除员工\\\"\"+record.name+\"(工号：\"+record.workid+\")\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqEmployeeDelete(record.workid);\r\n                if(response.status === 0){\r\n                    let data = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.workid===record.workid ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({data})\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        })\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push(\"/employee-add\")\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/employee-view', state: {data: record}})\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/employee-edit', state: {data: record}})\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '工号',\r\n                key: 'workid',\r\n                dataIndex: 'workid'\r\n            },\r\n            {\r\n                title: '姓名/性别',\r\n                key: 'name',\r\n                dataIndex: 'name',\r\n                render: (text, record) => (\r\n                    <Button type=\"link\" onClick={()=>this.handleView(record)}>\r\n                        {text}\r\n                        {record.gender===0 ? <Icon type=\"woman\"/> : <Icon type=\"man\"/>}\r\n                    </Button>\r\n                ),\r\n                filters: [{text: '男', value: 1},{text: '女', value: 0}],\r\n                onFilter: (value, record) => value===record.gender\r\n            },\r\n            {\r\n                title: '年龄',\r\n                key: 'age',\r\n                dataIndex: 'age',\r\n                sorter: (a, b) => a.age-b.age\r\n            },\r\n            {\r\n                title: '电话',\r\n                key: 'tel',\r\n                dataIndex: 'tel',\r\n                render: (text)=><span><Icon type=\"phone\" /> {text}</span>\r\n            },\r\n            {\r\n                title: '工龄',\r\n                key: 'workage',\r\n                dataIndex: 'entrytime',\r\n                render: (text) => <span>{new Date().getFullYear()-new Date(text).getFullYear() || \"未满一年\"}</span>,\r\n                sorter: (a, b) => a.entrytime-b.entrytime\r\n            },\r\n            {\r\n                title: '部门',\r\n                key: 'department',\r\n                dataIndex: 'department',\r\n                filters: this.state.departmentFilter,\r\n                onFilter: (value, record) => value===record.department\r\n            },\r\n            {\r\n                title: '职责',\r\n                key: 'duty',\r\n                dataIndex: 'duty',\r\n                render: (text,record) => record.level===0 ? <span>{text} <Tag color=\"blue\">初级</Tag></span> :\r\n                    record.level===1 ? <span>{text} <Tag color=\"green\">中级</Tag></span> :\r\n                        <span>{text} <Tag color=\"red\">高级</Tag></span>,\r\n                filters: this.state.dutyFilter,\r\n                onFilter: (value, record) => value===record.duty\r\n            },\r\n            {\r\n                title: '月薪',\r\n                key: 'salary',\r\n                dataIndex: 'salary',\r\n                render: (text) => <span>￥{text}</span>,\r\n                sorter: (a, b) => a.salary-b.salary\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                render: (record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                        <Divider type=\"vertical\"/>\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div>\r\n                <TopNav nav={['人事管理', '员工列表']} />\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}>新增员工</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询会员信息\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading/> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey={record => record.workid}\r\n                               bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee;","import React from 'react';\r\nimport {Button, Card, Form, Input, Radio, InputNumber, Steps, DatePicker, Icon} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport Select from \"antd/es/select\";\r\nimport PicturesWall from \"../../components/picture-wall/picture-wall\";\r\nimport { addEmployeeList } from '../../api/index';\r\n\r\nconst AddEmployee = Form.create({name: 'add-employee-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                current: 0,\r\n                value1: {},\r\n                data: {},\r\n                key: 'tab1'\r\n            }\r\n        }\r\n        handleNext = () => {\r\n            let field = ['name','id','gender','age','nation','birthday','origin','marriage','institution','degree','graduatetime'];\r\n            this.props.form.validateFields(field,(err,values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        current: current+1,\r\n                        data: data\r\n                    })\r\n                }\r\n            })\r\n        };\r\n        handlePrevious = () => {\r\n            let current = this.state.current;\r\n            this.setState({current: current-1})\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            let field = ['profile','workid','entrytime','department','duty','level','tel','address','salary','note'];\r\n            this.props.form.validateFields(field, async (err, values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    data.birthday = new Date(data.birthday).getTime();\r\n                    data.graduatetime = new Date(data.birthday).getTime();\r\n                    data.entrytime = new Date(data.birthday).getTime();\r\n                    const response = await addEmployeeList(data);\r\n                    if(response.status === 0){\r\n                        this.setState({\r\n                            data: data,\r\n                            current: current+1\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        onTabChange = (key) => {\r\n            this.setState({ key: key });\r\n        };\r\n        getDateTime = (birthday) => {\r\n            let time = new Date(birthday);\r\n            let month = time.getMonth()+1;\r\n            return time.getFullYear()+'-'+month+'-'+time.getDate();\r\n        };\r\n        getMonthTime = (date) => {\r\n            let time = new Date(date);\r\n            let month = time.getMonth()+1;\r\n            return time.getFullYear()+'-'+month;\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const contentList = {\r\n                tab1: (\r\n                    <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"身份证号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"性别\">\r\n                        <span className=\"ant-form-text\" style={{textIndent: \"10px\"}}>\r\n                            {\r\n                                this.state.data.gender===0 ? <span><Icon type=\"woman\" /> 女</span> : <span><Icon type=\"man\" /> 男</span>\r\n                            }\r\n                        </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"年龄\">\r\n                            <span className=\"ant-form-text\">{this.state.data.age}岁</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"民族\">\r\n                            <span className=\"ant-form-text\">{this.state.data.nation}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"出生日期\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.birthday)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"籍贯\">\r\n                            <span className=\"ant-form-text\">{this.state.data.origin}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"婚姻状况\">\r\n                            <span className=\"ant-form-text\">{this.state.data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"学历\">\r\n                            <span className=\"ant-form-text\">{this.state.data.degree}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业院校\">\r\n                            <span className=\"ant-form-text\">{this.state.data.institution}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业时间\">\r\n                            <span className=\"ant-form-text\">{this.getMonthTime(this.state.data.graduatetime)}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                ),\r\n                tab2: (\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"工号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.workid}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"入职时间\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.entrytime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"部门\">\r\n                            <span className=\"ant-form-text\">{this.state.data.department}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"职责\">\r\n                            <span className=\"ant-form-text\">{this.state.data.duty}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.level===0 ? \"初级\" : this.state.data.level===1 ?  \"中级\" : \"高级\"}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"住址\">\r\n                            <span className=\"ant-form-text\">{this.state.data.address}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"月薪\">\r\n                            <span className=\"ant-form-text\">{this.state.data.salary} 元</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    !this.state.data.profile ? <span>无</span> :\r\n                                        <img src={this.state.data.profile}\r\n                                             alt=\"员工照片\"\r\n                                             style={{\r\n                                                 width: \"100px\",\r\n                                                 height: \"100px\",\r\n                                                 padding: \"7px\",\r\n                                                 marginRight: \"10px\",\r\n                                                 borderRadius: \"5px\",\r\n                                                 border: \"1px solid lightgray\"}}\r\n                                        />\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n            };\r\n            const steps = [\r\n                {\r\n                    title: \"填写基本信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                            <Form.Item label=\"姓名\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"身份证号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('id', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入身份证号码\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"性别\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('gender', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={1} style={{margin: \"0 20px\"}}>男</Radio>\r\n                                            <Radio value={0}>女</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"年龄\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('age', {\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber style={{width: \"150px\"}} />)\r\n                                }\r\n                                <span className=\"ant-form-text\">岁</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"民族\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('nation', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入民族\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"出生日期\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('birthday', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"籍贯\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('origin', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入籍贯\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            \r\n                            \r\n                            <Form.Item label=\"婚姻状况\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('marriage', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={0} style={{margin: \"0 20px\"}}>未婚</Radio>\r\n                                            <Radio value={1}>已婚</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"学历\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('degree', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select placeholder=\"请选择学历\" style={{width: \"187px\"}}>\r\n                                            <Select.Option value='博士'>博士</Select.Option>\r\n                                            <Select.Option value='硕士'>硕士</Select.Option>\r\n                                            <Select.Option value='本科'>本科</Select.Option>\r\n                                            <Select.Option value='高中'>高中</Select.Option>\r\n                                            <Select.Option value='初中'>初中</Select.Option>\r\n                                            <Select.Option value='小学'>小学</Select.Option>\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业院校\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('institution', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入毕业院校\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('graduatetime', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker.MonthPicker format='YYYY/MM' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\"\r\n                                        style={{margin: \"50px 0 0 450px\"}}\r\n                                        onClick={()=>this.handleNext(0)}>下一步</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"填写工作信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"工号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('workid', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入工号\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"入职时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('entrytime', {\r\n                                        rules: [{required: true}]\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"部门\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('department', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input  placeholder=\"请输入工作部门\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"职责\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('duty', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入工作职责\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('level', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={0}>初 级</Radio.Button>\r\n                                            <Radio.Button value={1}>中 级</Radio.Button>\r\n                                            <Radio.Button value={2}>高 级</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"住址\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('address', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入住址\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"月薪\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('salary', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input addonAfter=\"元\" placeholder=\"请输入月薪\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"照片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('profile', {\r\n                                        rules: [{required: true}]\r\n                                    })(<PicturesWall />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input.Group style={{marginLeft: \"410px\"}}>\r\n                                    <Button type=\"primary\" style={{marginRight: \"50px\"}} onClick={()=>this.handlePrevious()}>上一步</Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">完成，确认提交</Button>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"提交成功\",\r\n                    content: (\r\n                        <Card\r\n                            style={{ width: \"80%\", margin: \"20px auto\"}}\r\n                            tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                            activeTabKey={this.state.key}\r\n                            onTabChange={key => {\r\n                                this.onTabChange(key);\r\n                            }}\r\n                        >\r\n                            {contentList[this.state.key]}\r\n                        </Card>\r\n                    )\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '员工列表', '新增员工']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增员工信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Steps current={this.state.current} style={{margin: \"40px auto\", width: \"550px\"}}>\r\n                            {\r\n                                steps.map((item, index) =>\r\n                                    <Steps.Step key={index} title={item.title}/>)\r\n                            }\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[this.state.current].content}</div>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddEmployee;","import React from \"react\";\r\nimport { Form, Card, Button, Icon } from \"antd\";\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass ViewEmployee extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'tab1'\r\n        }\r\n    }\r\n    onTabChange = (key) => {\r\n        this.setState({key: key})\r\n    };\r\n    getDateTime = (birthday) => {\r\n        let time = new Date(birthday);\r\n        let month = time.getMonth()+1;\r\n        return time.getFullYear()+'-'+month+'-'+time.getDate();\r\n    };\r\n    getMonthTime = (date) => {\r\n        let time = new Date(date);\r\n        let month = time.getMonth()+1;\r\n        return time.getFullYear()+'-'+month;\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        const data = this.props.location.state.data;\r\n        const contentList = {\r\n            tab1: (\r\n                <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                    <Form.Item label=\"姓名\">\r\n                        <span className=\"ant-form-text\">{data.name}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"身份证号\">\r\n                        <span className=\"ant-form-text\">{data.id}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"性别\">\r\n                        <span className=\"ant-form-text\" style={{textIndent: \"10px\"}}>\r\n                            {\r\n                                data.gender===0 ? <span><Icon type=\"woman\" /> 女</span> : <span><Icon type=\"man\" /> 男</span>\r\n                            }\r\n                        </span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"年龄\">\r\n                        <span className=\"ant-form-text\">{data.age}岁</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"民族\">\r\n                        <span className=\"ant-form-text\">{data.nation}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"出生日期\">\r\n                        <span className=\"ant-form-text\">{this.getDateTime(data.birthday)}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"籍贯\">\r\n                        <span className=\"ant-form-text\">{data.origin}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"婚姻状况\">\r\n                        <span className=\"ant-form-text\">{data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"学历\">\r\n                        <span className=\"ant-form-text\">{data.degree}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"毕业院校\">\r\n                        <span className=\"ant-form-text\">{data.institution}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"毕业时间\">\r\n                        <span className=\"ant-form-text\">{this.getMonthTime(data.graduatetime)}</span>\r\n                    </Form.Item>\r\n                </Form>\r\n            ),\r\n            tab2: (\r\n                <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                    <Form.Item label=\"工号\">\r\n                        <span className=\"ant-form-text\">{data.workid}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"入职时间\">\r\n                        <span className=\"ant-form-text\">{this.getDateTime(data.entrytime)}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"部门\">\r\n                        <span className=\"ant-form-text\">{data.department}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"职责\">\r\n                        <span className=\"ant-form-text\">{data.duty}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"等级\">\r\n                        <span className=\"ant-form-text\">{data.level===0 ? \"初级\" : data.level===1 ?  \"中级\" : \"高级\"}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Tel\">\r\n                        <span className=\"ant-form-text\">{data.tel}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"住址\">\r\n                        <span className=\"ant-form-text\">{data.address}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"月薪\">\r\n                        <span className=\"ant-form-text\">{data.salary} 元</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"备注\">\r\n                        <span className=\"ant-form-text\">{data.note}</span>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    data.profile===\"\" ? <span>无</span> :\r\n                                        data.profile.split(\",\").map((item, index)=> {\r\n                                            return (<img key={index}\r\n                                                         src={item}\r\n                                                         alt=\"员工照片\"\r\n                                                         style={{width: \"100px\",\r\n                                                             height: \"100px\",\r\n                                                             padding: \"7px\",\r\n                                                             marginRight: \"10px\",\r\n                                                             borderRadius: \"5px\",\r\n                                                             border: \"1px solid lightgray\"}}\r\n                                                    />)\r\n                                        })\r\n                                }\r\n                            </span>\r\n                    </Form.Item>\r\n                </Form>\r\n            )\r\n        };\r\n        return (\r\n            <div className=\"employee-view-container\">\r\n                <TopNav nav={['人事管理', '员工列表', '员工详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看员工详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                      tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                      activeTabKey={this.state.key}\r\n                      onTabChange={key=>this.onTabChange(key)}\r\n                >\r\n                    {contentList[this.state.key]}\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEmployee;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, DatePicker, Form, Icon, Input, InputNumber, Radio, Steps} from \"antd\";\r\nimport { updateEmployeeList } from \"../../api\";\r\nimport Select from \"antd/es/select\";\r\nimport PicturesWall from \"../../components/picture-wall/picture-wall\";\r\nimport moment from 'moment';\r\n\r\nconst EditEmployee = Form.create({name: 'edit-employee-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                current: 0,\r\n                value1: {},\r\n                data: {},\r\n                key: 'tab1'\r\n            }\r\n        }\r\n        handleNext = () => {\r\n            let field = ['name','id','gender','age','nation','birthday','origin','marriage','institution','degree','graduatetime'];\r\n            this.props.form.validateFields(field,(err,values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        current: current+1,\r\n                        data: data\r\n                    })\r\n                }\r\n            })\r\n        };\r\n        handlePrevious = () => {\r\n            let current = this.state.current;\r\n            this.setState({current: current-1})\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            let field = ['profile','workid','entrytime','department','duty','level','tel','address','salary','note'];\r\n            this.props.form.validateFields(field, async (err, values) => {\r\n                if(!err){\r\n                    let data = this.state.data;\r\n                    let current = this.state.current;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    data.birthday = new Date(data.birthday).getTime();\r\n                    data.graduatetime = new Date(data.birthday).getTime();\r\n                    data.entrytime = new Date(data.birthday).getTime();\r\n                    let updateData = {};\r\n                    updateData.workid = data.workid;\r\n                    for(let key in data){\r\n                        if(data.hasOwnProperty(key)){\r\n                            updateData[key] = data[key]\r\n                        }\r\n                    }\r\n                    const response = await updateEmployeeList(updateData);\r\n                    if(response.status === 0){\r\n                        this.setState({\r\n                            data: data,\r\n                            current: current+1\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        onTabChange = (key) => {\r\n            this.setState({ key: key });\r\n        };\r\n        getDateTime = (birthday) => {\r\n            let time = new Date(birthday);\r\n            let month = time.getMonth()+1;\r\n            return time.getFullYear()+'-'+month+'-'+time.getDate();\r\n        };\r\n        getMonthTime = (date) => {\r\n            let time = new Date(date);\r\n            let month = time.getMonth()+1;\r\n            return time.getFullYear()+'-'+month;\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const data = this.props.location.state.data;\r\n            const contentList = {\r\n                tab1: (\r\n                    <Form  {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"姓名\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"身份证号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"性别\">\r\n                        <span className=\"ant-form-text\" style={{textIndent: \"10px\"}}>\r\n                            {\r\n                                this.state.data.gender===0 ? <span><Icon type=\"woman\" /> 女</span> : <span><Icon type=\"man\" /> 男</span>\r\n                            }\r\n                        </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"年龄\">\r\n                            <span className=\"ant-form-text\">{this.state.data.age}岁</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"民族\">\r\n                            <span className=\"ant-form-text\">{this.state.data.nation}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"出生日期\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.birthday)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"籍贯\">\r\n                            <span className=\"ant-form-text\">{this.state.data.origin}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"婚姻状况\">\r\n                            <span className=\"ant-form-text\">{this.state.data.marriage===0 ? \"未婚\" : \"已婚\" }</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"学历\">\r\n                            <span className=\"ant-form-text\">{this.state.data.degree}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业院校\">\r\n                            <span className=\"ant-form-text\">{this.state.data.institution}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"毕业时间\">\r\n                            <span className=\"ant-form-text\">{this.getMonthTime(this.state.data.graduatetime)}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                ),\r\n                tab2: (\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}}>\r\n                        <Form.Item label=\"工号\">\r\n                            <span className=\"ant-form-text\">{this.state.data.workid}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"入职时间\">\r\n                            <span className=\"ant-form-text\">{this.getDateTime(this.state.data.entrytime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"部门\">\r\n                            <span className=\"ant-form-text\">{this.state.data.department}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"职责\">\r\n                            <span className=\"ant-form-text\">{this.state.data.duty}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\">\r\n                            <span className=\"ant-form-text\">\r\n                                {this.state.data.level===0 ? \"初级\" : this.state.data.level===1 ?  \"中级\" : \"高级\"}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Tel\">\r\n                            <span className=\"ant-form-text\">{this.state.data.tel}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"住址\">\r\n                            <span className=\"ant-form-text\">{this.state.data.address}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"月薪\">\r\n                            <span className=\"ant-form-text\">{this.state.data.salary} 元</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"照片\">\r\n                            <span style={{width: \"320px\", marginLeft: \"20px\"}}>\r\n                                {\r\n                                    !this.state.data.profile ? <span>无</span> :\r\n                                        <img src={this.state.data.profile}\r\n                                             alt=\"员工照片\"\r\n                                             style={{\r\n                                                 width: \"100px\",\r\n                                                 height: \"100px\",\r\n                                                 padding: \"7px\",\r\n                                                 marginRight: \"10px\",\r\n                                                 borderRadius: \"5px\",\r\n                                                 border: \"1px solid lightgray\"}}\r\n                                        />\r\n                                }\r\n                            </span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n            };\r\n            const steps = [\r\n                {\r\n                    title: \"填写基本信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                            <Form.Item label=\"姓名\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.name\r\n                                    })(<Input placeholder=\"请输入会员姓名\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"身份证号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('id', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.id\r\n                                    })(<Input placeholder=\"请输入身份证号码\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"性别\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('gender', {\r\n                                        initialValue: data.gender,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={1} style={{margin: \"0 20px\"}}>男</Radio>\r\n                                            <Radio value={0}>女</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"年龄\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('age', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.age\r\n                                    })(<InputNumber style={{width: \"150px\"}} />)\r\n                                }\r\n                                <span className=\"ant-form-text\">岁</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"民族\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('nation', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.nation\r\n                                    })(<Input placeholder=\"请输入民族\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"出生日期\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('birthday', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.birthday), \"YYYYMMDD\")\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"籍贯\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('origin', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.origin\r\n                                    })(<Input placeholder=\"请输入籍贯\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            \r\n                            \r\n                            <Form.Item label=\"婚姻状况\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('marriage', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.marriage\r\n                                    })(\r\n                                        <Radio.Group>\r\n                                            <Radio value={0} style={{margin: \"0 20px\"}}>未婚</Radio>\r\n                                            <Radio value={1}>已婚</Radio>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"学历\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('degree', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.degree\r\n                                    })(\r\n                                        <Select placeholder=\"请选择学历\" style={{width: \"187px\"}}>\r\n                                            <Select.Option value='博士'>博士</Select.Option>\r\n                                            <Select.Option value='硕士'>硕士</Select.Option>\r\n                                            <Select.Option value='本科'>本科</Select.Option>\r\n                                            <Select.Option value='高中'>高中</Select.Option>\r\n                                            <Select.Option value='初中'>初中</Select.Option>\r\n                                            <Select.Option value='小学'>小学</Select.Option>\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业院校\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('institution', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.institution\r\n                                    })(<Input placeholder=\"请输入毕业院校\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"毕业时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('graduatetime', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.graduatetime), \"YYYYMMDD\")\r\n                                    })(<DatePicker.MonthPicker format='YYYY/MM' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\"\r\n                                        style={{margin: \"50px 0 0 450px\"}}\r\n                                        onClick={()=>this.handleNext(0)}>下一步</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"填写工作信息\",\r\n                    content: (\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"工号\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('workid', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.workid\r\n                                    })(<Input placeholder=\"请输入工号\" disabled/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"入职时间\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('entrytime', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: moment(new Date(data.entrytime), \"YYYY/MM/DD\")\r\n                                    })(<DatePicker format='YYYY/MM/DD' />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"部门\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('department', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.department\r\n                                    })(<Input  placeholder=\"请输入工作部门\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"职责\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('duty', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.duty\r\n                                    })(<Input placeholder=\"请输入工作职责\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"等级\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('level', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.level\r\n                                    })(\r\n                                        <Radio.Group buttonStyle=\"solid\">\r\n                                            <Radio.Button value={0}>初 级</Radio.Button>\r\n                                            <Radio.Button value={1}>中 级</Radio.Button>\r\n                                            <Radio.Button value={2}>高 级</Radio.Button>\r\n                                        </Radio.Group>\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('tel', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.tel\r\n                                    })(<Input addonBefore=\"+86\" placeholder=\"请输入联系电话\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"住址\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('address', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.address\r\n                                    })(<Input placeholder=\"请输入住址\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"月薪\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('salary', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.salary\r\n                                    })(<Input addonAfter=\"元\" placeholder=\"请输入月薪\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"照片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('profile', {\r\n                                        rules: [{required: true}],\r\n                                        initialValue: data.profile\r\n                                    })(<PicturesWall imgs={data.profile} />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: data.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input.Group style={{marginLeft: \"410px\"}}>\r\n                                    <Button type=\"primary\" style={{marginRight: \"50px\"}} onClick={()=>this.handlePrevious()}>上一步</Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">完成，确认提交</Button>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    )\r\n                },\r\n                {\r\n                    title: \"提交成功\",\r\n                    content: (\r\n                        <Card\r\n                            style={{ width: \"80%\", margin: \"20px auto\"}}\r\n                            tabList={[{key: 'tab1', tab: '基本信息'}, {key: 'tab2', tab: '工作信息'}]}\r\n                            activeTabKey={this.state.key}\r\n                            onTabChange={key => {\r\n                                this.onTabChange(key);\r\n                            }}\r\n                        >\r\n                            {contentList[this.state.key]}\r\n                        </Card>\r\n                    )\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '员工列表', '编辑员工']} />\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑员工信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/employee')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Steps current={this.state.current} style={{margin: \"40px auto\", width: \"550px\"}}>\r\n                            {\r\n                                steps.map((item, index) =>\r\n                                    <Steps.Step key={index} title={item.title}/>)\r\n                            }\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[this.state.current].content}</div>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditEmployee;","import React from 'react';\r\nimport {Table, Divider, Button, Modal, Icon} from 'antd';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from '../../components/top-nav/index'\r\nimport {reqRoleList, reqUserList, reqRoleDelete} from '../../api/index';\r\n\r\nclass Role extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            viewVisible: false,\r\n            role: {},\r\n        }\r\n    };\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqRoleList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = async (response1) => {\r\n        const response2 = await reqUserList();\r\n        if(response1.status===0 && response2.status===0){\r\n            let data = response1.data.map((item1, index) => {\r\n                item1.index = index;\r\n                response2.data.forEach(item2 => {\r\n                    if(item1.creater === item2.id) item1.creatername = item2.username\r\n                });\r\n                let permission = [\r\n                    {\r\n                        title: \"订单管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"全部订单\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"前台管理\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"商品管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"商品分类\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"商品列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"添加商品\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"库存管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"库存信息\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"库存盘点\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"会员管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"会员列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"新增会员\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"人事管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"员工列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"用户列表\",\r\n                                display: 0\r\n                            },\r\n                            {\r\n                                title: \"角色管理\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"财务管理\",\r\n                        display: 0,\r\n                        children: [\r\n                            {\r\n                                title: \"财务报表\",\r\n                                display: 0\r\n                            }\r\n                        ]\r\n                    }\r\n                ];\r\n                item1.permission.split('-').forEach(item3 => {\r\n                    switch (item3) {\r\n                        case '全部订单':\r\n                            permission[0].display = 1;\r\n                            permission[0].children[0].display = 1;\r\n                            break;\r\n                        case '前台管理':\r\n                            permission[0].display = 1;\r\n                            permission[0].children[1].display = 1;\r\n                            break;\r\n                        case '商品分类':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[0].display = 1;\r\n                            break;\r\n                        case '商品列表':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[1].display = 1;\r\n                            break;\r\n                        case '添加商品':\r\n                            permission[1].display = 1;\r\n                            permission[1].children[2].display = 1;\r\n                            break;\r\n                        case '库存信息':\r\n                            permission[2].display = 1;\r\n                            permission[2].children[0].display = 1;\r\n                            break;\r\n                        case '库存盘点':\r\n                            permission[2].display = 1;\r\n                            permission[2].children[1].display = 1;\r\n                            break;\r\n                        case '会员列表':\r\n                            permission[3].display = 1;\r\n                            permission[3].children[0].display = 1;\r\n                            break;\r\n                        case '新增会员':\r\n                            permission[3].display = 1;\r\n                            permission[3].children[1].display = 1;\r\n                            break;\r\n                        case '员工列表':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[0].display = 1;\r\n                            break;\r\n                        case '用户列表':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[1].display = 1;\r\n                            break;\r\n                        case '角色管理':\r\n                            permission[4].display = 1;\r\n                            permission[4].children[2].display = 1;\r\n                            break;\r\n                        case '财务报表':\r\n                            permission[5].display = 1;\r\n                            permission[5].children[0].display = 1;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                });\r\n                item1.permission = permission;\r\n                return item1\r\n            });\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({isLoading: false, data: data})\r\n            }, 300)\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除角色\\\"\"+record.name+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqRoleDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleView = (record) => {\r\n        this.setState({\r\n            viewVisible: true,\r\n            role: record\r\n        });\r\n    };\r\n    handleAdd = () => {\r\n        this.props.history.push('/role-add')\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/role-edit', state: {data: record}})\r\n    };\r\n    getTime = (time) => {\r\n        let temp = new Date(time);\r\n        let month = temp.getMonth()+1;\r\n        return temp.getFullYear()+\"-\"+month+\"-\"+temp.getDate()+\" \"+temp.getHours()+\":\"+temp.getMinutes()\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => <Button type=\"link\" onClick={()=>this.handleView(record)}>{text}</Button>\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                key: 'son',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTime(text)}</span>\r\n            },\r\n            {\r\n                title: '创建人',\r\n                dataIndex: 'creatername',\r\n                key: 'creatername'\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'note',\r\n                key: 'note'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>编辑</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['人事管理','角色管理']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}>新增角色</Button>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n                {/*查看角色详情*/}\r\n                <Modal\r\n                    title={<span>角色权限-{this.state.role.name}</span>}\r\n                    visible={this.state.viewVisible}\r\n                    onCancel={()=>{this.setState({viewVisible: false})}}\r\n                    footer={\r\n                        [<Button type=\"primary\" key=\"view-ok\" onClick={()=>this.setState({viewVisible: false})}>确认</Button>]\r\n                    }\r\n                >\r\n                    <div style={{marginLeft: \"100px\"}}>\r\n                        {\r\n                            this.state.role.permission ? this.state.role.permission.map((item1, index) => {\r\n                                return (\r\n                                    <div key={index}>\r\n                                        <div><Icon type=\"caret-down\" style={{color: \"#1DA57A\"}}/>{item1.title}</div>\r\n                                        {\r\n                                            item1.children.map((item2, index) => {\r\n                                                return item2.display===1 ? (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"check\" style={{color: \"#1DA57A\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                ) :  (\r\n                                                    <div style={{marginLeft: \"25px\"}} key={index}>\r\n                                                        <Icon type=\"close\" style={{color: \"#fa7f3e\"}}/>&nbsp;{item2.title}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Role;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, Checkbox, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\nimport { reqRoleAdd } from '../../api/index';\r\n\r\nconst AddRole = Form.create({ name: 'role-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: [\r\n                    {\r\n                        title: \"全部订单\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"前台管理\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"商品分类\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"商品列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"添加商品\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"库存信息\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"库存盘点\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"会员列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"新增会员\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"员工列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"用户列表\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"角色管理\",\r\n                        display: 0\r\n                    },\r\n                    {\r\n                        title: \"财务报表\",\r\n                        display: 0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let arr = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.display===1 ? arr.push(item.title) : arr.push();\r\n                    });\r\n                    let data=values;\r\n                    data.createtime = new Date().getTime();\r\n                    data.creater = memoryUtils.user.id;\r\n                    data.permission = arr.join('-');\r\n                    const response = await reqRoleAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增角色成功, 即将返回角色管理列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/role')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        handleChange = (e, temp) => {\r\n            let data = this.state.data;\r\n            if(typeof(temp)===\"object\"){\r\n                if(e.target.checked){\r\n                    temp.forEach(item => {\r\n                        data[item].display = 1\r\n                    })\r\n                }else{\r\n                    temp.forEach(item => {\r\n                        data[item].display = 0\r\n                    })\r\n                }\r\n            }else{\r\n                data[temp].display = 1 - data[temp].display\r\n            }\r\n            this.setState({data: data})\r\n        };\r\n        getTime = () => {\r\n            let temp = new Date();\r\n            let month = temp.getMonth()+1;\r\n            return temp.getFullYear()+\"-\"+month+\"-\"+temp.getDate()+\" \"+temp.getHours()+\":\"+temp.getMinutes()\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '角色管理', '新增角色']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增角色信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/role')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"创建时间：\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTime()\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建人：\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: memoryUtils.user.username\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色名：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"权限：\">\r\n                                {form.getFieldDecorator('permission', {\r\n                                    initialValue: \"perimission\",\r\n                                    rules: [{required: true}]\r\n                                })(<Input style={{display: \"none\"}} />)}\r\n                            </Form.Item>\r\n                            <div style={{margin: \"-53px 0 40px 340px\"}}>\r\n                                {/*订单管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [0, 1])}>订单管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 0)}\r\n                                        checked={this.state.data[0].display===1}\r\n                                    >全部订单</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 1)}\r\n                                        checked={this.state.data[1].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >前台订单</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [2, 3, 4])}>商品管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 2)}\r\n                                        checked={this.state.data[2].display===1}\r\n                                    >商品分类</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 3)}\r\n                                        checked={this.state.data[3].display===1}\r\n                                    >商品列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 4)}\r\n                                        checked={this.state.data[4].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >添加商品</Checkbox><br/>\r\n                                </div>\r\n                                {/*库存管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [5, 6])}>库存管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 5)}\r\n                                        checked={this.state.data[5].display===1}\r\n                                    >库存信息</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 6)}\r\n                                        checked={this.state.data[6].display===1}\r\n                                    >库存盘点</Checkbox><br/>\r\n                                </div>\r\n                                {/*会员管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [7, 8])}>会员管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 7)}\r\n                                        checked={this.state.data[7].display===1}\r\n                                    >会员列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 8)}\r\n                                        checked={this.state.data[8].display===1}\r\n                                    >新增会员</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [9, 10, 11])}>人事管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 9)}\r\n                                        checked={this.state.data[9].display===1}\r\n                                    >员工列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 10)}\r\n                                        checked={this.state.data[10].display===1}\r\n                                    >用户列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 11)}\r\n                                        checked={this.state.data[11].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >角色管理</Checkbox><br/>\r\n                                </div>\r\n                                {/*财务管理*/}\r\n                                <Checkbox onChange={(e)=>this.handleChange(e, [12])}>财务管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 12)}\r\n                                        checked={this.state.data[12].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >财务报表</Checkbox><br/>\r\n                                </div>\r\n                            </div>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddRole;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, Checkbox, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport { reqRoleUpdate } from '../../api/index';\r\n\r\nconst EditRole = Form.create({ name: 'role-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = () => {\r\n            let data = this.props.location.state.data;\r\n            let permission = [];\r\n            data.permission.forEach(item => {\r\n                permission = permission.concat(item.children)\r\n            });\r\n            data.permission = permission;\r\n            this.setState({data: data.permission});\r\n        };\r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let arr = [];\r\n                    this.state.data.forEach(item => {\r\n                        item.display===1 ? arr.push(item.title) : arr.push();\r\n                    });\r\n                    let data=values;\r\n                    data.permission = arr.join('-');\r\n                    data.creater = this.props.location.state.data.creater;\r\n                    const response = await reqRoleUpdate(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增角色成功, 即将返回角色管理列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/role')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        handleChange = (e, temp) => {\r\n            let data = this.state.data;\r\n            if(typeof(temp)===\"object\"){\r\n                if(e.target.checked){\r\n                    temp.forEach(item => {\r\n                        data[item].display = 1\r\n                    })\r\n                }else{\r\n                    temp.forEach(item => {\r\n                        data[item].display = 0\r\n                    })\r\n                }\r\n            }else{\r\n                data[temp].display = 1 - data[temp].display\r\n            }\r\n            this.setState({data: data})\r\n        };\r\n        getTime = () => {\r\n            let temp = new Date();\r\n            let month = temp.getMonth()+1;\r\n            return temp.getFullYear()+\"-\"+month+\"-\"+temp.getDate()+\" \"+temp.getHours()+\":\"+temp.getMinutes()\r\n        };\r\n        getFatherChecked = (arr) => {\r\n            let checked = true;\r\n            arr.forEach(item => {\r\n                if(this.state.data[item].display === 0) checked = false\r\n            });\r\n            return checked\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            let data = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理', '角色管理', '编辑角色']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增角色信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/role')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\r\n                                {form.getFieldDecorator('id', {\r\n                                    initialValue: data.id\r\n                                })(<Input/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建时间：\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: data.createtime\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"创建人：\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: data.creatername\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色名：\">\r\n                                {form.getFieldDecorator('name', {\r\n                                    rules: [{required: true, validator: this.validateName }],\r\n                                    initialValue: data.name\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"权限：\">\r\n                                {form.getFieldDecorator('permission', {\r\n                                    initialValue: \"perimission\",\r\n                                    rules: [{required: true}]\r\n                                })(<Input style={{display: \"none\"}} />)}\r\n                            </Form.Item>\r\n                            <div style={{margin: \"-53px 0 40px 340px\"}}>\r\n                                {/*订单管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [0, 1])}\r\n                                    defaultChecked={this.getFatherChecked([0, 1])}\r\n                                >订单管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 0)}\r\n                                        checked={this.state.data[0].display===1}\r\n                                    >全部订单</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 1)}\r\n                                        checked={this.state.data[1].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >前台订单</Checkbox><br/>\r\n                                </div>\r\n                                {/*商品管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [2, 3, 4])}\r\n                                    defaultChecked={this.getFatherChecked([2, 3, 4])}\r\n                                >商品管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 2)}\r\n                                        checked={this.state.data[2].display===1}\r\n                                    >商品分类</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 3)}\r\n                                        checked={this.state.data[3].display===1}\r\n                                    >商品列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 4)}\r\n                                        checked={this.state.data[4].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >添加商品</Checkbox><br/>\r\n                                </div>\r\n                                {/*库存管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [5, 6])}\r\n                                    defaultChecked={this.getFatherChecked([5, 6])}\r\n                                >库存管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 5)}\r\n                                        checked={this.state.data[5].display===1}\r\n                                    >库存信息</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 6)}\r\n                                        checked={this.state.data[6].display===1}\r\n                                    >库存盘点</Checkbox><br/>\r\n                                </div>\r\n                                {/*会员管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [7, 8])}\r\n                                    defaultChecked={this.getFatherChecked([7, 8])}\r\n                                >会员管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 7)}\r\n                                        checked={this.state.data[7].display===1}\r\n                                    >会员列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 8)}\r\n                                        checked={this.state.data[8].display===1}\r\n                                    >新增会员</Checkbox><br/>\r\n                                </div>\r\n                                {/*人事管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [9, 10, 11])}\r\n                                    defaultChecked={this.getFatherChecked([9, 10, 11])}\r\n                                >人事管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 9)}\r\n                                        checked={this.state.data[9].display===1}\r\n                                    >员工列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 10)}\r\n                                        checked={this.state.data[10].display===1}\r\n                                    >用户列表</Checkbox><br/>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 11)}\r\n                                        checked={this.state.data[11].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >角色管理</Checkbox><br/>\r\n                                </div>\r\n                                {/*财务管理*/}\r\n                                <Checkbox\r\n                                    onChange={(e)=>this.handleChange(e, [12])}\r\n                                    defaultChecked={this.getFatherChecked([12])}\r\n                                >财务管理</Checkbox>\r\n                                <div style={{marginLeft: \"30px\"}}>\r\n                                    <Checkbox\r\n                                        onChange={(e)=>this.handleChange(e, 12)}\r\n                                        checked={this.state.data[12].display===1}\r\n                                        style={{marginBottom: \"10px\"}}\r\n                                    >财务报表</Checkbox><br/>\r\n                                </div>\r\n                            </div>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditRole;","import React from 'react';\r\nimport {Table, Divider, Button, Modal, Icon} from 'antd';\r\nimport Loading from '../../components/loading/index';\r\nimport TopNav from '../../components/top-nav/index'\r\nimport {reqUserList, reqUserDelete, reqRoleList} from '../../api/index';\r\n\r\nclass User extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            viewVisible: false,\r\n            editVisible: false,\r\n        }\r\n    };\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response=await reqUserList();\r\n        this.refreshTable(response);\r\n    };\r\n    refreshTable  = async (response1) => {\r\n        const response2 = await reqRoleList();\r\n        if(response1.status===0 && response2.status===0){\r\n            this.setState({isLoading: true});\r\n            this.timerID = setTimeout(() => {\r\n                let data = response1.data.map((item1, index) => {\r\n                    item1.index = index;\r\n                    response2.data.forEach(item2 => {\r\n                        if(item1.role === item2.id){\r\n                            item1.rolename = item2.name;\r\n                        }\r\n                    });\r\n                    return item1\r\n                });\r\n                this.setState({isLoading: false, data: data})\r\n            }, 300)\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content:  \"确定要删除角色\\\"\"+record.username+\"\\\"吗？\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqUserDelete(record.id);\r\n                if(response.status === 0){\r\n                    let data=[];\r\n                    this.state.data.forEach(item => {\r\n                        item.id===record.id ? data.push() : data.push(item)\r\n                    });\r\n                    this.setState({\r\n                        data: data\r\n                    })\r\n                }\r\n            },\r\n            cancelText: '取消',\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n    handleAdd = () => {this.props.history.push('/user-add')};\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/user-edit', state: {data: record}})\r\n    };\r\n    getTime = (time) => {\r\n        let temp = new Date(time);\r\n        let month = temp.getMonth()+1;\r\n        return temp.getFullYear()+\"-\"+month+\"-\"+temp.getDate()+\" \"+temp.getHours()+\":\"+temp.getMinutes()\r\n    };\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record) => <span>{record.index+1}</span>\r\n            },\r\n            {\r\n                title: '用户名称',\r\n                dataIndex: 'username',\r\n                key: 'username',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                key: 'son',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{this.getTime(text)}</span>\r\n            },\r\n            {\r\n                title: '角色',\r\n                dataIndex: 'rolename',\r\n                key: 'rolename'\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'tel',\r\n                key: 'tel',\r\n                render: (text) => <span><Icon type=\"phone\" /> +86 {text}</span>\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n                key: 'email'\r\n            },\r\n            {\r\n                title: '密码',\r\n                dataIndex: 'password',\r\n                key: 'password'\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'note',\r\n                key: 'note'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (record) => (\r\n                    <span>\r\n                    <Button size=\"small\"  onClick={()=>this.handleEdit(record)}>设置</Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"category-container\">\r\n                <TopNav nav={['人事管理','用户列表']}/>\r\n                <div style={{margin: \"20px 22px 0 20px\"}}>\r\n                    <Button type=\"primary\" onClick={this.handleAdd}>创建用户</Button>\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table\r\n                            style={{margin: \"20px\"}}\r\n                            size=\"small\"\r\n                            columns={columns}\r\n                            dataSource={this.state.data}\r\n                            rowKey={record => record.id}\r\n                            bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqRoleList, reqUserAdd} from \"../../api\";\r\n\r\nconst AddUser = Form.create({ name: 'user-add' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                options: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqRoleList();\r\n            if(response.status === 0){\r\n                let options = [];\r\n                response.data.forEach(item => {\r\n                    options.push({key: item.id, value: item.name})\r\n                });\r\n                this.setState({options: options});\r\n            }\r\n        };\r\n        \r\n        validateName = (rule, value, callback) =>{\r\n            if(!value){\r\n                callback(\"请输入品类名称\")\r\n            }else if(value.length>10){\r\n                callback(\"请输入少于10个字符\")\r\n            }else{\r\n                callback()\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.createtime = new Date().getTime();\r\n                    console.log(values);\r\n                    const response = await reqUserAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增成功,即将返回用户列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/user')\r\n                        }, 2000);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理','用户列表','创建用户']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增用户信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/user')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"用户名：\">\r\n                                {form.getFieldDecorator('username', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户名\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码：\">\r\n                                {form.getFieldDecorator('password', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户密码\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色：\">\r\n                                {form.getFieldDecorator('role', {\r\n                                    rules: [{required: true}]\r\n                                })(\r\n                                    <Select placeholder=\"请选择角色\">\r\n                                        {\r\n                                            this.state.options.map((item) => {\r\n                                                return <Select.Option key={item.key}>{item.value}</Select.Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel：\">\r\n                                {form.getFieldDecorator('tel', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入电话号码\" addonBefore=\"+86\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"邮箱：\">\r\n                                {form.getFieldDecorator('email', {\r\n                                    rules: [{required: true}],\r\n                                })(<Input placeholder=\"请输入用户邮箱\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, Card, Button, message, Select} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqRoleList, reqUserUpdate} from \"../../api\";\r\n\r\nconst EditUser = Form.create({ name: 'user-edit' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: {},\r\n                options: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqRoleList();\r\n            if(response.status === 0){\r\n                let options = [];\r\n                let data = this.props.location.state.data;\r\n                response.data.forEach(item => {\r\n                    options.push({key: item.id, value: item.name});\r\n                    if(data.role === item.id){\r\n                        data.rolename = item.name\r\n                    }\r\n                });\r\n                this.setState({\r\n                    options: options,\r\n                    data: data\r\n                });\r\n            }\r\n        };\r\n        componentWillUnmount = () => {\r\n            clearTimeout(this.timerID)\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data=values;\r\n                    data.createtime = new Date().getTime();\r\n                    this.state.options.forEach(item => {\r\n                        if(item.value === data.role) data.role = item.key;\r\n                    });\r\n                    const response = await reqUserUpdate(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"更新成功,即将返回用户列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/user')\r\n                        }, 1500);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['人事管理','用户列表','编辑用户']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑用户信息</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/user')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"ID：\" style={{display: \"none\"}}>\r\n                                {form.getFieldDecorator('id', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.id\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"用户名：\">\r\n                                {form.getFieldDecorator('username', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.username\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码：\">\r\n                                {form.getFieldDecorator('password', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.password\r\n                                })(<Input />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"角色：\">\r\n                                {form.getFieldDecorator('role', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.rolename,\r\n                                })(\r\n                                    <Select>\r\n                                        {\r\n                                            this.state.options.map((item) => {\r\n                                                return <Select.Option key={item.key}>{item.value}</Select.Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Tel：\">\r\n                                {form.getFieldDecorator('tel', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.tel\r\n                                })(<Input addonBefore=\"+86\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"邮箱：\">\r\n                                {form.getFieldDecorator('email', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.data.email\r\n                                })(<Input placeholder=\"请输入用户邮箱\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注：\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: this.state.data.note\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default EditUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './stock.less';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport Loading from '../../components/loading/index';\r\nimport {Button, Table, Divider, Tag, Modal, Input, Icon} from 'antd';\r\nimport {\r\n    reqStockList,\r\n    reqStockCategory,\r\n    reqStockDelete,\r\n    reqStockSearch,\r\n    reqStocklogList,\r\n    addStocklogList\r\n} from '../../api/index';\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nclass Stock extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            isLoading: true,\r\n            data: [],\r\n            category: [],\r\n            options: []\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqStockList();\r\n        this.refreshTable(response);\r\n    };\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.timerID)\r\n    };\r\n    refreshTable = async (response1) => {\r\n        const response2 = await reqStocklogList();\r\n        const response3 = await reqStockCategory();\r\n        if(response1.status === 0 && response2.status === 0 && response3.status === 0){\r\n            let data = response1.data;\r\n            data = data.map(item1 => {\r\n                item1.state = item1.amount>item1.excess ? 2 : item1.amount<item1.warning ? 1 : 0;\r\n                item1.log = [];\r\n                response2.data.forEach(item2 => {\r\n                    if(item2.stockid === item1.id){\r\n                        item1.log.push(item2)\r\n                    }\r\n                });\r\n                item1.manager = item1.log[item1.log.length-1].manager;\r\n                let time = item1.log[item1.log.length-1].time;\r\n                time = new Date(time);\r\n                item1.fullTime = time;\r\n                item1.time = time.getMonth()+1+\"-\"+time.getDate()+\" \"+time.getHours()+\":\"+time.getMinutes();\r\n                item1.pictures = item1.pictures.split(',');\r\n                return item1\r\n            });\r\n            let category = [];\r\n            let options = [];\r\n            response3.data.forEach(item => {\r\n                category.push({text: item.category, value: item.category});\r\n                options.push({label: item.category, value: item.category})\r\n            });\r\n            this.setState({\r\n                category: category,\r\n                options: options,\r\n                isLoading: true\r\n            });\r\n            this.timerID = setTimeout(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    data: data\r\n                })}, 300)\r\n        }\r\n    };\r\n    handleDelete = (record) => {\r\n        Modal.confirm({\r\n            title: '警告',\r\n            content: \"确定要删除库存记录\\\"\"+record.name+\"\\\"吗\",\r\n            okText: '确认',\r\n            onOk: async () => {\r\n                const response = await reqStockDelete(record.id);\r\n                if(response.status === 0){\r\n                    console.log(record);\r\n                    let log = {...record};\r\n                    log.stockid = log.id;\r\n                    log.stockname =log.name;\r\n                    log.manager = memoryUtils.user.username;\r\n                    log.time = new Date().getTime();\r\n                    log.operation = \"删除\";\r\n                    log.pictures = log.pictures.join(',');\r\n                    delete log.state;\r\n                    delete log.log;\r\n                    delete log.name;\r\n                    delete log.id;\r\n                    console.log(log);\r\n                    let response2 = await addStocklogList(log);\r\n                    if(response2.status === 0){\r\n                        const response = await reqStockList();\r\n                        this.refreshTable(response)\r\n                    }\r\n                }\r\n            },\r\n            cancelText: \"取消\",\r\n            onCancel: ()=>{}\r\n        })\r\n    };\r\n    handleEdit = (record) => {\r\n        this.props.history.push({pathname: '/stock-edit', state: {data: record}} )\r\n    };\r\n    handleSearch = async (name) => {\r\n        const response = name===\"\" ? await reqStockList() : await reqStockSearch(name);\r\n        this.refreshTable(response);\r\n    };\r\n    handleView = (record) => {\r\n        this.props.history.push({pathname: '/stock-view', state: {data: record}});\r\n    };\r\n    render(){\r\n        const state = [{text: \"正常\", value: 0},{text: \"告罄\", value: 1},{text: \"过剩\", value: 2}];\r\n        const columns = [\r\n            {\r\n                title: '编号',\r\n                key: 'index',\r\n                render: (text, record, index) => <span>{index+1}</span>\r\n            },\r\n            {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button type=\"link\" onClick={()=>this.handleView(record)}>\r\n                            {text}&nbsp;\r\n                            {record.amount<record.warning ? <Tag size=\"small\" color=\"red\">告罄</Tag> : null}\r\n                            {record.amount>record.excess ? <Tag size=\"small\" color=\"green\">过剩</Tag> : null}\r\n                        </Button>\r\n                    </span>\r\n                )\r\n            },\r\n            {\r\n                title: '类型',\r\n                dataIndex: 'category',\r\n                key: 'category',\r\n                filters: this.state.category,\r\n                onFilter: (value, record) => value===record.category\r\n            },\r\n            {\r\n                title: '单价',\r\n                dataIndex: 'price',\r\n                key: 'price',\r\n                render: (text) => <span>￥{text}</span>,\r\n                sorter: (a, b) => a.price-b.price\r\n            },\r\n            {\r\n                title: '库存量',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n                sorter: (a, b) => a.amount - b.amount,\r\n                filters: state,\r\n                onFilter: (value, record) => value===record.state\r\n            },\r\n            {\r\n                title: '单位',\r\n                dataIndex: 'unit',\r\n                key: 'unit',\r\n            },\r\n            {\r\n                title: '最近更新',\r\n                dataIndex: 'time',\r\n                key: 'time',\r\n                render: (text) => <span><Icon type=\"clock-circle\" />&nbsp;{text}</span>,\r\n                sorter: (a, b) => a.fullTime - b.fullTime\r\n            },\r\n            {\r\n                title: '操作人',\r\n                dataIndex: 'manager',\r\n                key: 'manager'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <div>\r\n                        <Button size=\"small\" type=\"primary\" onClick={()=>{this.handleEdit(record)}}>编辑</Button>\r\n                        <Divider type=\"vertical\" />\r\n                        <Button size=\"small\" type=\"danger\" onClick={()=>{this.handleDelete(record)}}>删除</Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"stock-container\">\r\n                <TopNav nav={['库存管理', '库存信息']}/>\r\n                <div className=\"stock-header\">\r\n                    <Button type=\"primary\"\r\n                            style={{marginRight: \"40px\"}}\r\n                            onClick={()=>{this.props.history.push('/stock-add')}}>新增库存</Button>\r\n                    <Button type=\"primary\" onClick={()=>this.props.history.push('/stock-log')}>仓库日志</Button>\r\n                    <Input.Search\r\n                        style={{width: \"200px\", float: \"Right\"}}\r\n                        placeholder=\"查询库存信息\"\r\n                        onSearch={(value) => this.handleSearch(value)}\r\n                        enterButton\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isLoading ? <Loading /> :\r\n                        <Table size=\"small\"\r\n                               style={{margin: \"20px\"}}\r\n                               columns={columns}\r\n                               dataSource={this.state.data}\r\n                               rowKey = {record => record.id}\r\n                               bordered\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stock\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Card, Input, Button, Select, InputNumber, Modal, message} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport PictureWall from \"../../components/picture-wall/picture-wall\";\r\nimport {reqStockCategory, addStocklogList, addStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst AddStock = Form.create({name: 'add-stock-form'})(\r\n    class extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                category: [],\r\n                categoryAdd: \"\",\r\n                visible: false\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockCategory();\r\n            if(response.status === 0){\r\n                let category = [];\r\n                response.data.forEach(item => {\r\n                    category.push(item.category)\r\n                });\r\n                this.setState({category: category})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data = values;\r\n                    let response1 = await addStockList(data);\r\n                    if(response1.status===0){\r\n                        let log = {...data};\r\n                        log.stockname = log.name;\r\n                        log.manager = memoryUtils.user.username;\r\n                        log.operation = \"新增\";\r\n                        log.time = new Date().getTime();\r\n                        log.stockid = response1.data.insertId;\r\n                        delete log.name;\r\n                        let response2 = await addStocklogList(log);\r\n                        if(response2.status === 0){\r\n                            message.success(\"更新成功,即将返回商品列表\", 2);\r\n                            this.timerID = setTimeout(()=>{\r\n                                this.props.history.push('/stock')\r\n                            }, 2000);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        handleAddClick = () => {\r\n            this.setState({visible: true})\r\n        };\r\n        handleNameChange = (e) => {\r\n            this.setState({categoryAdd: e.target.value})\r\n        };\r\n        onOk = () => {\r\n            let category = this.state.category;\r\n            category.push(this.state.categoryAdd);\r\n            this.setState({\r\n                category: category,\r\n                visible: false\r\n            })\r\n        };\r\n        onCancel = () => {\r\n            this.setState({visible: false})\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存信息', '新增库存']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新增库存记录</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"货物名称\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物名称\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"货物种类\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('category', {\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select style={{width: \"75%\"}} placeholder=\"请选择货物品类\">\r\n                                            {this.state.category.map(item => (\r\n                                                <Select.Option key={item}>{item}</Select.Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    <div style={{display: \"inline-block\", float: \"right\"}}>\r\n                                        <Button type=\"primary\"\r\n                                                onClick={this.handleAddClick}>新增品类</Button>\r\n                                        <Modal\r\n                                            title=\"新增品类\"\r\n                                            visible={this.state.visible}\r\n                                            okText=\"确认\"\r\n                                            onOk={this.onOk}\r\n                                            cancelText=\"取消\"\r\n                                            onCancel={this.onCancel}\r\n                                        >\r\n                                            <Input placeholder=\"请输入品类名称\" onChange={this.handleNameChange}/>\r\n                                        </Modal>\r\n                                    </div>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单价\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('price', {\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber />)\r\n                                }\r\n                                <span style={{marginLeft: \"10px\"}}>元</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存数量\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('amount', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入库存数量\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单位\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('unit', {\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物单位\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存监控\">\r\n                                <Input.Group compact>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('excess', {\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"下限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                    <span style={{margin: \"8px 20px 0 20px\"}}>~</span>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('warning', {\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"上限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"图片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('pictures', {\r\n                                        rules: [{required: true, message: \"请上传商品图片\"}]\r\n                                    })(<PictureWall />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: \"\"\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入库存备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default AddStock;","import React from 'react';\r\nimport { Form, Tag, Modal, Row, Col } from 'antd';\r\n\r\nclass StocklogView extends React.Component {\r\n    render() {\r\n        return (\r\n            <Modal\r\n                visible={this.props.visible}\r\n                title={<span style={{color: \"#1DA57A\"}}>日志详情</span>}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                onOk={this.props.onOk}\r\n                onCancel={this.props.onCancel}\r\n                footer={null}\r\n            >\r\n                <Row>\r\n                    <Col span={7} style={{textAlign: \"right\"}}>\r\n                        <Form.Item>货物名称：</Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item>{this.props.info.stockname}</Form.Item>\r\n                    </Col>\r\n                    <Col span={4} style={{textAlign: \"right\"}}>\r\n                        <Form.Item>货物种类：</Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item>{this.props.info.category}</Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={7} style={{textAlign: \"right\"}}>\r\n                        <Form.Item>货物数量：</Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item>{this.props.info.amount}</Form.Item>\r\n                    </Col>\r\n                    <Col span={4} style={{textAlign: \"right\"}}>\r\n                        <Form.Item>货物单位：</Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item>{this.props.info.unit}</Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={7} style={{textAlign: \"right\"}}>\r\n                        <Form.Item>库存状态：</Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item>\r\n                            {this.props.info.state===0 ? <Tag size=\"small\" color=\"blue\">正常</Tag> :\r\n                                this.props.info.state===1 ? <Tag size=\"small\" color=\"red\">告罄</Tag> :\r\n                                    <Tag size=\"small\" color=\"green\">过剩</Tag>}\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={4} style={{textAlign: \"right\"}}>\r\n                        <Form.Item>库存监控：</Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item>\r\n                            上限:{this.props.info.excess}&nbsp;&nbsp;\r\n                            下限:{this.props.info.warning}\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <Form.Item style={{paddingLeft: \"67px\"}}>图片：</Form.Item>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        {\r\n                            String(this.props.info.pictures).split(',').map((item, index) => {\r\n                                return item===\"\" ? null : <img\r\n                                    key={index} src={item} alt=\"货物图片\"\r\n                                    style={{\r\n                                        width: \"80px\",\r\n                                        height: \"80px\",\r\n                                        padding: \"5px\",\r\n                                        marginRight: \"10px\",\r\n                                        borderRadius: \"5px\",\r\n                                        border: \"1px solid lightgray\"\r\n                                    }}\r\n                                />\r\n                            })\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <Form.Item style={{paddingLeft: \"67px\"}}>备注：</Form.Item>\r\n                    </Col>\r\n                    <Col span={16}>\r\n                        <Form.Item>{this.props.info.note}</Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StocklogView;\r\n\r\n","import React from 'react';\r\nimport {Button, Card, Col, DatePicker, List, Row, Select} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport StocklogView from './stock-log-view';\r\nimport moment from \"moment\";\r\nimport {reqStocklogList} from \"../../api\";\r\n\r\nclass StockLog extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            data: [],\r\n            log: [],\r\n            option: 0,\r\n            visible: false,\r\n            logInfo: {},\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = async () => {\r\n        const response = await reqStocklogList();\r\n        if(response.status === 0){\r\n            let data = response.data.reverse();\r\n            this.setState({\r\n                data: data,\r\n                log: data\r\n            })\r\n        }\r\n    };\r\n    handleSelectChange = (value) => {\r\n        if(value === 0){\r\n            this.setState({log: this.state.data})\r\n        }\r\n        this.setState({option: value})\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleDatePickerChange = (date, dateString) => {\r\n        let start = new Date(dateString+\" 00:00:00\").getTime();\r\n        let end = new Date(dateString+\" 23:59:59\").getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleWeekPickerChange = (week) => {\r\n        let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n        let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleMonthPickerChange = (month) => {\r\n        let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleRangePickerChange = (dates, dateStrings) => {\r\n        let start = new Date(dateStrings[0]).getTime();\r\n        let end = new Date(dateStrings[1]).getTime();\r\n        let log = this.state.data.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    getTime = (time) => {\r\n        time = new Date(Number(time));\r\n        let month = time.getMonth()+1;\r\n        return time.getFullYear()+\"-\"+month+\"-\"+time.getDate()+\"\\xa0\\xa0\"+time.getHours()+\":\"+time.getMinutes();\r\n    };\r\n    handleDetail = (data) => {\r\n        this.setState({\r\n            visible: true,\r\n            logInfo: data\r\n        })\r\n    };\r\n    onOk = () =>{\r\n        this.setState({visible: false})\r\n    };\r\n    render(){\r\n        let header = (\r\n            <div>\r\n                <Row>\r\n                    <Col span={6}> </Col>\r\n                    <Col span={18} style={{textAlign: \"right\"}}>\r\n                        { this.state.option===0 ? null : this.getTimePicker()}\r\n                        <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                                style={{width: \"115px\", marginLeft: \"10px\"}}>\r\n                            <Select.Option value={0}>按顺序查看</Select.Option>\r\n                            <Select.Option value={1}>按日期查看</Select.Option>\r\n                            <Select.Option value={2}>按周次查看</Select.Option>\r\n                            <Select.Option value={3}>按月份查看</Select.Option>\r\n                            <Select.Option value={4}>自定义区间</Select.Option>\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n        return (\r\n            <div>\r\n                <TopNav nav={['库存管理','库存信息','库存日志']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看库存日志</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>this.props.history.push('/stock')}>返回</Button>}\r\n                      style={{ border: \"none\", width: \"100%\"}}\r\n                >\r\n                    <List style={{margin: \"20px 200px\"}}\r\n                          size=\"small\"\r\n                          header={header}\r\n                          dataSource={this.state.log}\r\n                          pagination={{pageSize: 10}}\r\n                          renderItem={item =>\r\n                              <List.Item>\r\n                                  <span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>\r\n                                      {this.getTime(item.time)}\r\n                                  </span>\r\n                                  <span style={{color: \"#1DA57A\", marginLeft: \"20px\"}}>\r\n                                      {item.manager}\r\n                                  </span>\r\n                                  <span>\r\n                                      对“{item.stockname}”的库存信息进行了{item.operation}\r\n                                  </span>\r\n                                  <Button type=\"link\"\r\n                                          style={{marginLeft: \"30px\"}}\r\n                                          onClick={()=>this.handleDetail(item)}\r\n                                  >详情</Button>\r\n                              </List.Item>\r\n                          }\r\n                          bordered\r\n                    />\r\n                    <StocklogView visible={this.state.visible}\r\n                                  info={this.state.logInfo}\r\n                                  onCancel={this.onOk}\r\n                                  onOk={this.onOk}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StockLog;","import React from 'react';\r\nimport { Form, Card, Button, Tag, List, Select, DatePicker, Row, Col } from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport StocklogView from './stock-log-view';\r\nimport moment from \"moment\";\r\n\r\nclass ViewStock extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            data: [],\r\n            log: [],\r\n            option: 0,\r\n            visible: false,\r\n            logInfo: {}\r\n        })\r\n    }\r\n    UNSAFE_componentWillMount = () => {\r\n        const data = this.props.location.state.data;\r\n        this.setState({\r\n            data: data,\r\n            log: data.log\r\n        });\r\n    };\r\n    handleSelectChange = (value) => {\r\n        if(value === 0){\r\n            this.setState({log: this.state.data.log})\r\n        }\r\n        this.setState({option: value})\r\n    };\r\n    getTimePicker = () => {\r\n        if(this.state.option===1){\r\n            return (\r\n                <DatePicker\r\n                    placeholder=\"请选择日期\"\r\n                    onChange={this.handleDatePickerChange}\r\n                />\r\n            )\r\n        }else if(this.state.option===2){\r\n            return (\r\n                <DatePicker.WeekPicker\r\n                    placeholder=\"请选择周次\"\r\n                    onChange={this.handleWeekPickerChange}\r\n                    format=\"YYYY-WW\"\r\n                />\r\n            )\r\n        }else if(this.state.option===3){\r\n            return (\r\n                <DatePicker.MonthPicker\r\n                    placeholder=\"请选择月份\"\r\n                    onChange={this.handleMonthPickerChange}\r\n                    format=\"YYYY-MM\"\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <DatePicker.RangePicker\r\n                    placeholder={[\"开始日期\",\"结束日期\"]}\r\n                    onChange={this.handleRangePickerChange}\r\n                    style={{width: \"220px\", textAlign: \"left\"}}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    handleDatePickerChange = (date, dateString) => {\r\n        let start = new Date(dateString+\" 00:00:00\").getTime();\r\n        let end = new Date(dateString+\" 23:59:59\").getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleWeekPickerChange = (week) => {\r\n        let start = moment(week).day(0).format('YYYY/MM/DD')+\" 00:00:00\";\r\n        let end = moment(week).day(6).format('YYYY/MM/DD')+\" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleMonthPickerChange = (month) => {\r\n        let start = moment(month).startOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        let end = moment(month).endOf('month').format('YYYY-MM-DD') + \" 23:59:59\";\r\n        start = new Date(start).getTime();\r\n        end = new Date(end).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    handleRangePickerChange = (dates, dateStrings) => {\r\n        let start = new Date(dateStrings[0]).getTime();\r\n        let end = new Date(dateStrings[1]).getTime();\r\n        let log = this.state.data.log.filter(item => {\r\n            return item.time>=start && item.time<=end\r\n        });\r\n        this.setState({log: log})\r\n    };\r\n    getTime = (time) => {\r\n        time = new Date(Number(time));\r\n        let month = time.getMonth()+1;\r\n        return time.getFullYear()+\"-\"+month+\"-\"+time.getDate()+\"\\xa0\\xa0\"+time.getHours()+\":\"+time.getMinutes();\r\n    };\r\n    handleDetail = (data) => {\r\n        this.setState({\r\n            visible: true,\r\n            logInfo: data\r\n        })\r\n    };\r\n    onOk = () =>{\r\n        this.setState({visible: false})\r\n    };\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        let header = (\r\n            <div>\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <span style={{color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"18px\"}}>库存日志</span>\r\n                    </Col>\r\n                    <Col span={18} style={{textAlign: \"right\"}}>\r\n                        { this.state.option===0 ? null : this.getTimePicker()}\r\n                        <Select defaultValue=\"按顺序查看\" onChange={(value)=>this.handleSelectChange(value)}\r\n                                style={{width: \"115px\", marginLeft: \"10px\"}}>\r\n                            <Select.Option value={0}>按顺序查看</Select.Option>\r\n                            <Select.Option value={1}>按日期查看</Select.Option>\r\n                            <Select.Option value={2}>按周次查看</Select.Option>\r\n                            <Select.Option value={3}>按月份查看</Select.Option>\r\n                            <Select.Option value={4}>自定义区间</Select.Option>\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"stock-view-container\">\r\n                <TopNav nav={['库存管理', '库存信息', '货物详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看货物详情</span>}\r\n                      extra={<Button onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\"}}>\r\n                        <Form.Item label=\"货物名称\">\r\n                            <span className=\"ant-form-text\">{this.state.data.name}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"货物种类\">\r\n                            <span className=\"ant-form-text\">{this.state.data.category}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"单价\">\r\n                            <span className=\"ant-form-text\">￥{this.state.data.price}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存数量\">\r\n                            <span className=\"ant-form-text\">{this.state.data.amount}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存单位\">\r\n                            <span className=\"ant-form-text\">{this.state.data.unit}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存状态\">\r\n                            <span style={{marginLeft: \"20px\"}}>\r\n                                {this.state.data.state===0 ? <Tag size=\"small\" color=\"blue\">正常</Tag> :\r\n                                    this.state.data.state===1 ? <Tag size=\"small\" color=\"red\">告罄</Tag> :\r\n                                        <Tag size=\"small\" color=\"green\">过剩</Tag>}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"库存监控\">\r\n                            <span className=\"ant-form-text\">\r\n                                上限：{this.state.data.excess}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                下限：{this.state.data.warning}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"图片\">\r\n                                <span className=\"ant-form-pictures\">\r\n                                    {\r\n                                        this.state.data.pictures.map((item, index) => {\r\n                                            return item===\"\" ? null : <img key={index} src={item} alt=\"货物图片\"/>\r\n                                        })\r\n                                    }\r\n                                </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{this.state.data.note}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <List style={{margin: \"30px 220px\"}}\r\n                          size=\"small\"\r\n                          header={header}\r\n                          dataSource={this.state.log}\r\n                          pagination={{pageSize: 10}}\r\n                          renderItem={item =>\r\n                              <List.Item>\r\n                                  <span style={{fontWeight: \"bolder\", marginLeft: \"10px\"}}>\r\n                                      {this.getTime(item.time)}\r\n                                  </span>\r\n                                  <span style={{color: \"#1DA57A\", marginLeft: \"20px\"}}>\r\n                                      {item.manager}\r\n                                  </span>\r\n                                  <span>\r\n                                      对“{item.stockname}”的库存信息进行了{item.operation}\r\n                                  </span>\r\n                                  <Button type=\"link\"\r\n                                          style={{marginLeft: \"30px\"}}\r\n                                          onClick={()=>this.handleDetail(item)}\r\n                                  >详情</Button>\r\n                              </List.Item>\r\n                          }\r\n                          bordered\r\n                    />\r\n                    <StocklogView visible={this.state.visible}\r\n                              info={this.state.logInfo}\r\n                              onCancel={this.onOk}\r\n                              onOk={this.onOk}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ViewStock;","import React from 'react';\r\nimport {Form, Card, Input, Button, Select, InputNumber, Modal, message} from 'antd';\r\nimport TopNav from '../../components/top-nav/index';\r\nimport PictureWall from \"../../components/picture-wall/picture-wall\";\r\nimport {reqStockCategory, addStocklogList, updateStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst EditStock = Form.create({name: 'edit-stock-form'})(\r\n    class extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                category: [],\r\n                categoryAdd: \"\",\r\n                visible: false\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockCategory();\r\n            if(response.status === 0){\r\n                let category = [];\r\n                response.data.forEach(item => {\r\n                    category.push(item.category)\r\n                });\r\n                this.setState({category: category})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err){\r\n                    let data = {};\r\n                    data.id = this.props.location.state.data.id;\r\n                    for(let key in values){\r\n                        if(values.hasOwnProperty(key)){\r\n                            data[key] = values[key]\r\n                        }\r\n                    }\r\n                    let log = {...data};\r\n                    log.stockid = log.id;\r\n                    log.stockname = log.name;\r\n                    log.time = new Date().getTime();\r\n                    log.operation = \"编辑\";\r\n                    log.manager = memoryUtils.user.username;\r\n                    delete log.id;\r\n                    delete log.name;\r\n                    let response1 = await updateStockList(data);\r\n                    let response2 = await addStocklogList(log);\r\n                    if(response1.status===0 && response2.status===0){\r\n                        message.success(\"更新成功,即将返回商品列表\", 2);\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/stock')\r\n                        }, 2000);\r\n                    }\r\n                    \r\n                }\r\n            })\r\n        };\r\n        handleAddClick = () => {\r\n            this.setState({visible: true})\r\n        };\r\n        handleNameChange = (e) => {\r\n            this.setState({categoryAdd: e.target.value})\r\n        };\r\n        onOk = () => {\r\n            let category = this.state.category;\r\n            category.push(this.state.categoryAdd);\r\n            this.setState({\r\n                category: category,\r\n                visible: false\r\n            })\r\n        };\r\n        onCancel = () => {\r\n            this.setState({visible: false})\r\n        };\r\n        render(){\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            let initialData = this.props.location.state.data;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存信息', '编辑库存']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>编辑库存记录</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/stock')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"货物名称\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('name', {\r\n                                        initialValue: initialData.name,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物名称\"/>)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"货物种类\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('category', {\r\n                                        initialValue: initialData.category,\r\n                                        rules: [{required: true}]\r\n                                    })(\r\n                                        <Select style={{width: \"75%\"}} placeholder=\"请选择货物品类\">\r\n                                            {this.state.category.map(item => (\r\n                                                <Select.Option key={item}>{item}</Select.Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    <div style={{display: \"inline-block\", float: \"right\"}}>\r\n                                        <Button type=\"primary\"\r\n                                                onClick={this.handleAddClick}>新增品类</Button>\r\n                                        <Modal\r\n                                            title=\"新增品类\"\r\n                                            visible={this.state.visible}\r\n                                            okText=\"确认\"\r\n                                            onOk={this.onOk}\r\n                                            cancelText=\"取消\"\r\n                                            onCancel={this.onCancel}\r\n                                        >\r\n                                            <Input placeholder=\"请输入品类名称\" onChange={this.handleNameChange}/>\r\n                                        </Modal>\r\n                                    </div>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存单价\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('price', {\r\n                                        initialValue: initialData.price,\r\n                                        rules: [{required: true}]\r\n                                    })(<InputNumber />)\r\n                                }\r\n                                <span style={{marginLeft: \"10px\"}}>元</span>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存数量\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('amount', {\r\n                                        initialValue: initialData.amount,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入库存数量\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"单位\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('unit', {\r\n                                        initialValue: initialData.unit,\r\n                                        rules: [{required: true}]\r\n                                    })(<Input placeholder=\"请输入货物单位\" />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"库存监控\">\r\n                                <Input.Group compact>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('excess', {\r\n                                                initialValue: initialData.warning,\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"下限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                    <span style={{margin: \"8px 20px 0 20px\"}}>~</span>\r\n                                    <Form.Item>\r\n                                        {\r\n                                            this.props.form.getFieldDecorator('warning', {\r\n                                                initialValue: initialData.excess,\r\n                                                rules: [{required: true}]\r\n                                            })(<InputNumber placeholder=\"上限\"/> )\r\n                                        }\r\n                                    </Form.Item>\r\n                                </Input.Group>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"图片\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('pictures', {\r\n                                        initialValue: initialData.pictures.join(',')\r\n                                    })(<PictureWall imgs={initialData.pictures.join(\",\")} />)\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {\r\n                                    this.props.form.getFieldDecorator('note', {\r\n                                        initialValue: initialData.note\r\n                                    })(<Input.TextArea rows={4} placeholder=\"请输入库存备注\" /> )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default EditStock;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Input, Form, DatePicker, Table, Tag, Icon, Divider, Modal} from \"antd\";\r\nimport Loading from '../../components/loading';\r\nimport {reqInventoryList, reqStockList, reqUserList, reqInventoryUpdate, reqInventoryDelete} from '../../api';\r\n\r\nconst Inventory = Form.create({name: 'search-inventory-form'})(\r\n    class extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                isLoading: true,\r\n                data: [],\r\n                tableData: []\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqInventoryList();\r\n            this.refreshTable(response);\r\n        };\r\n        componentWillUnmount = () => {\r\n            clearTimeout(this.timerID)\r\n        };\r\n        refreshTable = async (response1) => {\r\n            const response2 = await reqUserList();\r\n            const response3 = await reqStockList();\r\n            if(response1.status===0 && response2.status===0 && response3.status===0){\r\n                let creater = [];\r\n                let data = response1.data.map(item1 => {\r\n                    response2.data.forEach(item2 => {\r\n                        if(item1.creater === item2.id){\r\n                            item1.creater = item2.username;\r\n                            creater.push(item1.creater)\r\n                        }\r\n                    });\r\n                    return item1\r\n                });\r\n                creater = new Set(creater);\r\n                let createrFilters = [];\r\n                creater.forEach(item => {\r\n                    createrFilters.push({text: item, value: item})\r\n                });\r\n                this.setState({isLoading: true});\r\n                this.timerID = setTimeout(() => {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        data: data,\r\n                        tableData: data,\r\n                        createrFilters: createrFilters,\r\n                        dateRange: []\r\n                    })\r\n                }, 300)\r\n            }\r\n        };\r\n        handleDeal = (record) => {\r\n            let data = {id: record.id, state : 1-record.state};\r\n            console.log(data);\r\n            Modal.confirm({\r\n                title: \"警告\",\r\n                content: \"确定要将单号\\\"PD\"+record.id+\"\\\"设置为已处理吗\",\r\n                okText: \"确认\",\r\n                onOk: async ()=>{\r\n                    const response = await reqInventoryUpdate(data);\r\n                    if(response.status===0){\r\n                        let data = this.state.data.map(item => {\r\n                            item.state = item.id===record.id ? 1-item.state : item.state;\r\n                            return item;\r\n                        });\r\n                        this.setState({data: data})\r\n                    }\r\n                },\r\n                cancelText: \"取消\",\r\n                onCancel: () => {}\r\n            })\r\n        };\r\n        handleDelete = async (record) => {\r\n            Modal.confirm({\r\n                title: '警告',\r\n                content:  \"确定要删除该库存记录\\\"\"+record.id+\"\\\"吗？\",\r\n                okText: '确认',\r\n                onOk: async () => {\r\n                    const response = await reqInventoryDelete(record.id);\r\n                    if(response.status === 0){\r\n                        let data=[];\r\n                        this.state.data.forEach(item => {\r\n                            item.id===record.id ? data.push() : data.push(item)\r\n                        });\r\n                        this.setState({\r\n                            data: data\r\n                        })\r\n                    }\r\n                },\r\n                cancelText: '取消',\r\n                onCancel: () => {}\r\n            });\r\n        };\r\n        handleView = (record) => {\r\n            this.props.history.push({pathname: '/inventory-view', state: {data: record}})\r\n        };\r\n        handleDatePickerChange = (renge, rangeString) => {\r\n            this.setState({dateRange: rangeString})\r\n        };\r\n        handleSearch = async (value) => {\r\n            if(!value && !this.state.dateRange[0]){\r\n                const response = await reqInventoryList();\r\n                this.refreshTable(response)\r\n            }else if(!value){\r\n                let start = new Date(this.state.dateRange[0]).getTime();\r\n                let end = new Date(this.state.dateRange[1]).getTime();\r\n                let data = this.state.data.filter(item => {\r\n                    return item.time>=start && item.time<=end\r\n                });\r\n                this.setState({isLoading: true});\r\n                this.timerID = setTimeout(()=>{\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        tableData: data\r\n                    })\r\n                }, 300)\r\n            }else if(!this.state.dateRange[0]){\r\n                let data = this.state.data.filter(item => {\r\n                    return Number(value)===item.id\r\n                });\r\n                this.setState({isLoading: true});\r\n                this.timerID = setTimeout(()=>{\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        tableData: data\r\n                    })\r\n                },300)\r\n            }else{\r\n                let start = new Date(this.state.dateRange[0]).getTime();\r\n                let end = new Date(this.state.dateRange[1]).getTime();\r\n                let data = this.state.data.filter(item => {\r\n                    return Number(value)===item.id && item.time>=start && item.time<=end\r\n                });\r\n                this.setState({isLoading: true});\r\n                this.timerID = setTimeout(()=>{\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        tableData: data\r\n                    })\r\n                },300)\r\n            }\r\n        };\r\n        getTime = (time) => {\r\n            let temp = new Date(time);\r\n            let month = temp.getMonth()+1;\r\n            return temp.getFullYear()+\"-\"+month+\"-\"+temp.getDate()+\" \"+temp.getHours()+\":\"+temp.getMinutes()\r\n        };\r\n        getVariance = (amount, expect) => {\r\n            const ret = (amount-expect).toFixed(2);\r\n            return ret>0 ? <span>+{ret}</span> : <span>{ret}</span>\r\n        };\r\n        render(){\r\n            const columns = [\r\n                {\r\n                    title: '盘点单号',\r\n                    dataIndex: 'id',\r\n                    key: 'id',\r\n                    render: (text, record) => <Button type=\"link\" onClick={()=>{this.handleView(record)}}>{text}</Button>\r\n                },\r\n                {\r\n                    title: '盘点时间',\r\n                    dataIndex: 'createtime',\r\n                    key: 'time',\r\n                    render: (text) => <span><Icon type=\"clock-circle\" />  {this.getTime(text)}</span>,\r\n                    sorter: (a, b) => a.time-b.time\r\n                },\r\n                {\r\n                    title: '盘点人',\r\n                    dataIndex: 'creater',\r\n                    key: 'creater',\r\n                    filters: this.state.createrFilters,\r\n                    onFilter: (value, record) => value===record.creatername\r\n                },\r\n                {\r\n                    title: '预期金额',\r\n                    key: 'expect',\r\n                    dataIndex: 'expect',\r\n                    render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                    sorter: (a, b) => a.expect-b.expect\r\n                },\r\n                {\r\n                    title: '盘点金额',\r\n                    key: 'amount',\r\n                    dataIndex: 'amount',\r\n                    render: (text) => <span>￥{text.toFixed(2)}</span>,\r\n                    sorter: (a, b) => a.amount-b.amount\r\n                },\r\n                {\r\n                    title: '差异金额',\r\n                    key: 'variance',\r\n                    render: (text, record) => this.getVariance(record.amount, record.expect),\r\n                    sorter: (a, b) => a.amount-b.amount\r\n                },\r\n                {\r\n                    title: '状态',\r\n                    key: 'state',\r\n                    dataIndex: 'state',\r\n                    render: (text) => text===1 ? <Tag color='green'>已处理</Tag> : <Tag color='red'>未处理</Tag>,\r\n                    filters: [{text: '已处理', value: 0}, {text: '未处理', value: 1}],\r\n                    onFilter: (value, record) => value===record.state\r\n                },\r\n                {\r\n                    title: '操作',\r\n                    key: 'operate',\r\n                    render: (text, record) => record.state===1 ?\r\n                        <div>\r\n                            <Button size=\"small\" disabled>处理</Button>\r\n                            <Divider type=\"vertical\" />\r\n                            <Button size=\"small\" type=\"danger\" disabled>删除</Button>\r\n                        </div> : <div>\r\n                            <Button size=\"small\" onClick={()=>this.handleDeal(record)}>处理</Button>\r\n                            <Divider type=\"vertical\" />\r\n                            <Button size=\"small\" type=\"danger\" onClick={()=>this.handleDelete(record)}>删除</Button>\r\n                        </div>\r\n                }\r\n            ];\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存盘点']} />\r\n                    <div className=\"stock-header\" style={{margin: \"20px\"}}>\r\n                        <Button type=\"primary\"\r\n                                style={{marginRight: \"40px\"}}\r\n                                onClick={()=>{this.props.history.push('/inventory-add')}}>新建盘点单\r\n                        </Button>\r\n                        <Input.Search\r\n                            placeholder=\"输入盘点单号\"\r\n                            style={{width: \"160px\", float: \"right\", marginLeft: \"15px\"}}\r\n                            onSearch={(value) => this.handleSearch(value)}\r\n                            enterButton\r\n                        />\r\n                        <DatePicker.RangePicker\r\n                            style={{width: \"230px\", float: \"right\"}}\r\n                            onChange={this.handleDatePickerChange}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.isLoading ? <Loading /> :\r\n                            <Table\r\n                                size=\"small\"\r\n                                style={{margin: '20px'}}\r\n                                columns={columns}\r\n                                dataSource={this.state.tableData}\r\n                                rowKey={record => record.id}\r\n                                bordered\r\n                            />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n);\r\n\r\nexport default Inventory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {Button, Card, Form, Tag} from \"antd\";\r\n\r\nclass ViewInventory extends React.Component{\r\n    getTime = (time) => {\r\n        time = new Date(Number(time));\r\n        let month = time.getMonth()+1;\r\n        return time.getFullYear()+\"-\"+month+\"-\"+time.getDate()+\"\\xa0\\xa0\"+time.getHours()+\":\"+time.getMinutes();\r\n    };\r\n    getVariance = (amount, expect) => {\r\n        const ret = (amount-expect).toFixed(2);\r\n        return ret>0 ? <span>+{ret}</span> : <span>{ret}</span>\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {span: 8},\r\n            wrapperCol: {span: 10}\r\n        };\r\n        const data = this.props.location.state.data;\r\n        return (\r\n            <div>\r\n                <TopNav nav={['库存管理', '库存盘点', '盘点详情']} />\r\n                <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>查看盘点详情</span>}\r\n                      extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/inventory')}}>返回</Button>}\r\n                      style={{width: \"100%\", border: \"none\"}}\r\n                >\r\n                    <Form {...formItemLayout} style={{marginTop: \"40px\", textIndent: \"20px\"}} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"盘点单号\">\r\n                            <span className=\"ant-form-text\">{data.id}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点时间\">\r\n                            <span className=\"ant-form-text\">{this.getTime(data.createtime)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点人\">\r\n                            <span className=\"ant-form-text\">{data.creater}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"预期金额\">\r\n                            <span className=\"ant-form-text\">￥{data.expect.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"盘点金额\">\r\n                            <span className=\"ant-form-text\">￥{data.amount.toFixed(2)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"差异金额\">\r\n                            <span className=\"ant-form-text\">{this.getVariance(data.amount, data.expect)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"状态\">\r\n                            <span className=\"ant-form-text\" style={{marginLeft: \"20px\", textIndent: 0}}>\r\n                                {data.state===0 ? <Tag color='green'>已处理</Tag> : <Tag color='red'>未处理</Tag>}\r\n                            </span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"备注\">\r\n                            <span className=\"ant-form-text\">{data.note}</span>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"详情\">\r\n                            <span className=\"ant-form-text\">{data.detail}</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewInventory;\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Input, InputNumber, Card, Button, message} from 'antd';\r\nimport TopNav from \"../../components/top-nav\";\r\nimport {reqInventoryAdd, reqStockList} from \"../../api\";\r\nimport memoryUtils from \"../../util/memoryUtils\";\r\n\r\nconst AddInventory = Form.create({ name: 'inventory-add-form' })(\r\n    class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                expect: 0\r\n            }\r\n        }\r\n        UNSAFE_componentWillMount = async () => {\r\n            const response = await reqStockList();\r\n            if(response.status === 0){\r\n                let expect = 0;\r\n                response.data.forEach(item => {\r\n                    expect = expect + item.amount * item.price;\r\n                });\r\n                this.setState({expect: expect.toFixed(2)})\r\n            }\r\n        };\r\n        handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.form.validateFields( async (err, values) => {\r\n                if(!err) {\r\n                    let data = values;\r\n                    data.createtime = new Date(data.createtime).getTime();\r\n                    data.state = 0;\r\n                    data.creater = memoryUtils.user.id;\r\n                    data.amount = data.amount.toFixed(2);\r\n                    const response = await reqInventoryAdd(data);\r\n                    if(response.status === 0){\r\n                        message.success(\"新增成功,即将返回盘点列表\");\r\n                        this.timerID = setTimeout(()=>{\r\n                            this.props.history.push('/inventory')\r\n                        }, 1500);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        getTime = () => {\r\n            let temp = new Date();\r\n            let month = temp.getMonth()+1;\r\n            return temp.getFullYear()+\"-\"+month+\"-\"+temp.getDate()+\" \"+temp.getHours()+\":\"+temp.getMinutes()\r\n        };\r\n        render() {\r\n            const formItemLayout = {\r\n                labelCol: {span: 8},\r\n                wrapperCol: {span: 10}\r\n            };\r\n            const form = this.props.form;\r\n            return (\r\n                <div>\r\n                    <TopNav nav={['库存管理', '库存盘点', '新建盘点单']}/>\r\n                    <Card title={<span style={{ color: \"#1DA57A\", fontWeight: \"bolder\", fontSize: \"20px\"}}>新建盘点单</span>}\r\n                          extra={<Button type=\"primary\" onClick={()=>{this.props.history.push('/inventory')}}>返回</Button>}\r\n                          style={{width: \"100%\", border: \"none\"}}\r\n                    >\r\n                        <Form {...formItemLayout} style={{marginTop: \"40px\"}} onSubmit={this.handleSubmit}>\r\n                            <Form.Item label=\"盘点日期\">\r\n                                {form.getFieldDecorator('createtime', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.getTime(),\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"盘点人\">\r\n                                {form.getFieldDecorator('creater', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: memoryUtils.user.username\r\n                                })(<Input disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"预期金额\">\r\n                                {form.getFieldDecorator('expect', {\r\n                                    rules: [{required: true}],\r\n                                    initialValue: this.state.expect\r\n                                })(<Input addonBefore=\"￥\" disabled/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"盘点金额\">\r\n                                {form.getFieldDecorator('amount', {\r\n                                    rules: [{required: true}]\r\n                                })(<InputNumber style={{width: \"100%\"}} placeholder=\"请输入盘点金额\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"详情\">\r\n                                {form.getFieldDecorator('detail', {\r\n                                    rules: [{required: true}]\r\n                                })(<Input.TextArea rows={4}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"备注\">\r\n                                {form.getFieldDecorator('note', {\r\n                                    initialValue: \"\"\r\n                                })(<Input.TextArea rows={2}/>)}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button style={{margin: \"50px 0 0 460px\"}} type=\"primary\" htmlType=\"submit\">完成，提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n);\r\n\r\nexport default AddInventory;","import React from 'react';\r\nimport TopNav from \"../../components/top-nav\";\r\n\r\nclass Finance extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <TopNav nav={['财务管理', '财务报表']} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Finance;","import React from 'react';\r\nimport {Switch, Redirect, Route} from 'react-router-dom';\r\nimport memoryUtils from '../../util/memoryUtils';\r\nimport {Layout} from 'antd';\r\nimport Header from '../../components/header';\r\nimport LeftNav from '../../components/left-nav';\r\nimport Home from '../../pages/home/home';\r\nimport Category from '../product/category';\r\nimport AddCategory from '../product/category-add';\r\nimport EditCategory from '../product/category-edit';\r\nimport ViewCategory from '../product/category-view';\r\nimport Product from '../../pages/product/product';\r\nimport AddProduct from '../product/product-add';\r\nimport EditProduct from '../product/product-edit';\r\nimport ViewProduct from '../product/product-view';\r\nimport Order from '../../pages/order/order';\r\nimport ViewOrder from '../../pages/order/order-view';\r\nimport OrderStage from '../order/frontdesk';\r\nimport Customer from '../../pages/customer/customer';\r\nimport AddCustomer from '../../pages/customer/customer-add';\r\nimport EditCustomer from '../../pages/customer/customer-edit';\r\nimport ViewCustomer from '../../pages/customer/customer-view';\r\nimport Employee from '../../pages/employee/employee';\r\nimport AddEmployee from '../../pages/employee/employee-add';\r\nimport ViewEmployee from '../../pages/employee/employee-view';\r\nimport EditEmployee from '../../pages/employee/employee-edit';\r\nimport Role from '../../pages/employee/role';\r\nimport AddRole from '../../pages/employee/role-add';\r\nimport EditRole from '../../pages/employee/role-edit';\r\nimport User from '../../pages/employee/user';\r\nimport AddUser from '../../pages/employee/user-add';\r\nimport EditUser from '../../pages/employee/user-edit';\r\nimport Stock from '../../pages/stock/stock';\r\nimport AddStock from '../../pages/stock/stock-add';\r\nimport StockLog from '../../pages/stock/stock-log';\r\nimport ViewStock from '../../pages/stock/stock-view';\r\nimport EditStock from '../../pages/stock/stock-edit';\r\nimport Inventory from '../stock/inventory';\r\nimport ViewInventory from \"../stock/inventory-view\";\r\nimport AddInventory from '../stock/inventory-add';\r\nimport Finance from '../../pages/finance/finance';\r\n\r\n\r\nconst {Sider,Content,Footer}=Layout;\r\n\r\nclass Admin extends React.Component{\r\n    render(){\r\n        const user=memoryUtils.user;\r\n        if(JSON.stringify(user)==='{}'){\r\n            return <Redirect to='/login' />\r\n        }else{\r\n            return (\r\n                <Layout>\r\n                    <Sider style={{height: \"100vh\", position: \"fixed\"}}>\r\n                        <LeftNav />\r\n                    </Sider>\r\n                    <Layout id=\"right\" style={{marginLeft: \"200px\"}}>\r\n                        <Header />\r\n                        <Content style={{margin: \"0 20px\", paddingBottom: \"100px\", backgroundColor: \"white\", minHeight: \"500px\"}}>\r\n                            <Switch>\r\n                                <Route path='/home' component={Home} />\r\n                                <Route path='/category' component={Category} />\r\n                                <Route path='/category-add' component={AddCategory} />\r\n                                <Route path='/category-edit' component={EditCategory} />\r\n                                <Route path='/category-view' component={ViewCategory} />\r\n                                <Route path='/product' component={Product} />\r\n                                <Route path='/product-add' component={AddProduct} />\r\n                                <Route path='/product-edit' component={EditProduct} />\r\n                                <Route path='/product-view' component={ViewProduct} />\r\n                                <Route path='/order' component={Order} />\r\n                                <Route path='/stock' component={Stock} />\r\n                                <Route path='/stock-add' component={AddStock} />\r\n                                <Route path='/stock-view' component={ViewStock} />\r\n                                <Route path='/stock-log' component={StockLog} />\r\n                                <Route path='/stock-edit' component={EditStock} />\r\n                                <Route path='/inventory' component={Inventory} />\r\n                                <Route path='/inventory-view' component={ViewInventory} />\r\n                                <Route path='/inventory-add' component={AddInventory} />\r\n                                <Route path='/customer' component={Customer} />\r\n                                <Route path='/customer-add' component={AddCustomer} />\r\n                                <Route path='/customer-edit' component={EditCustomer} />\r\n                                <Route path='/customer-view' component={ViewCustomer} />\r\n                                <Route path='/employee' component={Employee} />\r\n                                <Route path='/employee-add' component={AddEmployee} />\r\n                                <Route path='/employee-view' component={ViewEmployee} />\r\n                                <Route path='/employee-edit' component={EditEmployee} />\r\n                                <Route path='/user' component={User} />\r\n                                <Route path='/user-add' component={AddUser} />\r\n                                <Route path='/user-edit' component={EditUser} />\r\n                                <Route path='/role' component={Role} />\r\n                                <Route path='/role-add' component={AddRole} />\r\n                                <Route path='/role-edit' component={EditRole} />\r\n                                <Route path='/order' component={Order} />\r\n                                <Route path='/order-view' component={ViewOrder} />\r\n                                <Route path='/order-stage' component={OrderStage} />\r\n                                <Route path='/finance' component={Finance} />\r\n                                <Redirect to='/home' />\r\n                            </Switch>\r\n                        </Content>\r\n                        <Footer>推荐使用Chrome浏览器，可获得更佳的页面操作体验。</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin","import React from 'react';\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport Login from './pages/login/login';\r\nimport Admin from './pages/admin/admin';\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path=\"/login\" component={Login}/>\r\n                    <Route path=\"/\" component={Admin}/>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport storageUtil from './util/storageUtils';\r\nimport memoryUtils from './util/memoryUtils';\r\nimport { ConfigProvider } from 'antd';\r\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nmoment.locale('zh-cn');\r\n\r\nconst user=storageUtil.getUser();\r\nmemoryUtils.user=user;\r\n\r\nReactDOM.render(<ConfigProvider locale={zh_CN}><App /></ConfigProvider>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}